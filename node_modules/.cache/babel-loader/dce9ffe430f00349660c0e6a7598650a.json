{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Acos } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { neg } from '../ops/neg';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport var acosGradConfig = {\n  kernelName: Acos,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var a = square(cast(_x, 'float32'));\n        var b = sqrt(sub(scalar(1), a));\n        return neg(div(dy, b));\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Acos_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAR,QAAmB,iBAAnB;AAEA,SAAQ,IAAR,QAAmB,aAAnB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AACA,SAAQ,MAAR,QAAqB,eAArB;AACA,SAAQ,IAAR,QAAmB,aAAnB;AACA,SAAQ,MAAR,QAAqB,eAArB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AAGA,OAAO,IAAM,cAAc,GAAe;AACxC,EAAA,UAAU,EAAE,IAD4B;AAExC,EAAA,YAAY,EAAE,CAAC,GAAD,CAF0B;AAGxC,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAAgC;AAAA,gCAC5B,KAD4B;AAAA,QACjC,EADiC;;AAGxC,WAAO;AACL,MAAA,CAAC,EAAE,aAAK;AACN,YAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAD,EAAI,SAAJ,CAAL,CAAhB;AACA,YAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,CAAZ,CAAJ,CAAd;AACA,eAAO,GAAG,CAAC,GAAG,CAAC,EAAD,EAAK,CAAL,CAAJ,CAAV;AACD;AALI,KAAP;AAQD;AAduC,CAAnC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Acos } from '../kernel_names';\r\nimport { cast } from '../ops/cast';\r\nimport { div } from '../ops/div';\r\nimport { neg } from '../ops/neg';\r\nimport { scalar } from '../ops/scalar';\r\nimport { sqrt } from '../ops/sqrt';\r\nimport { square } from '../ops/square';\r\nimport { sub } from '../ops/sub';\r\nexport const acosGradConfig = {\r\n    kernelName: Acos,\r\n    inputsToSave: ['x'],\r\n    gradFunc: (dy, saved) => {\r\n        const [x] = saved;\r\n        return {\r\n            x: () => {\r\n                const a = square(cast(x, 'float32'));\r\n                const b = sqrt(sub(scalar(1), a));\r\n                return neg(div(dy, b));\r\n            }\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Acos_grad.js.map"]},"metadata":{},"sourceType":"module"}