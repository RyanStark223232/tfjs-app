{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\r\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\r\n * is of size `size`. See `slice` for details.\r\n */\n\nfunction slice3d_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice3d');\n  util.assert($x.rank === 3, function () {\n    return \"slice3d expects a rank-3 tensor, but got a rank-\".concat($x.rank, \" tensor\");\n  });\n  return slice($x, begin, size);\n}\n\nexport var slice3d = op({\n  slice3d_: slice3d_\n});","map":{"version":3,"sources":["../../src/ops/slice3d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,eAAR,QAA8B,oBAA9B;AAEA,OAAO,KAAK,IAAZ,MAAsB,SAAtB;AAEA,SAAQ,EAAR,QAAiB,aAAjB;AACA,SAAQ,KAAR,QAAoB,SAApB;AAEA;;;AAGG;;AACH,SAAS,QAAT,CACI,CADJ,EAC4B,KAD5B,EAEI,IAFJ,EAEkC;AAChC,MAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,SAAT,CAA1B;AACA,EAAA,IAAI,CAAC,MAAL,CACI,EAAE,CAAC,IAAH,KAAY,CADhB,EAEI;AAAA,qEACuD,EAAE,CAAC,IAD1D;AAAA,GAFJ;AAIA,SAAO,KAAK,CAAC,EAAD,EAAK,KAAL,EAAY,IAAZ,CAAZ;AACD;;AACD,OAAO,IAAM,OAAO,GAAG,EAAE,CAAC;AAAC,EAAA,QAAQ,EAAR;AAAD,CAAD,CAAlB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport * as util from '../util';\r\nimport { op } from './operation';\r\nimport { slice } from './slice';\r\n/**\r\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\r\n * is of size `size`. See `slice` for details.\r\n */\r\nfunction slice3d_(x, begin, size) {\r\n    const $x = convertToTensor(x, 'x', 'slice3d');\r\n    util.assert($x.rank === 3, () => `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\r\n    return slice($x, begin, size);\r\n}\r\nexport const slice3d = op({ slice3d_ });\r\n//# sourceMappingURL=slice3d.js.map"]},"metadata":{},"sourceType":"module"}