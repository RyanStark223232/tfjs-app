{"ast":null,"code":"import _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nexport var ClipProgram = /*#__PURE__*/function () {\n  function ClipProgram(aShape) {\n    _classCallCheck(this, ClipProgram);\n\n    this.variableNames = ['A'];\n    this.outputShape = aShape;\n    this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    \";\n  }\n\n  _createClass(ClipProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(min, max) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.minLoc == null) {\n          _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n          _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n        }\n\n        gpgpu.gl.uniform1f(_this.minLoc, min);\n        gpgpu.gl.uniform1f(_this.maxLoc, max);\n      };\n    }\n  }]);\n\n  return ClipProgram;\n}();","map":{"version":3,"sources":["../src/clip_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAKH,WAAa,WAAb;AASE,uBAAY,MAAZ,EAA4B;AAAA;;AAR5B,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AASE,SAAK,WAAL,GAAmB,MAAnB;AACA,SAAK,QAAL;AAcD;;AAzBH;AAAA;AAAA,uCA2BqB,GA3BrB,EA2BkC,GA3BlC,EA2B6C;AAAA;;AACzC,aAAO,UAAC,KAAD,EAAsB,YAAtB,EAAoD;AACzD,YAAI,KAAI,CAAC,MAAL,IAAe,IAAnB,EAAyB;AACvB,UAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACA,UAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACD;;AACD,QAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAI,CAAC,MAAxB,EAAgC,GAAhC;AACA,QAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAI,CAAC,MAAxB,EAAgC,GAAhC;AACD,OAPD;AAQD;AApCH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexport class ClipProgram {\r\n    constructor(aShape) {\r\n        this.variableNames = ['A'];\r\n        this.outputShape = aShape;\r\n        this.userCode = `\r\n      uniform float minVal;\r\n      uniform float maxVal;\r\n\r\n      void main() {\r\n        float value = getAAtOutCoords();\r\n        if (isnan(value)) {\r\n          setOutput(value);\r\n          return;\r\n        }\r\n\r\n        setOutput(clamp(value, minVal, maxVal));\r\n      }\r\n    `;\r\n    }\r\n    getCustomSetupFunc(min, max) {\r\n        return (gpgpu, webGLProgram) => {\r\n            if (this.minLoc == null) {\r\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\r\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\r\n            }\r\n            gpgpu.gl.uniform1f(this.minLoc, min);\r\n            gpgpu.gl.uniform1f(this.maxLoc, max);\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=clip_gpu.js.map"]},"metadata":{},"sourceType":"module"}