{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { add } from './add';\nimport { expandShapeToKeepDim } from './axis_util';\nimport { exp } from './exp';\nimport { log } from './log';\nimport { max } from './max';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { sub } from './sub';\nimport { sum } from './sum';\n/**\r\n * Computes the log(sum(exp(elements across the reduction dimensions)).\r\n *\r\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\r\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\r\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\r\n * If `axis` has no entries, all dimensions are reduced, and an array with a\r\n * single element is returned.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, 3]);\r\n *\r\n * x.logSumExp().print();  // or tf.logSumExp(x)\r\n * ```\r\n *\r\n * ```js\r\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\r\n *\r\n * const axis = 1;\r\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\r\n * ```\r\n * @param x The input tensor.\r\n * @param axis The dimension(s) to reduce. If null (the default),\r\n *     reduces all dimensions.\r\n * @param keepDims If true, retains reduced dimensions with length\r\n *     of 1. Defaults to false.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Reduction'}\r\n */\n\nfunction logSumExp_(x, axis = null, keepDims = false) {\n  const $x = convertToTensor(x, 'x', 'logSumExp');\n  const axes = parseAxisParam(axis, $x.shape);\n  const xMax = max($x, axes, true\n  /* keepDims */\n  );\n  const a = sub($x, xMax);\n  const b = exp(a);\n  const c = sum(b, axes);\n  const d = log(c);\n  const res = add(reshape(xMax, d.shape), d);\n\n  if (keepDims) {\n    const newShape = expandShapeToKeepDim(res.shape, axes);\n    return reshape(res, newShape);\n  }\n\n  return res;\n}\n\nexport const logSumExp = op({\n  logSumExp_\n});","map":{"version":3,"sources":["../../src/ops/log_sum_exp.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,eAAR,QAA8B,oBAA9B;AAEA,SAAQ,cAAR,QAA6B,SAA7B;AAEA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,oBAAR,QAAmC,aAAnC;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,EAAR,QAAiB,aAAjB;AACA,SAAQ,OAAR,QAAsB,WAAtB;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,GAAR,QAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;;AACH,SAAS,UAAT,CACI,CADJ,EAC0B,IAAA,GAAwB,IADlD,EACwD,QAAQ,GAAG,KADnE,EACwE;AACtE,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,WAAT,CAA1B;AAEA,QAAM,IAAI,GAAG,cAAc,CAAC,IAAD,EAAO,EAAE,CAAC,KAAV,CAA3B;AACA,QAAM,IAAI,GAAG,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW;AAAK;AAAhB,GAAhB;AACA,QAAM,CAAC,GAAG,GAAG,CAAC,EAAD,EAAK,IAAL,CAAb;AACA,QAAM,CAAC,GAAG,GAAG,CAAC,CAAD,CAAb;AACA,QAAM,CAAC,GAAG,GAAG,CAAC,CAAD,EAAI,IAAJ,CAAb;AACA,QAAM,CAAC,GAAG,GAAG,CAAC,CAAD,CAAb;AACA,QAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAD,EAAO,CAAC,CAAC,KAAT,CAAR,EAAyB,CAAzB,CAAf;;AAEA,MAAI,QAAJ,EAAc;AACZ,UAAM,QAAQ,GAAG,oBAAoB,CAAC,GAAG,CAAC,KAAL,EAAY,IAAZ,CAArC;AACA,WAAO,OAAO,CAAC,GAAD,EAAM,QAAN,CAAd;AACD;;AACD,SAAO,GAAP;AACD;;AAED,OAAO,MAAM,SAAS,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAApB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { parseAxisParam } from '../util';\r\nimport { add } from './add';\r\nimport { expandShapeToKeepDim } from './axis_util';\r\nimport { exp } from './exp';\r\nimport { log } from './log';\r\nimport { max } from './max';\r\nimport { op } from './operation';\r\nimport { reshape } from './reshape';\r\nimport { sub } from './sub';\r\nimport { sum } from './sum';\r\n/**\r\n * Computes the log(sum(exp(elements across the reduction dimensions)).\r\n *\r\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\r\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\r\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\r\n * If `axis` has no entries, all dimensions are reduced, and an array with a\r\n * single element is returned.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, 3]);\r\n *\r\n * x.logSumExp().print();  // or tf.logSumExp(x)\r\n * ```\r\n *\r\n * ```js\r\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\r\n *\r\n * const axis = 1;\r\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\r\n * ```\r\n * @param x The input tensor.\r\n * @param axis The dimension(s) to reduce. If null (the default),\r\n *     reduces all dimensions.\r\n * @param keepDims If true, retains reduced dimensions with length\r\n *     of 1. Defaults to false.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Reduction'}\r\n */\r\nfunction logSumExp_(x, axis = null, keepDims = false) {\r\n    const $x = convertToTensor(x, 'x', 'logSumExp');\r\n    const axes = parseAxisParam(axis, $x.shape);\r\n    const xMax = max($x, axes, true /* keepDims */);\r\n    const a = sub($x, xMax);\r\n    const b = exp(a);\r\n    const c = sum(b, axes);\r\n    const d = log(c);\r\n    const res = add(reshape(xMax, d.shape), d);\r\n    if (keepDims) {\r\n        const newShape = expandShapeToKeepDim(res.shape, axes);\r\n        return reshape(res, newShape);\r\n    }\r\n    return res;\r\n}\r\nexport const logSumExp = op({ logSumExp_ });\r\n//# sourceMappingURL=log_sum_exp.js.map"]},"metadata":{},"sourceType":"module"}