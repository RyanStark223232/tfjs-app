{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nexport const nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgl',\n  kernelFunc: ({\n    inputs,\n    backend,\n    attrs\n  }) => {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n    const {\n      boxes,\n      scores\n    } = inputs;\n    const {\n      maxOutputSize,\n      iouThreshold,\n      scoreThreshold\n    } = attrs;\n    const gpuBackend = backend;\n    const boxesVals = gpuBackend.readSync(boxes.dataId);\n    const scoresVals = gpuBackend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    return kernel_impls.nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal);\n  }\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV3.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,YAAtB,EAAkD,mBAAlD,QAA6I,uBAA7I;AAGA,OAAO,MAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,OAFwC;AAGrD,EAAA,UAAU,EAAE,CAAC;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,GAAD,KAA6B;AACvC,IAAA,YAAY,CAAC,IAAb,CACI,0DACA,0CAFJ;AAIA,UAAM;AAAC,MAAA,KAAD;AAAQ,MAAA;AAAR,QAAkB,MAAxB;AACA,UAAM;AAAC,MAAA,aAAD;AAAgB,MAAA,YAAhB;AAA8B,MAAA;AAA9B,QACF,KADJ;AAGA,UAAM,UAAU,GAAG,OAAnB;AAEA,UAAM,SAAS,GAAG,UAAU,CAAC,QAAX,CAAoB,KAAK,CAAC,MAA1B,CAAlB;AACA,UAAM,UAAU,GAAG,UAAU,CAAC,QAAX,CAAoB,MAAM,CAAC,MAA3B,CAAnB;AAEA,UAAM,gBAAgB,GAAG,aAAzB;AACA,UAAM,eAAe,GAAG,YAAxB;AACA,UAAM,iBAAiB,GAAG,cAA1B;AAEA,WAAO,YAAY,CAAC,uBAAb,CACH,SADG,EACQ,UADR,EACoB,gBADpB,EACsC,eADtC,EAEH,iBAFG,CAAP;AAGD;AAxBoD,CAAhD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { backend_util, kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\r\nexport const nonMaxSuppressionV3Config = {\r\n    kernelName: NonMaxSuppressionV3,\r\n    backendName: 'webgl',\r\n    kernelFunc: ({ inputs, backend, attrs }) => {\r\n        backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\r\n            'Call tf.nonMaxSuppressionAsync() instead');\r\n        const { boxes, scores } = inputs;\r\n        const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\r\n        const gpuBackend = backend;\r\n        const boxesVals = gpuBackend.readSync(boxes.dataId);\r\n        const scoresVals = gpuBackend.readSync(scores.dataId);\r\n        const maxOutputSizeVal = maxOutputSize;\r\n        const iouThresholdVal = iouThreshold;\r\n        const scoreThresholdVal = scoreThreshold;\r\n        return kernel_impls.nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal);\r\n    }\r\n};\r\n//# sourceMappingURL=NonMaxSuppressionV3.js.map"]},"metadata":{},"sourceType":"module"}