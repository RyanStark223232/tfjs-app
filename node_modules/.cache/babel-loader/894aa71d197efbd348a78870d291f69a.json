{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport class FromPixelsProgram {\n  constructor(outputShape) {\n    this.variableNames = ['A'];\n    const glsl = getGlslDifferences();\n    const [height, width] = outputShape;\n    this.outputShape = outputShape;\n    this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${height}.0);\n\n        vec4 values = ${glsl.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `;\n  }\n\n}","map":{"version":3,"sources":["../../../src/kernels/FromPixels_utils/from_pixels_gpu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,kBAAR,QAAiC,oBAAjC;AAGA,OAAM,MAAO,iBAAP,CAAwB;AAK5B,EAAA,WAAA,CAAY,WAAZ,EAAiC;AAJjC,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAKE,UAAM,IAAI,GAAG,kBAAkB,EAA/B;AACA,UAAM,CAAC,MAAD,EAAS,KAAT,IAAoB,WAA1B;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,QAAL,GAAgB;;;;;;uDAMmC,KAAK,OAAO,MAAM;;wBAEjD,IAAI,CAAC,SAAS;;;;;;;;;;;;;;AAcjC,KAtBD;AAuBD;;AAhC2B","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { getGlslDifferences } from '../../glsl_version';\r\nexport class FromPixelsProgram {\r\n    constructor(outputShape) {\r\n        this.variableNames = ['A'];\r\n        const glsl = getGlslDifferences();\r\n        const [height, width,] = outputShape;\r\n        this.outputShape = outputShape;\r\n        this.userCode = `\r\n      void main() {\r\n        ivec3 coords = getOutputCoords();\r\n        int texR = coords[0];\r\n        int texC = coords[1];\r\n        int depth = coords[2];\r\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${height}.0);\r\n\r\n        vec4 values = ${glsl.texture2D}(A, uv);\r\n        float value;\r\n        if (depth == 0) {\r\n          value = values.r;\r\n        } else if (depth == 1) {\r\n          value = values.g;\r\n        } else if (depth == 2) {\r\n          value = values.b;\r\n        } else if (depth == 3) {\r\n          value = values.a;\r\n        }\r\n\r\n        setOutput(floor(value * 255.0 + 0.5));\r\n      }\r\n    `;\r\n    }\r\n}\r\n//# sourceMappingURL=from_pixels_gpu.js.map"]},"metadata":{},"sourceType":"module"}