{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nexport const json = [{\n  'tfOpName': 'LoopCond',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Switch',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Merge',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }]\n}, {\n  'tfOpName': 'Enter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'frame_name',\n    'name': 'frameName',\n    'type': 'string'\n  }, {\n    'tfName': 'is_constant',\n    'name': 'isConstant',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Exit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'NextIteration',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'size',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'dynamic_size',\n    'name': 'dynamicSize',\n    'type': 'bool'\n  }, {\n    'tfName': 'clear_after_read',\n    'name': 'clearAfterRead',\n    'type': 'bool'\n  }, {\n    'tfName': 'identical_element_shapes',\n    'name': 'identicalElementShapes',\n    'type': 'bool'\n  }, {\n    'tfName': 'tensor_array_name',\n    'name': 'name',\n    'type': 'string'\n  }]\n}, {\n  'tfOpName': 'TensorArrayWriteV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayReadV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayGatherV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }]\n}, {\n  'tfOpName': 'TensorArrayScatterV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArrayConcatV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape_except0',\n    'name': 'elementShapeExcept0',\n    'type': 'shape',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArraySplitV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArraySizeV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'TensorArrayCloseV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'StatelessIf',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'If',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'StatelessWhile',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'While',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'TensorListScatter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListScatterV2',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 3,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGather',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListReserve',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 1,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListFromTensor',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListStack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }, {\n    'tfName': 'num_elements',\n    'name': 'numElements',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSplit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListConcat',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPopBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPushBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/control.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexport const json = [\r\n    {\r\n        'tfOpName': 'LoopCond',\r\n        'category': 'control',\r\n        'inputs': [{ 'start': 0, 'name': 'pred', 'type': 'tensor' }]\r\n    },\r\n    {\r\n        'tfOpName': 'Switch',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'data', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'pred', 'type': 'tensor' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Merge',\r\n        'category': 'control',\r\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' }]\r\n    },\r\n    {\r\n        'tfOpName': 'Enter',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\r\n            { 'tfName': 'frame_name', 'name': 'frameName', 'type': 'string' },\r\n            { 'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Exit',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'NextIteration',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'size', 'type': 'number' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\r\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' },\r\n            { 'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool' },\r\n            { 'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool' },\r\n            {\r\n                'tfName': 'identical_element_shapes',\r\n                'name': 'identicalElementShapes',\r\n                'type': 'bool'\r\n            },\r\n            { 'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayWriteV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'index', 'type': 'number' },\r\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayReadV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'index', 'type': 'number' },\r\n            { 'start': 2, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [{\r\n                'tfName': 'dtype',\r\n                'name': 'dtype',\r\n                'type': 'dtype',\r\n                'notSupported': true\r\n            }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayGatherV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\r\n            { 'start': 2, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\r\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayScatterV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\r\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayConcatV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }, {\r\n                'tfName': 'element_shape_except0',\r\n                'name': 'elementShapeExcept0',\r\n                'type': 'shape',\r\n                'notSupported': true\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArraySplitV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 2, 'name': 'lengths', 'type': 'number[]' },\r\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArraySizeV3',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'flowIn', 'type': 'number' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorArrayCloseV3',\r\n        'category': 'control',\r\n        'inputs': [{ 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' }]\r\n    },\r\n    {\r\n        'tfOpName': 'StatelessIf',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'cond', 'type': 'tensor' },\r\n            { 'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors' }\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func' },\r\n            { 'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'If',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'cond', 'type': 'tensor' },\r\n            { 'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors' }\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func' },\r\n            { 'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'StatelessWhile',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'cond', 'name': 'cond', 'type': 'func' },\r\n            { 'tfName': 'body', 'name': 'body', 'type': 'func' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'While',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'cond', 'name': 'cond', 'type': 'func' },\r\n            { 'tfName': 'body', 'name': 'body', 'type': 'func' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListScatter',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\r\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' }\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListScatterV2',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\r\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\r\n            { 'start': 3, 'name': 'numElements', 'type': 'number' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListGather',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\r\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListGetItem',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'index', 'type': 'number' },\r\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListSetItem',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'index', 'type': 'number' },\r\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListReserve',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'elementShape', 'type': 'shape' },\r\n            { 'start': 1, 'name': 'numElements', 'type': 'number' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListFromTensor',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' }\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListStack',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' },\r\n            { 'tfName': 'num_elements', 'name': 'numElements', 'type': 'dtype' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListSplit',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\r\n            { 'start': 2, 'name': 'lengths', 'type': 'number[]' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListConcat',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' },\r\n            { 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListPopBack',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n    {\r\n        'tfOpName': 'TensorListPushBack',\r\n        'category': 'control',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'tensor', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\r\n    },\r\n];\r\n//# sourceMappingURL=control.js.map"]},"metadata":{},"sourceType":"module"}