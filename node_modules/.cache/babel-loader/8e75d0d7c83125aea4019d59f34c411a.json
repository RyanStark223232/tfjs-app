{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Conv2D } from '../kernel_names';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport * as util from '../util';\nexport var conv2DGradConfig = {\n  kernelName: Conv2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x4D = _saved[0],\n        $filter = _saved[1];\n\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat;\n    util.assert(conv_util.tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of conv2D: dilation rates greater than 1 ' + \"are not yet supported in gradients. Got dilations '\".concat(dilations, \"'\");\n    });\n    return {\n      x: function x() {\n        return conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Conv2D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAAkC,iBAAlC;AAEA,SAAQ,oBAAR,QAAmC,+BAAnC;AACA,SAAQ,mBAAR,QAAkC,8BAAlC;AACA,OAAO,KAAK,SAAZ,MAA2B,kBAA3B;AAEA,OAAO,KAAK,IAAZ,MAAsB,SAAtB;AAEA,OAAO,IAAM,gBAAgB,GAAe;AAC1C,EAAA,UAAU,EAAE,MAD8B;AAE1C,EAAA,YAAY,EAAE,CAAC,GAAD,EAAM,QAAN,CAF4B;AAG1C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAe,KAAf,EAAgC,KAAhC,EAAuD;AAAA,gCACxC,KADwC;AAAA,QACxD,GADwD;AAAA,QACnD,OADmD;;AAAA,QAExD,SAFwD,GAEjB,KAFiB,CAExD,SAFwD;AAAA,QAE7C,OAF6C,GAEjB,KAFiB,CAE7C,OAF6C;AAAA,QAEpC,GAFoC,GAEjB,KAFiB,CAEpC,GAFoC;AAAA,QAE/B,UAF+B,GAEjB,KAFiB,CAE/B,UAF+B;AAI/D,IAAA,IAAI,CAAC,MAAL,CACI,SAAS,CAAC,iBAAV,CAA4B,SAA5B,CADJ,EAEI;AAAA,aAAM,6HACoD,SADpD,MAAN;AAAA,KAFJ;AAKA,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eACC,mBAAmB,CAAC,GAAG,CAAC,KAAL,EAAY,EAAZ,EAAgB,OAAhB,EAAyB,OAAzB,EAAkC,GAAlC,EAAuC,UAAvC,CADpB;AAAA,OADE;AAGL,MAAA,MAAM,EAAE;AAAA,eACJ,oBAAoB,CAAC,GAAD,EAAM,EAAN,EAAU,OAAO,CAAC,KAAlB,EAAyB,OAAzB,EAAkC,GAAlC,EAAuC,UAAvC,CADhB;AAAA;AAHH,KAAP;AAMD;AAlByC,CAArC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Conv2D } from '../kernel_names';\r\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\r\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\r\nimport * as conv_util from '../ops/conv_util';\r\nimport * as util from '../util';\r\nexport const conv2DGradConfig = {\r\n    kernelName: Conv2D,\r\n    inputsToSave: ['x', 'filter'],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const [x4D, $filter] = saved;\r\n        const { dilations, strides, pad, dataFormat } = attrs;\r\n        util.assert(conv_util.tupleValuesAreOne(dilations), () => 'Error in gradient of conv2D: dilation rates greater than 1 ' +\r\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\r\n        return {\r\n            x: () => conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat),\r\n            filter: () => conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat)\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Conv2D_grad.js.map"]},"metadata":{},"sourceType":"module"}