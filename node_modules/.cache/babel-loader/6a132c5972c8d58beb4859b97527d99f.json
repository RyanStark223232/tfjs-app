{"ast":null,"code":"import _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var TransposeProgram = function TransposeProgram(aShape, newDim) {\n  _classCallCheck(this, TransposeProgram);\n\n  this.variableNames = ['A'];\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[newDim[i]];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var switched = getSwitchedCoords(newDim);\n  this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" resRC = getOutputCoords();\\n      setOutput(getA(\").concat(switched, \"));\\n    }\\n    \");\n};\n\nfunction getSwitchedCoords(newDim) {\n  var rank = newDim.length;\n\n  if (rank > 6) {\n    throw Error(\"Transpose for rank \".concat(rank, \" is not yet supported\"));\n  }\n\n  var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  var switchedCoords = new Array(rank);\n\n  for (var i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n\n  return switchedCoords.join();\n}","map":{"version":3,"sources":["../src/transpose_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,WAAa,gBAAb,GAME,0BAAY,MAAZ,EAA8B,MAA9B,EAA8C;AAAA;;AAL9C,OAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAME,MAAM,WAAW,GAAa,IAAI,KAAJ,CAAU,MAAM,CAAC,MAAjB,CAA9B;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,IAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,MAAM,CAAC,MAAM,CAAC,CAAD,CAAP,CAAvB;AACD;;AACD,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,IAAL,GAAY,WAAW,CAAC,MAAxB;AACA,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAN,CAA/B;AACA,MAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAD,CAAlC;AAEA,OAAK,QAAL,wCAEI,KAFJ,+DAGmB,QAHnB;AAMD,CAtBH;;AAyBA,SAAS,iBAAT,CAA2B,MAA3B,EAA2C;AACzC,MAAM,IAAI,GAAG,MAAM,CAAC,MAApB;;AACA,MAAI,IAAI,GAAG,CAAX,EAAc;AACZ,UAAM,KAAK,8BAAuB,IAAvB,2BAAX;AACD;;AACD,MAAM,aAAa,GACf,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CADJ;AAEA,MAAM,cAAc,GAAG,IAAI,KAAJ,CAAU,IAAV,CAAvB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,IAAA,cAAc,CAAC,MAAM,CAAC,CAAD,CAAP,CAAd,GAA4B,aAAa,CAAC,CAAD,CAAzC;AACD;;AACD,SAAO,cAAc,CAAC,IAAf,EAAP;AACD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { getCoordsDataType } from './shader_compiler';\r\nexport class TransposeProgram {\r\n    constructor(aShape, newDim) {\r\n        this.variableNames = ['A'];\r\n        const outputShape = new Array(aShape.length);\r\n        for (let i = 0; i < outputShape.length; i++) {\r\n            outputShape[i] = aShape[newDim[i]];\r\n        }\r\n        this.outputShape = outputShape;\r\n        this.rank = outputShape.length;\r\n        const dtype = getCoordsDataType(this.rank);\r\n        const switched = getSwitchedCoords(newDim);\r\n        this.userCode = `\r\n    void main() {\r\n      ${dtype} resRC = getOutputCoords();\r\n      setOutput(getA(${switched}));\r\n    }\r\n    `;\r\n    }\r\n}\r\nfunction getSwitchedCoords(newDim) {\r\n    const rank = newDim.length;\r\n    if (rank > 6) {\r\n        throw Error(`Transpose for rank ${rank} is not yet supported`);\r\n    }\r\n    const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\r\n    const switchedCoords = new Array(rank);\r\n    for (let i = 0; i < newDim.length; i++) {\r\n        switchedCoords[newDim[i]] = originalOrder[i];\r\n    }\r\n    return switchedCoords.join();\r\n}\r\n//# sourceMappingURL=transpose_gpu.js.map"]},"metadata":{},"sourceType":"module"}