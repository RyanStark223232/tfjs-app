{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Div } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils'; // Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\n\nvar DIV = \"\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;\"; // We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\n\nvar DIV_PACKED = \"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n\";\nexport var divKernelFunc = binaryKernelFunc(DIV, DIV_PACKED, true\n/* checkOutOfBoundsForPackedProgram */\n);\nexport var divConfig = {\n  kernelName: Div,\n  backendName: 'webgl',\n  kernelFunc: divKernelFunc\n};","map":{"version":3,"sources":["../../src/kernels/Div.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAR,QAAkB,uBAAlB;AAEA,SAAQ,gBAAR,QAA+B,oCAA/B,C,CAEA;AACA;;AACA,IAAM,GAAG,sDAAT,C,CAMA;AACA;;AACA,IAAM,UAAU,yTAAhB;AAoBA,OAAO,IAAM,aAAa,GAAG,gBAAgB,CACzC,GADyC,EACpC,UADoC,EACxB;AAAK;AADmB,CAAtC;AAGP,OAAO,IAAM,SAAS,GAAiB;AACrC,EAAA,UAAU,EAAE,GADyB;AAErC,EAAA,WAAW,EAAE,OAFwB;AAGrC,EAAA,UAAU,EAAE;AAHyB,CAAhC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Div } from '@tensorflow/tfjs-core';\r\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\r\n// Without the equality check div produces 0.9999 for a = b, which when\r\n// floored can cause errors.\r\nconst DIV = `\r\nif (a == b) {\r\n  return 1.0;\r\n};\r\nreturn a / b;`;\r\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\r\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\r\nconst DIV_PACKED = `\r\n  // vec4 one = vec4(equal(a, b));\r\n  // return one + (vec4(1.0) - one) * a / b;\r\n  vec4 result = a / b;\r\n  if(a.x == b.x) {\r\n    result.x = 1.;\r\n  }\r\n  if(a.y == b.y) {\r\n    result.y = 1.;\r\n  }\r\n  if(a.z == b.z) {\r\n    result.z = 1.;\r\n  }\r\n  if(a.w == b.w) {\r\n    result.w = 1.;\r\n  }\r\n\r\n  return result;\r\n`;\r\nexport const divKernelFunc = binaryKernelFunc(DIV, DIV_PACKED, true /* checkOutOfBoundsForPackedProgram */);\r\nexport const divConfig = {\r\n    kernelName: Div,\r\n    backendName: 'webgl',\r\n    kernelFunc: divKernelFunc,\r\n};\r\n//# sourceMappingURL=Div.js.map"]},"metadata":{},"sourceType":"module"}