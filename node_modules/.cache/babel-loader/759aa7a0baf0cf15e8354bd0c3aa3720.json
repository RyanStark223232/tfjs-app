{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { MaxPool3D } from '../kernel_names';\nimport { maxPool3dBackprop } from '../ops/max_pool_3d_backprop';\nexport const maxPool3DGradConfig = {\n  kernelName: MaxPool3D,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy, saved, attrs) => {\n    const [x, y] = saved;\n    const {\n      filterSize,\n      strides,\n      dilations,\n      pad,\n      dimRoundingMode\n    } = attrs;\n    const $dilations = dilations == null ? [1, 1, 1] : dilations;\n    return {\n      x: () => maxPool3dBackprop(dy, x, y, filterSize, strides, $dilations, pad, dimRoundingMode)\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/MaxPool3D_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR,QAAwC,iBAAxC;AAEA,SAAQ,iBAAR,QAAgC,6BAAhC;AAGA,OAAO,MAAM,mBAAmB,GAAe;AAC7C,EAAA,UAAU,EAAE,SADiC;AAE7C,EAAA,YAAY,EAAE,CAAC,GAAD,CAF+B;AAG7C,EAAA,aAAa,EAAE,CAAC,IAAD,CAH8B;AAI7C,EAAA,QAAQ,EAAE,CAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,KAAqD;AAC7D,UAAM,CAAC,CAAD,EAAI,CAAJ,IAAS,KAAf;AACA,UAAM;AAAC,MAAA,UAAD;AAAa,MAAA,OAAb;AAAsB,MAAA,SAAtB;AAAiC,MAAA,GAAjC;AAAsC,MAAA;AAAtC,QACF,KADJ;AAGA,UAAM,UAAU,GACZ,SAAS,IAAI,IAAb,GAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB,GAA4D,SADhE;AAGA,WAAO;AACL,MAAA,CAAC,EAAE,MAAM,iBAAiB,CACtB,EADsB,EACN,CADM,EACH,CADG,EACA,UADA,EACY,OADZ,EACqB,UADrB,EACiC,GADjC,EAEtB,eAFsB;AADrB,KAAP;AAKD;AAjB4C,CAAxC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { MaxPool3D } from '../kernel_names';\r\nimport { maxPool3dBackprop } from '../ops/max_pool_3d_backprop';\r\nexport const maxPool3DGradConfig = {\r\n    kernelName: MaxPool3D,\r\n    inputsToSave: ['x'],\r\n    outputsToSave: [true],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const [x, y] = saved;\r\n        const { filterSize, strides, dilations, pad, dimRoundingMode } = attrs;\r\n        const $dilations = dilations == null ? [1, 1, 1] : dilations;\r\n        return {\r\n            x: () => maxPool3dBackprop(dy, x, y, filterSize, strides, $dilations, pad, dimRoundingMode)\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=MaxPool3D_grad.js.map"]},"metadata":{},"sourceType":"module"}