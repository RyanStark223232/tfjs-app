{"ast":null,"code":"import { factory } from '../../utils/factory';\nimport { deepMap } from '../../utils/collection';\nimport { expm1Number } from '../../plain/number';\nvar name = 'expm1';\nvar dependencies = ['typed', 'Complex'];\nexport var createExpm1 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      _Complex = _ref.Complex;\n  /**\r\n   * Calculate the value of subtracting 1 from the exponential value.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.expm1(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.expm1(2)                      // returns number 6.38905609893065\r\n   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495\r\n   *    math.log(math.expm1(2) + 1)        // returns number 2\r\n   *\r\n   *    math.expm1([1, 2, 3])\r\n   *    // returns Array [\r\n   *    //   1.718281828459045,\r\n   *    //   6.3890560989306495,\r\n   *    //   19.085536923187668\r\n   *    // ]\r\n   *\r\n   * See also:\r\n   *\r\n   *    exp, log, pow\r\n   *\r\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1\r\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\r\n   */\n\n  return typed(name, {\n    number: expm1Number,\n    Complex: function Complex(x) {\n      var r = Math.exp(x.re);\n      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.exp().minus(1);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/mathjs/es/function/arithmetic/expm1.js"],"names":["factory","deepMap","expm1Number","name","dependencies","createExpm1","_ref","typed","_Complex","Complex","number","x","r","Math","exp","re","cos","im","sin","BigNumber","minus","ArrayMatrix"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,IAAIC,IAAI,GAAG,OAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,SAAV,CAAnB;AACA,OAAO,IAAIC,WAAW,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAqB,UAAUE,IAAV,EAAgB;AAClF,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACG,OADpB;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAOF,KAAK,CAACJ,IAAD,EAAO;AACjBO,IAAAA,MAAM,EAAER,WADS;AAEjBO,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBE,CAAjB,EAAoB;AAC3B,UAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,CAAC,CAACI,EAAX,CAAR;AACA,aAAO,IAAIP,QAAJ,CAAaI,CAAC,GAAGC,IAAI,CAACG,GAAL,CAASL,CAAC,CAACM,EAAX,CAAJ,GAAqB,CAAlC,EAAqCL,CAAC,GAAGC,IAAI,CAACK,GAAL,CAASP,CAAC,CAACM,EAAX,CAAzC,CAAP;AACD,KALgB;AAMjBE,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBR,CAAnB,EAAsB;AAC/B,aAAOA,CAAC,CAACG,GAAF,GAAQM,KAAR,CAAc,CAAd,CAAP;AACD,KARgB;AASjB,sBAAkB,SAASC,WAAT,CAAqBV,CAArB,EAAwB;AACxC,aAAOV,OAAO,CAACU,CAAD,EAAI,IAAJ,CAAd;AACD;AAXgB,GAAP,CAAZ;AAaD,CA7C8C,CAAxC","sourcesContent":["import { factory } from '../../utils/factory';\r\nimport { deepMap } from '../../utils/collection';\r\nimport { expm1Number } from '../../plain/number';\r\nvar name = 'expm1';\r\nvar dependencies = ['typed', 'Complex'];\r\nexport var createExpm1 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\r\n  var typed = _ref.typed,\r\n      _Complex = _ref.Complex;\r\n\r\n  /**\r\n   * Calculate the value of subtracting 1 from the exponential value.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.expm1(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.expm1(2)                      // returns number 6.38905609893065\r\n   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495\r\n   *    math.log(math.expm1(2) + 1)        // returns number 2\r\n   *\r\n   *    math.expm1([1, 2, 3])\r\n   *    // returns Array [\r\n   *    //   1.718281828459045,\r\n   *    //   6.3890560989306495,\r\n   *    //   19.085536923187668\r\n   *    // ]\r\n   *\r\n   * See also:\r\n   *\r\n   *    exp, log, pow\r\n   *\r\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1\r\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\r\n   */\r\n  return typed(name, {\r\n    number: expm1Number,\r\n    Complex: function Complex(x) {\r\n      var r = Math.exp(x.re);\r\n      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.exp().minus(1);\r\n    },\r\n    'Array | Matrix': function ArrayMatrix(x) {\r\n      return deepMap(x, this);\r\n    }\r\n  });\r\n});"]},"metadata":{},"sourceType":"module"}