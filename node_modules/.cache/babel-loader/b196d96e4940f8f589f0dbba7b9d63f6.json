{"ast":null,"code":"// Points for fingers\n\n/*\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };*/\n// Infinity Gauntlet Style\nconst style = {\n  0: {\n    color: \"gold\",\n    size: 15\n  },\n  1: {\n    color: \"gold\",\n    size: 6\n  },\n  2: {\n    color: \"gold\",\n    size: 10\n  },\n  3: {\n    color: \"gold\",\n    size: 6\n  },\n  4: {\n    color: \"red\",\n    size: 6\n  },\n  5: {\n    color: \"gold\",\n    size: 10\n  },\n  6: {\n    color: \"gold\",\n    size: 6\n  },\n  7: {\n    color: \"gold\",\n    size: 6\n  },\n  8: {\n    color: \"red\",\n    size: 6\n  },\n  9: {\n    color: \"gold\",\n    size: 10\n  },\n  10: {\n    color: \"gold\",\n    size: 6\n  },\n  11: {\n    color: \"gold\",\n    size: 6\n  },\n  12: {\n    color: \"gold\",\n    size: 6\n  },\n  13: {\n    color: \"gold\",\n    size: 10\n  },\n  14: {\n    color: \"gold\",\n    size: 6\n  },\n  15: {\n    color: \"gold\",\n    size: 6\n  },\n  16: {\n    color: \"gold\",\n    size: 6\n  },\n  17: {\n    color: \"gold\",\n    size: 10\n  },\n  18: {\n    color: \"gold\",\n    size: 6\n  },\n  19: {\n    color: \"gold\",\n    size: 6\n  },\n  20: {\n    color: \"gold\",\n    size: 6\n  }\n}; // Drawing function\n\nexport const drawHand = (predictions, ctx) => {\n  // Check if we have predictions\n  if (predictions.length > 0) {\n    // Loop through each prediction\n    predictions.forEach(prediction => {\n      // Grab landmarks\n      const landmarks = prediction.landmarks;\n      ctx.beginPath();\n      ctx.moveTo(landmarks[8][0], landmarks[8][1]);\n      ctx.lineTo(landmarks[4][0], landmarks[4][1]);\n      ctx.strokeStyle = \"plum\";\n      ctx.lineWidth = 4;\n      ctx.stroke(); // Loop through landmarks and draw em\n\n      for (let i = 0; i < landmarks.length; i++) {\n        // Get x point\n        const x = landmarks[i][0]; // Get y point\n\n        const y = landmarks[i][1]; // Start drawing\n\n        ctx.beginPath();\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI); // Set line color\n\n        ctx.fillStyle = style[i][\"color\"];\n        ctx.fill();\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/wongh/finger/src/utilities.js"],"names":["style","color","size","drawHand","predictions","ctx","length","forEach","prediction","landmarks","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill"],"mappings":"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","sourcesContent":["// Points for fingers\r\n/*\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };*/\r\n  \r\n  // Infinity Gauntlet Style\r\n  const style = {\r\n    0: { color: \"gold\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"gold\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"red\", size: 6 },\r\n    5: { color: \"gold\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"red\", size: 6 },\r\n    9: { color: \"gold\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"gold\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"gold\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n  \r\n  // Drawing function\r\n  export const drawHand = (predictions, ctx) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n        ctx.beginPath();\r\n        ctx.moveTo(landmarks[8][0], landmarks[8][1]);\r\n        ctx.lineTo(landmarks[4][0], landmarks[4][1]);\r\n        \r\n        ctx.strokeStyle = \"plum\";\r\n        ctx.lineWidth = 4;\r\n        ctx.stroke();\r\n\r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}