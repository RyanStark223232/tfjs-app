{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nexport const json = [{\n  'tfOpName': 'Equal',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'NotEqual',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Greater',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'GreaterEqual',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Less',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LessEqual',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LogicalAnd',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LogicalNot',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LogicalOr',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Select',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'condition',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'SelectV2',\n  'category': 'logical',\n  'inputs': [{\n    'start': 0,\n    'name': 'condition',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/logical.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexport const json = [\r\n    {\r\n        'tfOpName': 'Equal',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'NotEqual',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Greater',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'GreaterEqual',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Less',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'LessEqual',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'LogicalAnd',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'LogicalNot',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'LogicalOr',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Select',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'condition', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 2, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'SelectV2',\r\n        'category': 'logical',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'condition', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'a', 'type': 'tensor' },\r\n            { 'start': 2, 'name': 'b', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [{\r\n                'tfName': 'T',\r\n                'name': 'dtype',\r\n                'type': 'dtype',\r\n                'notSupported': true\r\n            }]\r\n    }\r\n];\r\n//# sourceMappingURL=logical.js.map"]},"metadata":{},"sourceType":"module"}