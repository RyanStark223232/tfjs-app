{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nexport const json = [{\n  'tfOpName': 'AvgPool',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPool',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPoolWithArgmax',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'include_batch_in_index',\n    'name': 'includeBatchInIndex',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'AvgPool3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPool3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Conv1D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'stride',\n    'name': 'stride',\n    'type': 'number'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NWC'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'dilation',\n    'name': 'dilation',\n    'type': 'number',\n    'defaultValue': 1\n  }]\n}, {\n  'tfOpName': 'Conv2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'useCudnnOnGpu',\n    'name': 'useCudnnOnGpu',\n    'type': 'bool'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': '_FusedConv2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    end: 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'num_args',\n    'name': 'numArgs',\n    'type': 'number'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'use_cudnn_on_gpu',\n    'name': 'useCudnnOnGpu',\n    'type': 'bool',\n    'defaultValue': true\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]',\n    'defaultValue': [1, 1, 1, 1]\n  }, {\n    'tfName': 'fused_ops',\n    'name': 'fusedOps',\n    'type': 'string[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'epsilon',\n    'name': 'epsilon',\n    'type': 'number',\n    'defaultValue': 0.0001\n  }]\n}, {\n  'tfOpName': 'Conv2DBackpropInput',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 2,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 0,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }]\n}, {\n  'tfOpName': 'DepthwiseConv2d',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'DepthwiseConv2dNative',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'FusedDepthwiseConv2dNative',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    end: 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'num_args',\n    'name': 'numArgs',\n    'type': 'number'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]',\n    'defaultValue': [1, 1, 1, 1]\n  }, {\n    'tfName': 'fused_ops',\n    'name': 'fusedOps',\n    'type': 'string[]',\n    'defaultValue': []\n  }]\n}, {\n  'tfOpName': 'Conv3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Dilation2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'rates',\n    'name': 'dilations',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/convolution.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexport const json = [\r\n    {\r\n        'tfOpName': 'AvgPool',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'notSupported': true\r\n            },\r\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'MaxPool',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'notSupported': true\r\n            },\r\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'MaxPoolWithArgmax',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\r\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' }, {\r\n                'tfName': 'include_batch_in_index',\r\n                'name': 'includeBatchInIndex',\r\n                'type': 'bool'\r\n            },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'AvgPool3D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'notSupported': true\r\n            },\r\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'MaxPool3D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'notSupported': true\r\n            },\r\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Conv1D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'stride', 'name': 'stride', 'type': 'number' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NWC'\r\n            },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\r\n                'tfName': 'dilation',\r\n                'name': 'dilation',\r\n                'type': 'number',\r\n                'defaultValue': 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Conv2D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\r\n            { 'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            {\r\n                'tfName': 'explicit_paddings',\r\n                'name': 'explicitPaddings',\r\n                'type': 'number[]',\r\n                'defaultValue': []\r\n            },\r\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': '_FusedConv2D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\r\n            {\r\n                'tfName': 'explicit_paddings',\r\n                'name': 'explicitPaddings',\r\n                'type': 'number[]',\r\n                'defaultValue': []\r\n            },\r\n            {\r\n                'tfName': 'use_cudnn_on_gpu',\r\n                'name': 'useCudnnOnGpu',\r\n                'type': 'bool',\r\n                'defaultValue': true\r\n            },\r\n            {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            {\r\n                'tfName': 'dilations',\r\n                'name': 'dilations',\r\n                'type': 'number[]',\r\n                'defaultValue': [1, 1, 1, 1]\r\n            },\r\n            {\r\n                'tfName': 'fused_ops',\r\n                'name': 'fusedOps',\r\n                'type': 'string[]',\r\n                'defaultValue': []\r\n            },\r\n            {\r\n                'tfName': 'epsilon',\r\n                'name': 'epsilon',\r\n                'type': 'number',\r\n                'defaultValue': 0.0001\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Conv2DBackpropInput',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 2, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n            { 'start': 0, 'name': 'outputShape', 'type': 'number[]' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\r\n            {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'notSupported': true\r\n            },\r\n            {\r\n                'tfName': 'explicit_paddings',\r\n                'name': 'explicitPaddings',\r\n                'type': 'number[]',\r\n                'defaultValue': []\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'DepthwiseConv2d',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            {\r\n                'tfName': 'explicit_paddings',\r\n                'name': 'explicitPaddings',\r\n                'type': 'number[]',\r\n                'defaultValue': []\r\n            },\r\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'DepthwiseConv2dNative',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            {\r\n                'tfName': 'explicit_paddings',\r\n                'name': 'explicitPaddings',\r\n                'type': 'number[]',\r\n                'defaultValue': []\r\n            },\r\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'FusedDepthwiseConv2dNative',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\r\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            {\r\n                'tfName': 'dilations',\r\n                'name': 'dilations',\r\n                'type': 'number[]',\r\n                'defaultValue': [1, 1, 1, 1]\r\n            },\r\n            {\r\n                'tfName': 'fused_ops',\r\n                'name': 'fusedOps',\r\n                'type': 'string[]',\r\n                'defaultValue': []\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'tfOpName': 'Conv3D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\r\n                'tfName': 'data_format',\r\n                'name': 'dataFormat',\r\n                'type': 'string',\r\n                'defaultValue': 'NHWC'\r\n            },\r\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\r\n        ],\r\n    },\r\n    {\r\n        'tfOpName': 'Dilation2D',\r\n        'category': 'convolution',\r\n        'inputs': [\r\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\r\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\r\n        ],\r\n        'attrs': [\r\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\r\n            { 'tfName': 'rates', 'name': 'dilations', 'type': 'number[]' },\r\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }\r\n        ]\r\n    }\r\n];\r\n//# sourceMappingURL=convolution.js.map"]},"metadata":{},"sourceType":"module"}