{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { ZerosLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\r\n * given tensor.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2]);\r\n * tf.zerosLike(x).print();\r\n * ```\r\n *\r\n * @param x The tensor of required shape.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\n\nfunction zerosLike_(x) {\n  const $x = convertToTensor(x, 'x', 'zerosLike');\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc(backend => backend.zerosLike($x), inputs, null\n  /* grad */\n  , ZerosLike);\n}\n\nexport const zerosLike = op({\n  zerosLike_\n});","map":{"version":3,"sources":["../../src/ops/zeros_like.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,SAAR,QAAyC,iBAAzC;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;AAYG;;AACH,SAAS,UAAT,CAAsC,CAAtC,EAAqD;AACnD,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,WAAT,CAA1B;AACA,QAAM,MAAM,GAAoB;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAhC;AACA,SAAO,MAAM,CAAC,aAAP,CACI,OAAO,IAAI,OAAO,CAAC,SAAR,CAAkB,EAAlB,CADf,EACsC,MADtC,EAEI;AAAK;AAFT,IAEqB,SAFrB,CAAP;AAGD;;AACD,OAAO,MAAM,SAAS,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAApB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { ZerosLike } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\r\n * given tensor.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2]);\r\n * tf.zerosLike(x).print();\r\n * ```\r\n *\r\n * @param x The tensor of required shape.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\r\nfunction zerosLike_(x) {\r\n    const $x = convertToTensor(x, 'x', 'zerosLike');\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc(backend => backend.zerosLike($x), inputs, null /* grad */, ZerosLike);\r\n}\r\nexport const zerosLike = op({ zerosLike_ });\r\n//# sourceMappingURL=zeros_like.js.map"]},"metadata":{},"sourceType":"module"}