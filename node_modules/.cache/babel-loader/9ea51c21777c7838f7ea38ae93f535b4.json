{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport const clipByValueGradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      clipValueMin,\n      clipValueMax\n    } = attrs;\n    return {\n      x: () => where(logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)), dy, zerosLike(dy))\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/ClipByValue_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,WAAR,QAA4C,iBAA5C;AAEA,SAAQ,YAAR,QAA2B,sBAA3B;AACA,SAAQ,SAAR,QAAwB,mBAAxB;AACA,SAAQ,UAAR,QAAyB,oBAAzB;AACA,SAAQ,KAAR,QAAoB,cAApB;AACA,SAAQ,SAAR,QAAwB,mBAAxB;AAGA,OAAO,MAAM,qBAAqB,GAAe;AAC/C,EAAA,UAAU,EAAE,WADmC;AAE/C,EAAA,YAAY,EAAE,CAAC,GAAD,CAFiC;AAG/C,EAAA,QAAQ,EAAE,CAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,KAAqD;AAC7D,UAAM,CAAC,CAAD,IAAM,KAAZ;AACA,UAAM;AAAC,MAAA,YAAD;AAAe,MAAA;AAAf,QAA+B,KAArC;AACA,WAAO;AACL,MAAA,CAAC,EAAE,MAAM,KAAK,CACV,UAAU,CAAC,YAAY,CAAC,CAAD,EAAI,YAAJ,CAAb,EAAgC,SAAS,CAAC,CAAD,EAAI,YAAJ,CAAzC,CADA,EAEV,EAFU,EAEN,SAAS,CAAC,EAAD,CAFH;AADT,KAAP;AAKD;AAX8C,CAA1C","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ClipByValue } from '../kernel_names';\r\nimport { greaterEqual } from '../ops/greater_equal';\r\nimport { lessEqual } from '../ops/less_equal';\r\nimport { logicalAnd } from '../ops/logical_and';\r\nimport { where } from '../ops/where';\r\nimport { zerosLike } from '../ops/zeros_like';\r\nexport const clipByValueGradConfig = {\r\n    kernelName: ClipByValue,\r\n    inputsToSave: ['x'],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const [x] = saved;\r\n        const { clipValueMin, clipValueMax } = attrs;\r\n        return {\r\n            x: () => where(logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)), dy, zerosLike(dy)),\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=ClipByValue_grad.js.map"]},"metadata":{},"sourceType":"module"}