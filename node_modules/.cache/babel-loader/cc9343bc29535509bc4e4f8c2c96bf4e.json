{"ast":null,"code":"// Points for fingers\n/*\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };*/ // Infinity Gauntlet Style\nvar style={0:{color:\"gold\",size:15},1:{color:\"gold\",size:6},2:{color:\"gold\",size:10},3:{color:\"gold\",size:6},4:{color:\"red\",size:6},5:{color:\"gold\",size:10},6:{color:\"gold\",size:6},7:{color:\"gold\",size:6},8:{color:\"red\",size:6},9:{color:\"gold\",size:10},10:{color:\"gold\",size:6},11:{color:\"gold\",size:6},12:{color:\"gold\",size:6},13:{color:\"gold\",size:10},14:{color:\"gold\",size:6},15:{color:\"gold\",size:6},16:{color:\"gold\",size:6},17:{color:\"gold\",size:10},18:{color:\"gold\",size:6},19:{color:\"gold\",size:6},20:{color:\"gold\",size:6}};// Drawing function\nexport var drawHand=function drawHand(predictions,ctx){// Check if we have predictions\nif(predictions.length>0){// Loop through each prediction\npredictions.forEach(function(prediction){// Grab landmarks\nvar landmarks=prediction.landmarks;ctx.beginPath();ctx.moveTo(landmarks[8][0],landmarks[8][1]);ctx.lineTo(landmarks[4][0],landmarks[4][1]);ctx.strokeStyle=\"plum\";ctx.lineWidth=4;ctx.stroke();// Loop through landmarks and draw em\nfor(var i=0;i<landmarks.length;i++){// Get x point\nvar x=landmarks[i][0];// Get y point\nvar y=landmarks[i][1];// Start drawing\nctx.beginPath();ctx.arc(x,y,style[i][\"size\"],0,3*Math.PI);// Set line color\nctx.fillStyle=style[i][\"color\"];ctx.fill();}});}};","map":{"version":3,"sources":["C:/Users/wongh/finger/src/utilities.js"],"names":["style","color","size","drawHand","predictions","ctx","length","forEach","prediction","landmarks","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill"],"mappings":"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","sourcesContent":["// Points for fingers\r\n/*\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };*/\r\n  \r\n  // Infinity Gauntlet Style\r\n  const style = {\r\n    0: { color: \"gold\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"gold\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"red\", size: 6 },\r\n    5: { color: \"gold\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"red\", size: 6 },\r\n    9: { color: \"gold\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"gold\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"gold\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n  \r\n  // Drawing function\r\n  export const drawHand = (predictions, ctx) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n        ctx.beginPath();\r\n        ctx.moveTo(landmarks[8][0], landmarks[8][1]);\r\n        ctx.lineTo(landmarks[4][0], landmarks[4][1]);\r\n        \r\n        ctx.strokeStyle = \"plum\";\r\n        ctx.lineWidth = 4;\r\n        ctx.stroke();\r\n\r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}