{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n\n/**\r\n * An implementation of the tile kernel shared between webgl and cpu for string\r\n * tensors only.\r\n */\nimport { buffer } from '../ops/buffer';\nexport function tile(xBuf, reps) {\n  var newShape = new Array(xBuf.rank);\n\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = xBuf.shape[i] * reps[i];\n  }\n\n  var result = buffer(newShape, xBuf.dtype);\n\n  for (var _i = 0; _i < result.values.length; ++_i) {\n    var newLoc = result.indexToLoc(_i);\n    var originalLoc = new Array(xBuf.rank);\n\n    for (var j = 0; j < originalLoc.length; j++) {\n      originalLoc[j] = newLoc[j] % xBuf.shape[j];\n    }\n\n    var originalIndex = xBuf.locToIndex(originalLoc);\n    result.values[_i] = xBuf.values[originalIndex];\n  }\n\n  return result.toTensor();\n}","map":{"version":3,"sources":["../../src/backends/tile_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;;AAEH;;;AAGG;AAEH,SAAQ,MAAR,QAAqB,eAArB;AAIA,OAAM,SAAU,IAAV,CACF,IADE,EAC+B,IAD/B,EAC6C;AACjD,MAAM,QAAQ,GAAa,IAAI,KAAJ,CAAU,IAAI,CAAC,IAAf,CAA3B;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,IAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,IAAI,CAAC,KAAL,CAAW,CAAX,IAAgB,IAAI,CAAC,CAAD,CAAlC;AACD;;AACD,MAAM,MAAM,GAAG,MAAM,CAAC,QAAD,EAAW,IAAI,CAAC,KAAhB,CAArB;;AACA,OAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,MAAM,CAAC,MAAP,CAAc,MAAlC,EAA0C,EAAE,EAA5C,EAA+C;AAC7C,QAAM,MAAM,GAAG,MAAM,CAAC,UAAP,CAAkB,EAAlB,CAAf;AAEA,QAAM,WAAW,GAAa,IAAI,KAAJ,CAAU,IAAI,CAAC,IAAf,CAA9B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,MAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,MAAM,CAAC,CAAD,CAAN,GAAY,IAAI,CAAC,KAAL,CAAW,CAAX,CAA7B;AACD;;AAED,QAAM,aAAa,GAAG,IAAI,CAAC,UAAL,CAAgB,WAAhB,CAAtB;AAEA,IAAA,MAAM,CAAC,MAAP,CAAc,EAAd,IAAmB,IAAI,CAAC,MAAL,CAAY,aAAZ,CAAnB;AACD;;AACD,SAAO,MAAM,CAAC,QAAP,EAAP;AACD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n/**\r\n * An implementation of the tile kernel shared between webgl and cpu for string\r\n * tensors only.\r\n */\r\nimport { buffer } from '../ops/buffer';\r\nexport function tile(xBuf, reps) {\r\n    const newShape = new Array(xBuf.rank);\r\n    for (let i = 0; i < newShape.length; i++) {\r\n        newShape[i] = xBuf.shape[i] * reps[i];\r\n    }\r\n    const result = buffer(newShape, xBuf.dtype);\r\n    for (let i = 0; i < result.values.length; ++i) {\r\n        const newLoc = result.indexToLoc(i);\r\n        const originalLoc = new Array(xBuf.rank);\r\n        for (let j = 0; j < originalLoc.length; j++) {\r\n            originalLoc[j] = newLoc[j] % xBuf.shape[j];\r\n        }\r\n        const originalIndex = xBuf.locToIndex(originalLoc);\r\n        result.values[i] = xBuf.values[originalIndex];\r\n    }\r\n    return result.toTensor();\r\n}\r\n//# sourceMappingURL=tile_impl.js.map"]},"metadata":{},"sourceType":"module"}