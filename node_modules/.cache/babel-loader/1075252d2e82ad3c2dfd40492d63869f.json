{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nimport { packedReshape } from '../kernel_utils/reshape';\nimport { isReshapeFree } from '../webgl_util';\nexport function reshape(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var shape = attrs.shape;\n  var webglBackend = backend;\n  var xSize = util.sizeFromShape(x.shape);\n  var $shape = util.inferFromImplicitShape(shape, xSize);\n  var $xSize = util.sizeFromShape($shape);\n  util.assert(xSize === $xSize, function () {\n    return \"The new shape (\".concat($shape, \") has \").concat($xSize, \" elements and the old \") + \"shape (\".concat(x.shape, \") has \").concat(xSize, \" elements. The new shape and old \") + \"shape must have the same number of elements.\";\n  });\n  var xTexData = webglBackend.texData.get(x.dataId);\n\n  if (xTexData.isPacked && !isReshapeFree(x.shape, $shape) && !(xTexData.texture !== null && isReshapeFree(xTexData.shape, $shape))) {\n    return packedReshape(x, $shape, webglBackend);\n  }\n\n  webglBackend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport var reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'webgl',\n  kernelFunc: reshape\n};","map":{"version":3,"sources":["../../src/kernels/Reshape.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,OAAlC,EAAoF,IAApF,QAA+F,uBAA/F;AAGA,SAAQ,aAAR,QAA4B,yBAA5B;AACA,SAAQ,aAAR,QAA4B,eAA5B;AAEA,OAAM,SAAU,OAAV,CAAkB,IAAlB,EAIL;AAAA,MACQ,MADR,GACkC,IADlC,CACQ,MADR;AAAA,MACgB,OADhB,GACkC,IADlC,CACgB,OADhB;AAAA,MACyB,KADzB,GACkC,IADlC,CACyB,KADzB;AAAA,MAEQ,CAFR,GAEa,MAFb,CAEQ,CAFR;AAAA,MAGQ,KAHR,GAGiB,KAHjB,CAGQ,KAHR;AAIC,MAAM,YAAY,GAAG,OAArB;AAEA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,KAArB,CAAd;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAL,CAA4B,KAA5B,EAAmC,KAAnC,CAAf;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,MAAnB,CAAf;AAEA,EAAA,IAAI,CAAC,MAAL,CACI,KAAK,KAAK,MADd,EAEI;AAAA,WAAM,yBAAkB,MAAlB,mBAAiC,MAAjC,+CACQ,CAAC,CAAC,KADV,mBACwB,KADxB,uFAAN;AAAA,GAFJ;AAMA,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAb,CAAqB,GAArB,CAAyB,CAAC,CAAC,MAA3B,CAAjB;;AACA,MAAI,QAAQ,CAAC,QAAT,IAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,KAAH,EAAU,MAAV,CAAnC,IACA,EAAE,QAAQ,CAAC,OAAT,KAAqB,IAArB,IAA6B,aAAa,CAAC,QAAQ,CAAC,KAAV,EAAiB,MAAjB,CAA5C,CADJ,EAC2E;AACzE,WAAO,aAAa,CAAC,CAAD,EAAI,MAAJ,EAAY,YAAZ,CAApB;AACD;;AAED,EAAA,YAAY,CAAC,MAAb,CAAoB,CAAC,CAAC,MAAtB;AAEA,SAAO;AAAC,IAAA,MAAM,EAAE,CAAC,CAAC,MAAX;AAAmB,IAAA,KAAK,EAAE,MAA1B;AAAkC,IAAA,KAAK,EAAE,CAAC,CAAC;AAA3C,GAAP;AACD;AAED,OAAO,IAAM,aAAa,GAAiB;AACzC,EAAA,UAAU,EAAE,OAD6B;AAEzC,EAAA,WAAW,EAAE,OAF4B;AAGzC,EAAA,UAAU,EAAE;AAH6B,CAApC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Reshape, util } from '@tensorflow/tfjs-core';\r\nimport { packedReshape } from '../kernel_utils/reshape';\r\nimport { isReshapeFree } from '../webgl_util';\r\nexport function reshape(args) {\r\n    const { inputs, backend, attrs } = args;\r\n    const { x } = inputs;\r\n    const { shape } = attrs;\r\n    const webglBackend = backend;\r\n    const xSize = util.sizeFromShape(x.shape);\r\n    const $shape = util.inferFromImplicitShape(shape, xSize);\r\n    const $xSize = util.sizeFromShape($shape);\r\n    util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\r\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\r\n        `shape must have the same number of elements.`);\r\n    const xTexData = webglBackend.texData.get(x.dataId);\r\n    if (xTexData.isPacked && !isReshapeFree(x.shape, $shape) &&\r\n        !(xTexData.texture !== null && isReshapeFree(xTexData.shape, $shape))) {\r\n        return packedReshape(x, $shape, webglBackend);\r\n    }\r\n    webglBackend.incRef(x.dataId);\r\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\r\n}\r\nexport const reshapeConfig = {\r\n    kernelName: Reshape,\r\n    backendName: 'webgl',\r\n    kernelFunc: reshape\r\n};\r\n//# sourceMappingURL=Reshape.js.map"]},"metadata":{},"sourceType":"module"}