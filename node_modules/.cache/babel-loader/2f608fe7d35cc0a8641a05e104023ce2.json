{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class UnpackProgram {\n  constructor(outputShape) {\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = false;\n    this.outputShape = outputShape;\n    const rank = outputShape.length;\n    const channels = getChannels('rc', rank);\n    const dtype = getCoordsDataType(rank);\n    const sourceCoords = getSourceCoords(rank, channels);\n    const innerDims = channels.slice(-2);\n    const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n    this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n  }\n\n}","map":{"version":3,"sources":["../src/unpack_gpu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,WAAR,EAAqB,eAArB,QAA2C,gBAA3C;AACA,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,OAAM,MAAO,aAAP,CAAoB;AAOxB,EAAA,WAAA,CAAY,WAAZ,EAAiC;AANjC,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AACA,SAAA,YAAA,GAAe,IAAf;AACA,SAAA,YAAA,GAAe,KAAf;AAKE,SAAK,WAAL,GAAmB,WAAnB;AACA,UAAM,IAAI,GAAG,WAAW,CAAC,MAAzB;AAEA,UAAM,QAAQ,GAAG,WAAW,CAAC,IAAD,EAAO,IAAP,CAA5B;AACA,UAAM,KAAK,GAAG,iBAAiB,CAAC,IAAD,CAA/B;AACA,UAAM,YAAY,GAAG,eAAe,CAAC,IAAD,EAAO,QAAP,CAApC;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,KAAT,CAAe,CAAC,CAAhB,CAAlB;AACA,UAAM,MAAM,GAAG,IAAI,IAAI,CAAR,GAAY,IAAZ,GAAmB,QAAQ,SAAS,CAAC,IAAV,CAAe,GAAf,CAAmB,GAA7D;AAEA,SAAK,QAAL,GAAgB;;UAEV,KAAK;kCACmB,YAAY;;4CAEF,MAAM;;AAE7C,KAPD;AAQD;;AAzBuB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { getChannels, getSourceCoords } from './packing_util';\r\nimport { getCoordsDataType } from './shader_compiler';\r\nexport class UnpackProgram {\r\n    constructor(outputShape) {\r\n        this.variableNames = ['A'];\r\n        this.packedInputs = true;\r\n        this.packedOutput = false;\r\n        this.outputShape = outputShape;\r\n        const rank = outputShape.length;\r\n        const channels = getChannels('rc', rank);\r\n        const dtype = getCoordsDataType(rank);\r\n        const sourceCoords = getSourceCoords(rank, channels);\r\n        const innerDims = channels.slice(-2);\r\n        const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\r\n        this.userCode = `\r\n      void main() {\r\n        ${dtype} rc = getOutputCoords();\r\n        vec4 packedInput = getA(${sourceCoords});\r\n\r\n        setOutput(getChannel(packedInput, ${coords}));\r\n      }\r\n    `;\r\n    }\r\n}\r\n//# sourceMappingURL=unpack_gpu.js.map"]},"metadata":{},"sourceType":"module"}