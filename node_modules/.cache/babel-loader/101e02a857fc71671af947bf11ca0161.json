{"ast":null,"code":"import { concat } from './concat';\nimport { op } from './operation';\n/**\r\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\r\n *\r\n * For example, if:\r\n * A: shape(2, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *\r\n * B: shape(2, 3) = | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * C = tf.concat2d([A, B], axis)\r\n *\r\n * if axis = 0:\r\n * C: shape(4, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *                  | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * if axis = 1:\r\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\r\n *                   | r2, g2, b2, r4, g4, b4 |\r\n *\r\n *\r\n * @param tensors A list of `tf.Tensor`s to concatenate.\r\n * @param axis The axis to concatenate along.\r\n * @return The concatenated array.\r\n */\n\nfunction concat2d_(tensors, axis) {\n  return concat(tensors, axis);\n}\n\nexport const concat2d = op({\n  concat2d_\n});","map":{"version":3,"sources":["../../src/ops/concat_2d.ts"],"names":[],"mappings":"AAmBA,SAAQ,MAAR,QAAqB,UAArB;AACA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BG;;AACH,SAAS,SAAT,CACI,OADJ,EACyC,IADzC,EACqD;AACnD,SAAO,MAAM,CAAC,OAAD,EAAU,IAAV,CAAb;AACD;;AAED,OAAO,MAAM,QAAQ,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAnB","sourceRoot":"","sourcesContent":["import { concat } from './concat';\r\nimport { op } from './operation';\r\n/**\r\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\r\n *\r\n * For example, if:\r\n * A: shape(2, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *\r\n * B: shape(2, 3) = | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * C = tf.concat2d([A, B], axis)\r\n *\r\n * if axis = 0:\r\n * C: shape(4, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *                  | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * if axis = 1:\r\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\r\n *                   | r2, g2, b2, r4, g4, b4 |\r\n *\r\n *\r\n * @param tensors A list of `tf.Tensor`s to concatenate.\r\n * @param axis The axis to concatenate along.\r\n * @return The concatenated array.\r\n */\r\nfunction concat2d_(tensors, axis) {\r\n    return concat(tensors, axis);\r\n}\r\nexport const concat2d = op({ concat2d_ });\r\n//# sourceMappingURL=concat_2d.js.map"]},"metadata":{},"sourceType":"module"}