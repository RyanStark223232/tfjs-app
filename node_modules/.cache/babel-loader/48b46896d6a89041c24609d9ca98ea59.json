{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { LinSpace } from '../kernel_names';\n/**\r\n * Return an evenly spaced sequence of numbers over the given interval.\r\n *\r\n * ```js\r\n * tf.linspace(0, 9, 10).print();\r\n * ```\r\n * @param start The start value of the sequence.\r\n * @param stop The end value of the sequence.\r\n * @param num The number of values to generate.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\n\nexport function linspace(start, stop, num) {\n  if (num <= 0) {\n    throw new Error('The number of values should be positive.');\n  }\n\n  var attrs = {\n    start: start,\n    stop: stop,\n    num: num\n  };\n  return ENGINE.runKernelFunc(function (backend) {\n    return backend.linspace(start, stop, num);\n  }, {}\n  /* inputs */\n  , null\n  /* grad */\n  , LinSpace, attrs);\n}","map":{"version":3,"sources":["../../src/ops/linspace.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,QAAR,QAAsC,iBAAtC;AAIA;;;;;;;;;;;AAWG;;AACH,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAkC,IAAlC,EAAgD,GAAhD,EAA2D;AAC/D,MAAI,GAAG,IAAI,CAAX,EAAc;AACZ,UAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,MAAM,KAAK,GAAkB;AAAC,IAAA,KAAK,EAAL,KAAD;AAAQ,IAAA,IAAI,EAAJ,IAAR;AAAc,IAAA,GAAG,EAAH;AAAd,GAA7B;AACA,SAAO,MAAM,CAAC,aAAP,CACH,UAAA,OAAO;AAAA,WAAI,OAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,IAAxB,EAA8B,GAA9B,CAAJ;AAAA,GADJ,EAC4C;AAAG;AAD/C,IAEH;AAAK;AAFF,IAEc,QAFd,EAEwB,KAFxB,CAAP;AAGD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { LinSpace } from '../kernel_names';\r\n/**\r\n * Return an evenly spaced sequence of numbers over the given interval.\r\n *\r\n * ```js\r\n * tf.linspace(0, 9, 10).print();\r\n * ```\r\n * @param start The start value of the sequence.\r\n * @param stop The end value of the sequence.\r\n * @param num The number of values to generate.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\r\nexport function linspace(start, stop, num) {\r\n    if (num <= 0) {\r\n        throw new Error('The number of values should be positive.');\r\n    }\r\n    const attrs = { start, stop, num };\r\n    return ENGINE.runKernelFunc(backend => backend.linspace(start, stop, num), {} /* inputs */, null /* grad */, LinSpace, attrs);\r\n}\r\n//# sourceMappingURL=linspace.js.map"]},"metadata":{},"sourceType":"module"}