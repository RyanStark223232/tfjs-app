{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Conv2DBackpropInput } from '../kernel_names';\nimport { conv2d } from '../ops/conv2d';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nexport var conv2DBackpropInputGradConfig = {\n  kernelName: Conv2DBackpropInput,\n  inputsToSave: ['dy', 'filter'],\n  gradFunc: function gradFunc(ddx, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        dy = _saved[0],\n        _filter = _saved[1];\n\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      dy: function dy() {\n        return conv2d(ddx, _filter, strides, pad, dataFormat, 1\n        /* dilations */\n        , dimRoundingMode);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(ddx, dy, _filter.shape, strides, pad, dataFormat, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Conv2DBackpropInput_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,mBAAR,QAA4D,iBAA5D;AAEA,SAAQ,MAAR,QAAqB,eAArB;AACA,SAAQ,oBAAR,QAAmC,+BAAnC;AAGA,OAAO,IAAM,6BAA6B,GAAe;AACvD,EAAA,UAAU,EAAE,mBAD2C;AAEvD,EAAA,YAAY,EAAE,CAAC,IAAD,EAAO,QAAP,CAFyC;AAGvD,EAAA,QAAQ,EAAE,kBAAC,GAAD,EAAgB,KAAhB,EAAiC,KAAjC,EAAwD;AAAA,gCAC3C,KAD2C;AAAA,QACzD,EADyD;AAAA,QACrD,OADqD;;AAAA,QAGzD,OAHyD,GAI5D,KAJ4D,CAGzD,OAHyD;AAAA,QAGhD,GAHgD,GAI5D,KAJ4D,CAGhD,GAHgD;AAAA,QAG3C,UAH2C,GAI5D,KAJ4D,CAG3C,UAH2C;AAAA,QAG/B,eAH+B,GAI5D,KAJ4D,CAG/B,eAH+B;AAMhE,WAAO;AACL,MAAA,EAAE,EAAE;AAAA,eAAM,MAAM,CACZ,GADY,EACP,OADO,EACC,OADD,EACU,GADV,EACe,UADf,EAC2B;AAAE;AAD7B,UAEZ,eAFY,CAAZ;AAAA,OADC;AAIL,MAAA,MAAM,EAAE;AAAA,eAAM,oBAAoB,CAC9B,GAD8B,EACzB,EADyB,EACrB,OAAM,CAAC,KADc,EACP,OADO,EACE,GADF,EACO,UADP,EACmB,eADnB,CAA1B;AAAA;AAJH,KAAP;AAOD;AAhBsD,CAAlD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Conv2DBackpropInput } from '../kernel_names';\r\nimport { conv2d } from '../ops/conv2d';\r\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\r\nexport const conv2DBackpropInputGradConfig = {\r\n    kernelName: Conv2DBackpropInput,\r\n    inputsToSave: ['dy', 'filter'],\r\n    gradFunc: (ddx, saved, attrs) => {\r\n        const [dy, filter] = saved;\r\n        const { strides, pad, dataFormat, dimRoundingMode } = attrs;\r\n        return {\r\n            dy: () => conv2d(ddx, filter, strides, pad, dataFormat, 1 /* dilations */, dimRoundingMode),\r\n            filter: () => conv2DBackpropFilter(ddx, dy, filter.shape, strides, pad, dataFormat, dimRoundingMode)\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Conv2DBackpropInput_grad.js.map"]},"metadata":{},"sourceType":"module"}