{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { LogicalNot } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Returns the truth value of `NOT x` element-wise.\r\n *\r\n * ```js\r\n * const a = tf.tensor1d([false, true], 'bool');\r\n *\r\n * a.logicalNot().print();\r\n * ```\r\n *\r\n * @param x The input tensor. Must be of dtype 'bool'.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Logical'}\r\n */\n\nfunction logicalNot_(x) {\n  var $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc(function (backend) {\n    return backend.logicalNot($x);\n  }, inputs, null\n  /* grad */\n  , LogicalNot);\n}\n\nexport var logicalNot = op({\n  logicalNot_: logicalNot_\n});","map":{"version":3,"sources":["../../src/ops/logical_not.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,UAAR,QAA2C,iBAA3C;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAEA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;AAYG;;AACH,SAAS,WAAT,CAAuC,CAAvC,EAAsD;AACpD,MAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,YAAT,EAAuB,MAAvB,CAA1B;AACA,MAAM,MAAM,GAAqB;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAjC;AACA,SAAO,MAAM,CAAC,aAAP,CACH,UAAA,OAAO;AAAA,WAAI,OAAO,CAAC,UAAR,CAAmB,EAAnB,CAAJ;AAAA,GADJ,EACgC,MADhC,EAEH;AAAK;AAFF,IAEc,UAFd,CAAP;AAGD;;AAED,OAAO,IAAM,UAAU,GAAG,EAAE,CAAC;AAAC,EAAA,WAAW,EAAX;AAAD,CAAD,CAArB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { LogicalNot } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Returns the truth value of `NOT x` element-wise.\r\n *\r\n * ```js\r\n * const a = tf.tensor1d([false, true], 'bool');\r\n *\r\n * a.logicalNot().print();\r\n * ```\r\n *\r\n * @param x The input tensor. Must be of dtype 'bool'.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Logical'}\r\n */\r\nfunction logicalNot_(x) {\r\n    const $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc(backend => backend.logicalNot($x), inputs, null /* grad */, LogicalNot);\r\n}\r\nexport const logicalNot = op({ logicalNot_ });\r\n//# sourceMappingURL=logical_not.js.map"]},"metadata":{},"sourceType":"module"}