{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Identity } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Creates a new tensor with the same values and shape as the specified\r\n * tensor.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2]);\r\n *\r\n * x.clone().print();\r\n * ```\r\n *\r\n * @param x The tensor to clone.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\n\nfunction clone_(x) {\n  const $x = convertToTensor(x, 'x', 'clone', null);\n\n  const forward = () => ENGINE.makeTensorFromDataId($x.dataId, $x.shape, $x.dtype);\n\n  const inputs = {\n    x: $x\n  }; // Note this op is called tf.identity in python. Hence the kernel name used\n  // here.\n\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , Identity);\n}\n\nexport const clone = op({\n  clone_\n});","map":{"version":3,"sources":["../../src/ops/clone.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,QAAR,QAAuC,iBAAvC;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;;AAaG;;AACH,SAAS,MAAT,CAAkC,CAAlC,EAAiD;AAC/C,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,OAAT,EAAkB,IAAlB,CAA1B;;AACA,QAAM,OAAO,GAAG,MACZ,MAAM,CAAC,oBAAP,CAA4B,EAAE,CAAC,MAA/B,EAAuC,EAAE,CAAC,KAA1C,EAAiD,EAAE,CAAC,KAApD,CADJ;;AAGA,QAAM,MAAM,GAAmB;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA/B,CAL+C,CAO/C;AACA;;AACA,SAAO,MAAM,CAAC,aAAP,CACH,OADG,EACM,MADN,EACsC;AAAK;AAD3C,IACuD,QADvD,CAAP;AAED;;AAED,OAAO,MAAM,KAAK,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAhB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Identity } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Creates a new tensor with the same values and shape as the specified\r\n * tensor.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2]);\r\n *\r\n * x.clone().print();\r\n * ```\r\n *\r\n * @param x The tensor to clone.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\r\nfunction clone_(x) {\r\n    const $x = convertToTensor(x, 'x', 'clone', null);\r\n    const forward = () => ENGINE.makeTensorFromDataId($x.dataId, $x.shape, $x.dtype);\r\n    const inputs = { x: $x };\r\n    // Note this op is called tf.identity in python. Hence the kernel name used\r\n    // here.\r\n    return ENGINE.runKernelFunc(forward, inputs, null /* grad */, Identity);\r\n}\r\nexport const clone = op({ clone_ });\r\n//# sourceMappingURL=clone.js.map"]},"metadata":{},"sourceType":"module"}