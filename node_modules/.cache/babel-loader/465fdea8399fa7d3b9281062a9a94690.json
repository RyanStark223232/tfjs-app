{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport * as axis_util from '../ops/axis_util';\nimport { cast } from '../ops/cast';\nimport { equal } from '../ops/equal';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\n/**\r\n * Gradient helper function for the min and max operations.\r\n */\n\nexport function gradForMinAndMax(dy, y, xOrig, origAxes) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes));\n  }\n\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes));\n  }\n\n  return {\n    x: () => {\n      const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}","map":{"version":3,"sources":["../../src/gradients/min_max_grad_util.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,OAAO,KAAK,SAAZ,MAA2B,kBAA3B;AACA,SAAQ,IAAR,QAAmB,aAAnB;AACA,SAAQ,KAAR,QAAoB,cAApB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AACA,SAAQ,OAAR,QAAsB,gBAAtB;AAGA;;AAEG;;AACH,OAAM,SAAU,gBAAV,CACF,EADE,EACK,CADL,EACW,KADX,EAC0B,QAD1B,EAC4C;AAChD,MAAI,CAAC,CAAC,IAAF,GAAS,KAAK,CAAC,IAAnB,EAAyB;AACvB,IAAA,CAAC,GAAG,OAAO,CAAC,CAAD,EAAI,SAAS,CAAC,oBAAV,CAA+B,CAAC,CAAC,KAAjC,EAAwC,QAAxC,CAAJ,CAAX;AACD;;AACD,MAAI,EAAE,CAAC,IAAH,GAAU,KAAK,CAAC,IAApB,EAA0B;AACxB,IAAA,EAAE,GAAG,OAAO,CAAC,EAAD,EAAK,SAAS,CAAC,oBAAV,CAA+B,EAAE,CAAC,KAAlC,EAAyC,QAAzC,CAAL,CAAZ;AACD;;AACD,SAAO;AACL,IAAA,CAAC,EAAE,MAAK;AACN,YAAM,EAAE,GAAG,GAAG,CAAC,EAAD,EAAK,IAAI,CAAC,KAAK,CAAC,KAAD,EAAQ,CAAR,CAAN,EAAkB,EAAE,CAAC,KAArB,CAAT,CAAd;AACA,aAAO,EAAP;AACD;AAJI,GAAP;AAMD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport * as axis_util from '../ops/axis_util';\r\nimport { cast } from '../ops/cast';\r\nimport { equal } from '../ops/equal';\r\nimport { mul } from '../ops/mul';\r\nimport { reshape } from '../ops/reshape';\r\n/**\r\n * Gradient helper function for the min and max operations.\r\n */\r\nexport function gradForMinAndMax(dy, y, xOrig, origAxes) {\r\n    if (y.rank < xOrig.rank) {\r\n        y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes));\r\n    }\r\n    if (dy.rank < xOrig.rank) {\r\n        dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes));\r\n    }\r\n    return {\r\n        x: () => {\r\n            const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\r\n            return dx;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=min_max_grad_util.js.map"]},"metadata":{},"sourceType":"module"}