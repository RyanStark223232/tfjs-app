{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV4 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\r\n * Asynchronously performs non maximum suppression of bounding boxes based on\r\n * iou (intersection over union), with an option to pad results.\r\n *\r\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\r\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\r\n *     the bounding box.\r\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\r\n * @param maxOutputSize The maximum number of boxes to be selected.\r\n * @param iouThreshold A float representing the threshold for deciding whether\r\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\r\n *     Defaults to 0.5 (50% box overlap).\r\n * @param scoreThreshold A threshold for deciding when to remove boxes based\r\n *     on score. Defaults to -inf, which means any score is accepted.\r\n * @param padToMaxOutputSize Defalts to false. If true, size of output\r\n *     `selectedIndices` is padded to maxOutputSize.\r\n * @return A map with the following properties:\r\n *     - selectedIndices: A 1D tensor with the selected box indices.\r\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\r\n *       are valid. Valid elements occur first, then padding.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\r\n */\n\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n  const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null\n  /* softNmsSigma */\n  );\n  const $maxOutputSize = params.maxOutputSize;\n  const $iouThreshold = params.iouThreshold;\n  const $scoreThreshold = params.scoreThreshold;\n  const inputs = {\n    boxes: $boxes,\n    scores: $scores\n  };\n  const attrs = {\n    maxOutputSize: $maxOutputSize,\n    iouThreshold: $iouThreshold,\n    scoreThreshold: $scoreThreshold,\n    padToMaxOutputSize\n  };\n  const result = ENGINE.runKernel(NonMaxSuppressionV4, inputs, attrs);\n  return {\n    selectedIndices: result[0],\n    validOutputs: result[1]\n  };\n}\n\nexport const nonMaxSuppressionPadded = op({\n  nonMaxSuppressionPadded_\n});","map":{"version":3,"sources":["../../../src/ops/image/non_max_suppression_padded.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,cAArB;AACA,SAAQ,mBAAR,QAAuF,oBAAvF;AAIA,SAAQ,eAAR,QAA8B,uBAA9B;AAGA,SAAQ,qBAAR,QAAoC,gBAApC;AACA,SAAQ,EAAR,QAAiB,cAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBG;;AACH,SAAS,wBAAT,CACI,KADJ,EACgC,MADhC,EAEI,aAFJ,EAE2B,YAAY,GAAG,GAF1C,EAGI,cAAc,GAAG,MAAM,CAAC,iBAH5B,EAII,kBAAkB,GAAG,KAJzB,EAI8B;AAC5B,QAAM,MAAM,GAAG,eAAe,CAAC,KAAD,EAAQ,OAAR,EAAiB,mBAAjB,CAA9B;AACA,QAAM,OAAO,GAAG,eAAe,CAAC,MAAD,EAAS,QAAT,EAAmB,mBAAnB,CAA/B;AAEA,QAAM,MAAM,GAAG,qBAAqB,CAChC,MADgC,EACxB,OADwB,EACf,aADe,EACA,YADA,EACc,cADd,EAEhC;AAAK;AAF2B,GAApC;AAGA,QAAM,cAAc,GAAG,MAAM,CAAC,aAA9B;AACA,QAAM,aAAa,GAAG,MAAM,CAAC,YAA7B;AACA,QAAM,eAAe,GAAG,MAAM,CAAC,cAA/B;AAEA,QAAM,MAAM,GAA8B;AAAC,IAAA,KAAK,EAAE,MAAR;AAAgB,IAAA,MAAM,EAAE;AAAxB,GAA1C;AACA,QAAM,KAAK,GAA6B;AACtC,IAAA,aAAa,EAAE,cADuB;AAEtC,IAAA,YAAY,EAAE,aAFwB;AAGtC,IAAA,cAAc,EAAE,eAHsB;AAItC,IAAA;AAJsC,GAAxC;AAOA,QAAM,MAAM,GAAG,MAAM,CAAC,SAAP,CACI,mBADJ,EACyB,MADzB,EAEI,KAFJ,CAAf;AAIA,SAAO;AAAC,IAAA,eAAe,EAAE,MAAM,CAAC,CAAD,CAAxB;AAA6B,IAAA,YAAY,EAAE,MAAM,CAAC,CAAD;AAAjD,GAAP;AACD;;AAED,OAAO,MAAM,uBAAuB,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAlC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../../engine';\r\nimport { NonMaxSuppressionV4 } from '../../kernel_names';\r\nimport { convertToTensor } from '../../tensor_util_env';\r\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\r\nimport { op } from '../operation';\r\n/**\r\n * Asynchronously performs non maximum suppression of bounding boxes based on\r\n * iou (intersection over union), with an option to pad results.\r\n *\r\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\r\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\r\n *     the bounding box.\r\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\r\n * @param maxOutputSize The maximum number of boxes to be selected.\r\n * @param iouThreshold A float representing the threshold for deciding whether\r\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\r\n *     Defaults to 0.5 (50% box overlap).\r\n * @param scoreThreshold A threshold for deciding when to remove boxes based\r\n *     on score. Defaults to -inf, which means any score is accepted.\r\n * @param padToMaxOutputSize Defalts to false. If true, size of output\r\n *     `selectedIndices` is padded to maxOutputSize.\r\n * @return A map with the following properties:\r\n *     - selectedIndices: A 1D tensor with the selected box indices.\r\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\r\n *       are valid. Valid elements occur first, then padding.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\r\n */\r\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\r\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\r\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\r\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\r\n    const $maxOutputSize = params.maxOutputSize;\r\n    const $iouThreshold = params.iouThreshold;\r\n    const $scoreThreshold = params.scoreThreshold;\r\n    const inputs = { boxes: $boxes, scores: $scores };\r\n    const attrs = {\r\n        maxOutputSize: $maxOutputSize,\r\n        iouThreshold: $iouThreshold,\r\n        scoreThreshold: $scoreThreshold,\r\n        padToMaxOutputSize\r\n    };\r\n    const result = ENGINE.runKernel(NonMaxSuppressionV4, inputs, attrs);\r\n    return { selectedIndices: result[0], validOutputs: result[1] };\r\n}\r\nexport const nonMaxSuppressionPadded = op({ nonMaxSuppressionPadded_ });\r\n//# sourceMappingURL=non_max_suppression_padded.js.map"]},"metadata":{},"sourceType":"module"}