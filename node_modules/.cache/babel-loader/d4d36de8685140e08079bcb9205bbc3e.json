{"ast":null,"code":"import { bignumberDocs } from './construction/bignumber';\nimport { typeOfDocs } from './function/utils/typeOf';\nimport { isZeroDocs } from './function/utils/isZero';\nimport { isPrimeDocs } from './function/utils/isPrime';\nimport { isPositiveDocs } from './function/utils/isPositive';\nimport { isNumericDocs } from './function/utils/isNumeric';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\nimport { isNegativeDocs } from './function/utils/isNegative';\nimport { isIntegerDocs } from './function/utils/isInteger';\nimport { isNaNDocs } from './function/utils/isNaN';\nimport { formatDocs } from './function/utils/format';\nimport { binDocs } from './function/utils/bin';\nimport { octDocs } from './function/utils/oct';\nimport { hexDocs } from './function/utils/hex';\nimport { cloneDocs } from './function/utils/clone';\nimport { toDocs } from './function/units/to';\nimport { tanhDocs } from './function/trigonometry/tanh';\nimport { tanDocs } from './function/trigonometry/tan';\nimport { sinhDocs } from './function/trigonometry/sinh';\nimport { sechDocs } from './function/trigonometry/sech';\nimport { secDocs } from './function/trigonometry/sec';\nimport { cschDocs } from './function/trigonometry/csch';\nimport { cscDocs } from './function/trigonometry/csc';\nimport { cothDocs } from './function/trigonometry/coth';\nimport { cotDocs } from './function/trigonometry/cot';\nimport { coshDocs } from './function/trigonometry/cosh';\nimport { cosDocs } from './function/trigonometry/cos';\nimport { atan2Docs } from './function/trigonometry/atan2';\nimport { atanhDocs } from './function/trigonometry/atanh';\nimport { atanDocs } from './function/trigonometry/atan';\nimport { asinhDocs } from './function/trigonometry/asinh';\nimport { asinDocs } from './function/trigonometry/asin';\nimport { asechDocs } from './function/trigonometry/asech';\nimport { asecDocs } from './function/trigonometry/asec';\nimport { acschDocs } from './function/trigonometry/acsch';\nimport { acscDocs } from './function/trigonometry/acsc';\nimport { acothDocs } from './function/trigonometry/acoth';\nimport { acotDocs } from './function/trigonometry/acot';\nimport { acoshDocs } from './function/trigonometry/acosh';\nimport { acosDocs } from './function/trigonometry/acos';\nimport { sumDocs } from './function/statistics/sum';\nimport { stdDocs } from './function/statistics/std';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\nimport { prodDocs } from './function/statistics/prod';\nimport { modeDocs } from './function/statistics/mode';\nimport { minDocs } from './function/statistics/min';\nimport { medianDocs } from './function/statistics/median';\nimport { meanDocs } from './function/statistics/mean';\nimport { maxDocs } from './function/statistics/max';\nimport { madDocs } from './function/statistics/mad';\nimport { erfDocs } from './function/special/erf';\nimport { setUnionDocs } from './function/set/setUnion';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\nimport { setSizeDocs } from './function/set/setSize';\nimport { setPowersetDocs } from './function/set/setPowerset';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\nimport { setIntersectDocs } from './function/set/setIntersect';\nimport { setDistinctDocs } from './function/set/setDistinct';\nimport { setDifferenceDocs } from './function/set/setDifference';\nimport { setCartesianDocs } from './function/set/setCartesian';\nimport { unequalDocs } from './function/relational/unequal';\nimport { smallerEqDocs } from './function/relational/smallerEq';\nimport { smallerDocs } from './function/relational/smaller';\nimport { largerEqDocs } from './function/relational/largerEq';\nimport { largerDocs } from './function/relational/larger';\nimport { equalTextDocs } from './function/relational/equalText';\nimport { equalDocs } from './function/relational/equal';\nimport { deepEqualDocs } from './function/relational/deepEqual';\nimport { compareTextDocs } from './function/relational/compareText';\nimport { compareNaturalDocs } from './function/relational/compareNatural';\nimport { compareDocs } from './function/relational/compare';\nimport { randomIntDocs } from './function/probability/randomInt';\nimport { randomDocs } from './function/probability/random';\nimport { pickRandomDocs } from './function/probability/pickRandom';\nimport { permutationsDocs } from './function/probability/permutations';\nimport { multinomialDocs } from './function/probability/multinomial';\nimport { kldivergenceDocs } from './function/probability/kldivergence';\nimport { gammaDocs } from './function/probability/gamma';\nimport { factorialDocs } from './function/probability/factorial';\nimport { combinationsDocs } from './function/probability/combinations';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\nimport { zerosDocs } from './function/matrix/zeros';\nimport { transposeDocs } from './function/matrix/transpose';\nimport { traceDocs } from './function/matrix/trace';\nimport { subsetDocs } from './function/matrix/subset';\nimport { squeezeDocs } from './function/matrix/squeeze';\nimport { sortDocs } from './function/matrix/sort';\nimport { sizeDocs } from './function/matrix/size';\nimport { diffDocs } from './function/matrix/diff';\nimport { reshapeDocs } from './function/matrix/reshape';\nimport { resizeDocs } from './function/matrix/resize';\nimport { rangeDocs } from './function/matrix/range';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\nimport { onesDocs } from './function/matrix/ones';\nimport { mapDocs } from './function/matrix/map';\nimport { kronDocs } from './function/matrix/kron';\nimport { invDocs } from './function/matrix/inv';\nimport { forEachDocs } from './function/matrix/forEach';\nimport { flattenDocs } from './function/matrix/flatten';\nimport { filterDocs } from './function/matrix/filter';\nimport { identityDocs } from './function/matrix/identity';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\nimport { dotDocs } from './function/matrix/dot';\nimport { diagDocs } from './function/matrix/diag';\nimport { detDocs } from './function/matrix/det';\nimport { ctransposeDocs } from './function/matrix/ctranspose';\nimport { crossDocs } from './function/matrix/cross';\nimport { concatDocs } from './function/matrix/concat';\nimport { xorDocs } from './function/logical/xor';\nimport { orDocs } from './function/logical/or';\nimport { notDocs } from './function/logical/not';\nimport { andDocs } from './function/logical/and';\nimport { intersectDocs } from './function/geometry/intersect';\nimport { distanceDocs } from './function/geometry/distance';\nimport { helpDocs } from './function/expression/help';\nimport { evaluateDocs } from './function/expression/evaluate';\nimport { imDocs } from './function/complex/im';\nimport { reDocs } from './function/complex/re';\nimport { conjDocs } from './function/complex/conj';\nimport { argDocs } from './function/complex/arg';\nimport { typedDocs } from './core/typed';\nimport { importDocs } from './core/import';\nimport { configDocs } from './core/config';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\nimport { compositionDocs } from './function/combinatorics/composition';\nimport { catalanDocs } from './function/combinatorics/catalan';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\nimport { leftShiftDocs } from './function/bitwise/leftShift';\nimport { bitXorDocs } from './function/bitwise/bitXor';\nimport { bitOrDocs } from './function/bitwise/bitOr';\nimport { bitNotDocs } from './function/bitwise/bitNot';\nimport { bitAndDocs } from './function/bitwise/bitAnd';\nimport { xgcdDocs } from './function/arithmetic/xgcd';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\nimport { squareDocs } from './function/arithmetic/square';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\nimport { sqrtDocs } from './function/arithmetic/sqrt';\nimport { signDocs } from './function/arithmetic/sign';\nimport { roundDocs } from './function/arithmetic/round';\nimport { powDocs } from './function/arithmetic/pow';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\nimport { normDocs } from './function/arithmetic/norm';\nimport { multiplyDocs } from './function/arithmetic/multiply';\nimport { modDocs } from './function/arithmetic/mod';\nimport { log10Docs } from './function/arithmetic/log10';\nimport { log1pDocs } from './function/arithmetic/log1p';\nimport { log2Docs } from './function/arithmetic/log2';\nimport { logDocs } from './function/arithmetic/log';\nimport { lcmDocs } from './function/arithmetic/lcm';\nimport { hypotDocs } from './function/arithmetic/hypot';\nimport { gcdDocs } from './function/arithmetic/gcd';\nimport { floorDocs } from './function/arithmetic/floor';\nimport { fixDocs } from './function/arithmetic/fix';\nimport { expm1Docs } from './function/arithmetic/expm1';\nimport { expmDocs } from './function/arithmetic/expm';\nimport { eigsDocs } from './function/matrix/eigs';\nimport { expDocs } from './function/arithmetic/exp';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\nimport { divideDocs } from './function/arithmetic/divide';\nimport { cubeDocs } from './function/arithmetic/cube';\nimport { ceilDocs } from './function/arithmetic/ceil';\nimport { cbrtDocs } from './function/arithmetic/cbrt';\nimport { addDocs } from './function/arithmetic/add';\nimport { absDocs } from './function/arithmetic/abs';\nimport { qrDocs } from './function/algebra/qr';\nimport { usolveDocs } from './function/algebra/usolve';\nimport { usolveAllDocs } from './function/algebra/usolveAll';\nimport { sluDocs } from './function/algebra/slu';\nimport { rationalizeDocs } from './function/algebra/rationalize';\nimport { simplifyDocs } from './function/algebra/simplify';\nimport { lupDocs } from './function/algebra/lup';\nimport { lsolveDocs } from './function/algebra/lsolve';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll';\nimport { derivativeDocs } from './function/algebra/derivative';\nimport { versionDocs } from './constants/version';\nimport { trueDocs } from './constants/true';\nimport { tauDocs } from './constants/tau';\nimport { SQRT2Docs } from './constants/SQRT2';\nimport { SQRT12Docs } from './constants/SQRT1_2';\nimport { phiDocs } from './constants/phi';\nimport { piDocs } from './constants/pi';\nimport { nullDocs } from './constants/null';\nimport { NaNDocs } from './constants/NaN';\nimport { LOG10EDocs } from './constants/LOG10E';\nimport { LOG2EDocs } from './constants/LOG2E';\nimport { LN10Docs } from './constants/LN10';\nimport { LN2Docs } from './constants/LN2';\nimport { InfinityDocs } from './constants/Infinity';\nimport { iDocs } from './constants/i';\nimport { falseDocs } from './constants/false';\nimport { eDocs } from './constants/e';\nimport { unitDocs } from './construction/unit';\nimport { stringDocs } from './construction/string';\nimport { splitUnitDocs } from './construction/splitUnit';\nimport { sparseDocs } from './construction/sparse';\nimport { numberDocs } from './construction/number';\nimport { matrixDocs } from './construction/matrix';\nimport { indexDocs } from './construction';\nimport { fractionDocs } from './construction/fraction';\nimport { createUnitDocs } from './construction/createUnit';\nimport { complexDocs } from './construction/complex';\nimport { booleanDocs } from './construction/boolean';\nimport { dotPowDocs } from './function/arithmetic/dotPow';\nimport { lusolveDocs } from './function/algebra/lusolve';\nimport { subtractDocs } from './function/arithmetic/subtract';\nimport { varianceDocs } from './function/statistics/variance';\nimport { sinDocs } from './function/trigonometry/sin';\nimport { numericDocs } from './function/utils/numeric';\nimport { columnDocs } from './function/matrix/column';\nimport { rowDocs } from './function/matrix/row';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  \"boolean\": booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  \"false\": falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  \"null\": nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  \"true\": trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  simplify: simplifyDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  \"import\": importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};","map":{"version":3,"sources":["C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js"],"names":["bignumberDocs","typeOfDocs","isZeroDocs","isPrimeDocs","isPositiveDocs","isNumericDocs","hasNumericValueDocs","isNegativeDocs","isIntegerDocs","isNaNDocs","formatDocs","binDocs","octDocs","hexDocs","cloneDocs","toDocs","tanhDocs","tanDocs","sinhDocs","sechDocs","secDocs","cschDocs","cscDocs","cothDocs","cotDocs","coshDocs","cosDocs","atan2Docs","atanhDocs","atanDocs","asinhDocs","asinDocs","asechDocs","asecDocs","acschDocs","acscDocs","acothDocs","acotDocs","acoshDocs","acosDocs","sumDocs","stdDocs","quantileSeqDocs","prodDocs","modeDocs","minDocs","medianDocs","meanDocs","maxDocs","madDocs","erfDocs","setUnionDocs","setSymDifferenceDocs","setSizeDocs","setPowersetDocs","setMultiplicityDocs","setIsSubsetDocs","setIntersectDocs","setDistinctDocs","setDifferenceDocs","setCartesianDocs","unequalDocs","smallerEqDocs","smallerDocs","largerEqDocs","largerDocs","equalTextDocs","equalDocs","deepEqualDocs","compareTextDocs","compareNaturalDocs","compareDocs","randomIntDocs","randomDocs","pickRandomDocs","permutationsDocs","multinomialDocs","kldivergenceDocs","gammaDocs","factorialDocs","combinationsDocs","combinationsWithRepDocs","zerosDocs","transposeDocs","traceDocs","subsetDocs","squeezeDocs","sortDocs","sizeDocs","diffDocs","reshapeDocs","resizeDocs","rangeDocs","partitionSelectDocs","onesDocs","mapDocs","kronDocs","invDocs","forEachDocs","flattenDocs","filterDocs","identityDocs","getMatrixDataTypeDocs","dotDocs","diagDocs","detDocs","ctransposeDocs","crossDocs","concatDocs","xorDocs","orDocs","notDocs","andDocs","intersectDocs","distanceDocs","helpDocs","evaluateDocs","imDocs","reDocs","conjDocs","argDocs","typedDocs","importDocs","configDocs","stirlingS2Docs","compositionDocs","catalanDocs","bellNumbersDocs","rightLogShiftDocs","rightArithShiftDocs","leftShiftDocs","bitXorDocs","bitOrDocs","bitNotDocs","bitAndDocs","xgcdDocs","unaryPlusDocs","unaryMinusDocs","squareDocs","sqrtmDocs","sqrtDocs","signDocs","roundDocs","powDocs","nthRootsDocs","nthRootDocs","normDocs","multiplyDocs","modDocs","log10Docs","log1pDocs","log2Docs","logDocs","lcmDocs","hypotDocs","gcdDocs","floorDocs","fixDocs","expm1Docs","expmDocs","eigsDocs","expDocs","dotMultiplyDocs","dotDivideDocs","divideDocs","cubeDocs","ceilDocs","cbrtDocs","addDocs","absDocs","qrDocs","usolveDocs","usolveAllDocs","sluDocs","rationalizeDocs","simplifyDocs","lupDocs","lsolveDocs","lsolveAllDocs","derivativeDocs","versionDocs","trueDocs","tauDocs","SQRT2Docs","SQRT12Docs","phiDocs","piDocs","nullDocs","NaNDocs","LOG10EDocs","LOG2EDocs","LN10Docs","LN2Docs","InfinityDocs","iDocs","falseDocs","eDocs","unitDocs","stringDocs","splitUnitDocs","sparseDocs","numberDocs","matrixDocs","indexDocs","fractionDocs","createUnitDocs","complexDocs","booleanDocs","dotPowDocs","lusolveDocs","subtractDocs","varianceDocs","sinDocs","numericDocs","columnDocs","rowDocs","rotationMatrixDocs","embeddedDocs","bignumber","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","i","Infinity","LN2","LN10","LOG2E","LOG10E","NaN","pi","PI","phi","SQRT1_2","SQRT2","tau","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lsolveAll","lup","lusolve","simplify","rationalize","slu","usolve","usolveAll","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","config","typed","arg","conj","re","im","evaluate","help","distance","intersect","and","not","or","xor","concat","cross","column","ctranspose","det","diag","diff","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","eigs","kron","map","ones","partitionSelect","range","resize","reshape","rotationMatrix","row","size","sort","squeeze","subset","trace","transpose","zeros","combinations","combinationsWithRep","factorial","gamma","kldivergence","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equal","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","bin","oct","hex","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero","typeOf","numeric"],"mappings":"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","sourcesContent":["import { bignumberDocs } from './construction/bignumber';\r\nimport { typeOfDocs } from './function/utils/typeOf';\r\nimport { isZeroDocs } from './function/utils/isZero';\r\nimport { isPrimeDocs } from './function/utils/isPrime';\r\nimport { isPositiveDocs } from './function/utils/isPositive';\r\nimport { isNumericDocs } from './function/utils/isNumeric';\r\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\r\nimport { isNegativeDocs } from './function/utils/isNegative';\r\nimport { isIntegerDocs } from './function/utils/isInteger';\r\nimport { isNaNDocs } from './function/utils/isNaN';\r\nimport { formatDocs } from './function/utils/format';\r\nimport { binDocs } from './function/utils/bin';\r\nimport { octDocs } from './function/utils/oct';\r\nimport { hexDocs } from './function/utils/hex';\r\nimport { cloneDocs } from './function/utils/clone';\r\nimport { toDocs } from './function/units/to';\r\nimport { tanhDocs } from './function/trigonometry/tanh';\r\nimport { tanDocs } from './function/trigonometry/tan';\r\nimport { sinhDocs } from './function/trigonometry/sinh';\r\nimport { sechDocs } from './function/trigonometry/sech';\r\nimport { secDocs } from './function/trigonometry/sec';\r\nimport { cschDocs } from './function/trigonometry/csch';\r\nimport { cscDocs } from './function/trigonometry/csc';\r\nimport { cothDocs } from './function/trigonometry/coth';\r\nimport { cotDocs } from './function/trigonometry/cot';\r\nimport { coshDocs } from './function/trigonometry/cosh';\r\nimport { cosDocs } from './function/trigonometry/cos';\r\nimport { atan2Docs } from './function/trigonometry/atan2';\r\nimport { atanhDocs } from './function/trigonometry/atanh';\r\nimport { atanDocs } from './function/trigonometry/atan';\r\nimport { asinhDocs } from './function/trigonometry/asinh';\r\nimport { asinDocs } from './function/trigonometry/asin';\r\nimport { asechDocs } from './function/trigonometry/asech';\r\nimport { asecDocs } from './function/trigonometry/asec';\r\nimport { acschDocs } from './function/trigonometry/acsch';\r\nimport { acscDocs } from './function/trigonometry/acsc';\r\nimport { acothDocs } from './function/trigonometry/acoth';\r\nimport { acotDocs } from './function/trigonometry/acot';\r\nimport { acoshDocs } from './function/trigonometry/acosh';\r\nimport { acosDocs } from './function/trigonometry/acos';\r\nimport { sumDocs } from './function/statistics/sum';\r\nimport { stdDocs } from './function/statistics/std';\r\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\r\nimport { prodDocs } from './function/statistics/prod';\r\nimport { modeDocs } from './function/statistics/mode';\r\nimport { minDocs } from './function/statistics/min';\r\nimport { medianDocs } from './function/statistics/median';\r\nimport { meanDocs } from './function/statistics/mean';\r\nimport { maxDocs } from './function/statistics/max';\r\nimport { madDocs } from './function/statistics/mad';\r\nimport { erfDocs } from './function/special/erf';\r\nimport { setUnionDocs } from './function/set/setUnion';\r\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\r\nimport { setSizeDocs } from './function/set/setSize';\r\nimport { setPowersetDocs } from './function/set/setPowerset';\r\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\r\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\r\nimport { setIntersectDocs } from './function/set/setIntersect';\r\nimport { setDistinctDocs } from './function/set/setDistinct';\r\nimport { setDifferenceDocs } from './function/set/setDifference';\r\nimport { setCartesianDocs } from './function/set/setCartesian';\r\nimport { unequalDocs } from './function/relational/unequal';\r\nimport { smallerEqDocs } from './function/relational/smallerEq';\r\nimport { smallerDocs } from './function/relational/smaller';\r\nimport { largerEqDocs } from './function/relational/largerEq';\r\nimport { largerDocs } from './function/relational/larger';\r\nimport { equalTextDocs } from './function/relational/equalText';\r\nimport { equalDocs } from './function/relational/equal';\r\nimport { deepEqualDocs } from './function/relational/deepEqual';\r\nimport { compareTextDocs } from './function/relational/compareText';\r\nimport { compareNaturalDocs } from './function/relational/compareNatural';\r\nimport { compareDocs } from './function/relational/compare';\r\nimport { randomIntDocs } from './function/probability/randomInt';\r\nimport { randomDocs } from './function/probability/random';\r\nimport { pickRandomDocs } from './function/probability/pickRandom';\r\nimport { permutationsDocs } from './function/probability/permutations';\r\nimport { multinomialDocs } from './function/probability/multinomial';\r\nimport { kldivergenceDocs } from './function/probability/kldivergence';\r\nimport { gammaDocs } from './function/probability/gamma';\r\nimport { factorialDocs } from './function/probability/factorial';\r\nimport { combinationsDocs } from './function/probability/combinations';\r\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\r\nimport { zerosDocs } from './function/matrix/zeros';\r\nimport { transposeDocs } from './function/matrix/transpose';\r\nimport { traceDocs } from './function/matrix/trace';\r\nimport { subsetDocs } from './function/matrix/subset';\r\nimport { squeezeDocs } from './function/matrix/squeeze';\r\nimport { sortDocs } from './function/matrix/sort';\r\nimport { sizeDocs } from './function/matrix/size';\r\nimport { diffDocs } from './function/matrix/diff';\r\nimport { reshapeDocs } from './function/matrix/reshape';\r\nimport { resizeDocs } from './function/matrix/resize';\r\nimport { rangeDocs } from './function/matrix/range';\r\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\r\nimport { onesDocs } from './function/matrix/ones';\r\nimport { mapDocs } from './function/matrix/map';\r\nimport { kronDocs } from './function/matrix/kron';\r\nimport { invDocs } from './function/matrix/inv';\r\nimport { forEachDocs } from './function/matrix/forEach';\r\nimport { flattenDocs } from './function/matrix/flatten';\r\nimport { filterDocs } from './function/matrix/filter';\r\nimport { identityDocs } from './function/matrix/identity';\r\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\r\nimport { dotDocs } from './function/matrix/dot';\r\nimport { diagDocs } from './function/matrix/diag';\r\nimport { detDocs } from './function/matrix/det';\r\nimport { ctransposeDocs } from './function/matrix/ctranspose';\r\nimport { crossDocs } from './function/matrix/cross';\r\nimport { concatDocs } from './function/matrix/concat';\r\nimport { xorDocs } from './function/logical/xor';\r\nimport { orDocs } from './function/logical/or';\r\nimport { notDocs } from './function/logical/not';\r\nimport { andDocs } from './function/logical/and';\r\nimport { intersectDocs } from './function/geometry/intersect';\r\nimport { distanceDocs } from './function/geometry/distance';\r\nimport { helpDocs } from './function/expression/help';\r\nimport { evaluateDocs } from './function/expression/evaluate';\r\nimport { imDocs } from './function/complex/im';\r\nimport { reDocs } from './function/complex/re';\r\nimport { conjDocs } from './function/complex/conj';\r\nimport { argDocs } from './function/complex/arg';\r\nimport { typedDocs } from './core/typed';\r\nimport { importDocs } from './core/import';\r\nimport { configDocs } from './core/config';\r\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\r\nimport { compositionDocs } from './function/combinatorics/composition';\r\nimport { catalanDocs } from './function/combinatorics/catalan';\r\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\r\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\r\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\r\nimport { leftShiftDocs } from './function/bitwise/leftShift';\r\nimport { bitXorDocs } from './function/bitwise/bitXor';\r\nimport { bitOrDocs } from './function/bitwise/bitOr';\r\nimport { bitNotDocs } from './function/bitwise/bitNot';\r\nimport { bitAndDocs } from './function/bitwise/bitAnd';\r\nimport { xgcdDocs } from './function/arithmetic/xgcd';\r\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\r\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\r\nimport { squareDocs } from './function/arithmetic/square';\r\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\r\nimport { sqrtDocs } from './function/arithmetic/sqrt';\r\nimport { signDocs } from './function/arithmetic/sign';\r\nimport { roundDocs } from './function/arithmetic/round';\r\nimport { powDocs } from './function/arithmetic/pow';\r\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\r\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\r\nimport { normDocs } from './function/arithmetic/norm';\r\nimport { multiplyDocs } from './function/arithmetic/multiply';\r\nimport { modDocs } from './function/arithmetic/mod';\r\nimport { log10Docs } from './function/arithmetic/log10';\r\nimport { log1pDocs } from './function/arithmetic/log1p';\r\nimport { log2Docs } from './function/arithmetic/log2';\r\nimport { logDocs } from './function/arithmetic/log';\r\nimport { lcmDocs } from './function/arithmetic/lcm';\r\nimport { hypotDocs } from './function/arithmetic/hypot';\r\nimport { gcdDocs } from './function/arithmetic/gcd';\r\nimport { floorDocs } from './function/arithmetic/floor';\r\nimport { fixDocs } from './function/arithmetic/fix';\r\nimport { expm1Docs } from './function/arithmetic/expm1';\r\nimport { expmDocs } from './function/arithmetic/expm';\r\nimport { eigsDocs } from './function/matrix/eigs';\r\nimport { expDocs } from './function/arithmetic/exp';\r\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\r\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\r\nimport { divideDocs } from './function/arithmetic/divide';\r\nimport { cubeDocs } from './function/arithmetic/cube';\r\nimport { ceilDocs } from './function/arithmetic/ceil';\r\nimport { cbrtDocs } from './function/arithmetic/cbrt';\r\nimport { addDocs } from './function/arithmetic/add';\r\nimport { absDocs } from './function/arithmetic/abs';\r\nimport { qrDocs } from './function/algebra/qr';\r\nimport { usolveDocs } from './function/algebra/usolve';\r\nimport { usolveAllDocs } from './function/algebra/usolveAll';\r\nimport { sluDocs } from './function/algebra/slu';\r\nimport { rationalizeDocs } from './function/algebra/rationalize';\r\nimport { simplifyDocs } from './function/algebra/simplify';\r\nimport { lupDocs } from './function/algebra/lup';\r\nimport { lsolveDocs } from './function/algebra/lsolve';\r\nimport { lsolveAllDocs } from './function/algebra/lsolveAll';\r\nimport { derivativeDocs } from './function/algebra/derivative';\r\nimport { versionDocs } from './constants/version';\r\nimport { trueDocs } from './constants/true';\r\nimport { tauDocs } from './constants/tau';\r\nimport { SQRT2Docs } from './constants/SQRT2';\r\nimport { SQRT12Docs } from './constants/SQRT1_2';\r\nimport { phiDocs } from './constants/phi';\r\nimport { piDocs } from './constants/pi';\r\nimport { nullDocs } from './constants/null';\r\nimport { NaNDocs } from './constants/NaN';\r\nimport { LOG10EDocs } from './constants/LOG10E';\r\nimport { LOG2EDocs } from './constants/LOG2E';\r\nimport { LN10Docs } from './constants/LN10';\r\nimport { LN2Docs } from './constants/LN2';\r\nimport { InfinityDocs } from './constants/Infinity';\r\nimport { iDocs } from './constants/i';\r\nimport { falseDocs } from './constants/false';\r\nimport { eDocs } from './constants/e';\r\nimport { unitDocs } from './construction/unit';\r\nimport { stringDocs } from './construction/string';\r\nimport { splitUnitDocs } from './construction/splitUnit';\r\nimport { sparseDocs } from './construction/sparse';\r\nimport { numberDocs } from './construction/number';\r\nimport { matrixDocs } from './construction/matrix';\r\nimport { indexDocs } from './construction';\r\nimport { fractionDocs } from './construction/fraction';\r\nimport { createUnitDocs } from './construction/createUnit';\r\nimport { complexDocs } from './construction/complex';\r\nimport { booleanDocs } from './construction/boolean';\r\nimport { dotPowDocs } from './function/arithmetic/dotPow';\r\nimport { lusolveDocs } from './function/algebra/lusolve';\r\nimport { subtractDocs } from './function/arithmetic/subtract';\r\nimport { varianceDocs } from './function/statistics/variance';\r\nimport { sinDocs } from './function/trigonometry/sin';\r\nimport { numericDocs } from './function/utils/numeric';\r\nimport { columnDocs } from './function/matrix/column';\r\nimport { rowDocs } from './function/matrix/row';\r\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix';\r\nexport var embeddedDocs = {\r\n  // construction functions\r\n  bignumber: bignumberDocs,\r\n  \"boolean\": booleanDocs,\r\n  complex: complexDocs,\r\n  createUnit: createUnitDocs,\r\n  fraction: fractionDocs,\r\n  index: indexDocs,\r\n  matrix: matrixDocs,\r\n  number: numberDocs,\r\n  sparse: sparseDocs,\r\n  splitUnit: splitUnitDocs,\r\n  string: stringDocs,\r\n  unit: unitDocs,\r\n  // constants\r\n  e: eDocs,\r\n  E: eDocs,\r\n  \"false\": falseDocs,\r\n  i: iDocs,\r\n  Infinity: InfinityDocs,\r\n  LN2: LN2Docs,\r\n  LN10: LN10Docs,\r\n  LOG2E: LOG2EDocs,\r\n  LOG10E: LOG10EDocs,\r\n  NaN: NaNDocs,\r\n  \"null\": nullDocs,\r\n  pi: piDocs,\r\n  PI: piDocs,\r\n  phi: phiDocs,\r\n  SQRT1_2: SQRT12Docs,\r\n  SQRT2: SQRT2Docs,\r\n  tau: tauDocs,\r\n  \"true\": trueDocs,\r\n  version: versionDocs,\r\n  // physical constants\r\n  // TODO: more detailed docs for physical constants\r\n  speedOfLight: {\r\n    description: 'Speed of light in vacuum',\r\n    examples: ['speedOfLight']\r\n  },\r\n  gravitationConstant: {\r\n    description: 'Newtonian constant of gravitation',\r\n    examples: ['gravitationConstant']\r\n  },\r\n  planckConstant: {\r\n    description: 'Planck constant',\r\n    examples: ['planckConstant']\r\n  },\r\n  reducedPlanckConstant: {\r\n    description: 'Reduced Planck constant',\r\n    examples: ['reducedPlanckConstant']\r\n  },\r\n  magneticConstant: {\r\n    description: 'Magnetic constant (vacuum permeability)',\r\n    examples: ['magneticConstant']\r\n  },\r\n  electricConstant: {\r\n    description: 'Electric constant (vacuum permeability)',\r\n    examples: ['electricConstant']\r\n  },\r\n  vacuumImpedance: {\r\n    description: 'Characteristic impedance of vacuum',\r\n    examples: ['vacuumImpedance']\r\n  },\r\n  coulomb: {\r\n    description: 'Coulomb\\'s constant',\r\n    examples: ['coulomb']\r\n  },\r\n  elementaryCharge: {\r\n    description: 'Elementary charge',\r\n    examples: ['elementaryCharge']\r\n  },\r\n  bohrMagneton: {\r\n    description: 'Borh magneton',\r\n    examples: ['bohrMagneton']\r\n  },\r\n  conductanceQuantum: {\r\n    description: 'Conductance quantum',\r\n    examples: ['conductanceQuantum']\r\n  },\r\n  inverseConductanceQuantum: {\r\n    description: 'Inverse conductance quantum',\r\n    examples: ['inverseConductanceQuantum']\r\n  },\r\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\r\n  magneticFluxQuantum: {\r\n    description: 'Magnetic flux quantum',\r\n    examples: ['magneticFluxQuantum']\r\n  },\r\n  nuclearMagneton: {\r\n    description: 'Nuclear magneton',\r\n    examples: ['nuclearMagneton']\r\n  },\r\n  klitzing: {\r\n    description: 'Von Klitzing constant',\r\n    examples: ['klitzing']\r\n  },\r\n  bohrRadius: {\r\n    description: 'Borh radius',\r\n    examples: ['bohrRadius']\r\n  },\r\n  classicalElectronRadius: {\r\n    description: 'Classical electron radius',\r\n    examples: ['classicalElectronRadius']\r\n  },\r\n  electronMass: {\r\n    description: 'Electron mass',\r\n    examples: ['electronMass']\r\n  },\r\n  fermiCoupling: {\r\n    description: 'Fermi coupling constant',\r\n    examples: ['fermiCoupling']\r\n  },\r\n  fineStructure: {\r\n    description: 'Fine-structure constant',\r\n    examples: ['fineStructure']\r\n  },\r\n  hartreeEnergy: {\r\n    description: 'Hartree energy',\r\n    examples: ['hartreeEnergy']\r\n  },\r\n  protonMass: {\r\n    description: 'Proton mass',\r\n    examples: ['protonMass']\r\n  },\r\n  deuteronMass: {\r\n    description: 'Deuteron Mass',\r\n    examples: ['deuteronMass']\r\n  },\r\n  neutronMass: {\r\n    description: 'Neutron mass',\r\n    examples: ['neutronMass']\r\n  },\r\n  quantumOfCirculation: {\r\n    description: 'Quantum of circulation',\r\n    examples: ['quantumOfCirculation']\r\n  },\r\n  rydberg: {\r\n    description: 'Rydberg constant',\r\n    examples: ['rydberg']\r\n  },\r\n  thomsonCrossSection: {\r\n    description: 'Thomson cross section',\r\n    examples: ['thomsonCrossSection']\r\n  },\r\n  weakMixingAngle: {\r\n    description: 'Weak mixing angle',\r\n    examples: ['weakMixingAngle']\r\n  },\r\n  efimovFactor: {\r\n    description: 'Efimov factor',\r\n    examples: ['efimovFactor']\r\n  },\r\n  atomicMass: {\r\n    description: 'Atomic mass constant',\r\n    examples: ['atomicMass']\r\n  },\r\n  avogadro: {\r\n    description: 'Avogadro\\'s number',\r\n    examples: ['avogadro']\r\n  },\r\n  boltzmann: {\r\n    description: 'Boltzmann constant',\r\n    examples: ['boltzmann']\r\n  },\r\n  faraday: {\r\n    description: 'Faraday constant',\r\n    examples: ['faraday']\r\n  },\r\n  firstRadiation: {\r\n    description: 'First radiation constant',\r\n    examples: ['firstRadiation']\r\n  },\r\n  loschmidt: {\r\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\r\n    examples: ['loschmidt']\r\n  },\r\n  gasConstant: {\r\n    description: 'Gas constant',\r\n    examples: ['gasConstant']\r\n  },\r\n  molarPlanckConstant: {\r\n    description: 'Molar Planck constant',\r\n    examples: ['molarPlanckConstant']\r\n  },\r\n  molarVolume: {\r\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\r\n    examples: ['molarVolume']\r\n  },\r\n  sackurTetrode: {\r\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\r\n    examples: ['sackurTetrode']\r\n  },\r\n  secondRadiation: {\r\n    description: 'Second radiation constant',\r\n    examples: ['secondRadiation']\r\n  },\r\n  stefanBoltzmann: {\r\n    description: 'Stefan-Boltzmann constant',\r\n    examples: ['stefanBoltzmann']\r\n  },\r\n  wienDisplacement: {\r\n    description: 'Wien displacement law constant',\r\n    examples: ['wienDisplacement']\r\n  },\r\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\r\n  molarMass: {\r\n    description: 'Molar mass constant',\r\n    examples: ['molarMass']\r\n  },\r\n  molarMassC12: {\r\n    description: 'Molar mass constant of carbon-12',\r\n    examples: ['molarMassC12']\r\n  },\r\n  gravity: {\r\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\r\n    examples: ['gravity']\r\n  },\r\n  planckLength: {\r\n    description: 'Planck length',\r\n    examples: ['planckLength']\r\n  },\r\n  planckMass: {\r\n    description: 'Planck mass',\r\n    examples: ['planckMass']\r\n  },\r\n  planckTime: {\r\n    description: 'Planck time',\r\n    examples: ['planckTime']\r\n  },\r\n  planckCharge: {\r\n    description: 'Planck charge',\r\n    examples: ['planckCharge']\r\n  },\r\n  planckTemperature: {\r\n    description: 'Planck temperature',\r\n    examples: ['planckTemperature']\r\n  },\r\n  // functions - algebra\r\n  derivative: derivativeDocs,\r\n  lsolve: lsolveDocs,\r\n  lsolveAll: lsolveAllDocs,\r\n  lup: lupDocs,\r\n  lusolve: lusolveDocs,\r\n  simplify: simplifyDocs,\r\n  rationalize: rationalizeDocs,\r\n  slu: sluDocs,\r\n  usolve: usolveDocs,\r\n  usolveAll: usolveAllDocs,\r\n  qr: qrDocs,\r\n  // functions - arithmetic\r\n  abs: absDocs,\r\n  add: addDocs,\r\n  cbrt: cbrtDocs,\r\n  ceil: ceilDocs,\r\n  cube: cubeDocs,\r\n  divide: divideDocs,\r\n  dotDivide: dotDivideDocs,\r\n  dotMultiply: dotMultiplyDocs,\r\n  dotPow: dotPowDocs,\r\n  exp: expDocs,\r\n  expm: expmDocs,\r\n  expm1: expm1Docs,\r\n  fix: fixDocs,\r\n  floor: floorDocs,\r\n  gcd: gcdDocs,\r\n  hypot: hypotDocs,\r\n  lcm: lcmDocs,\r\n  log: logDocs,\r\n  log2: log2Docs,\r\n  log1p: log1pDocs,\r\n  log10: log10Docs,\r\n  mod: modDocs,\r\n  multiply: multiplyDocs,\r\n  norm: normDocs,\r\n  nthRoot: nthRootDocs,\r\n  nthRoots: nthRootsDocs,\r\n  pow: powDocs,\r\n  round: roundDocs,\r\n  sign: signDocs,\r\n  sqrt: sqrtDocs,\r\n  sqrtm: sqrtmDocs,\r\n  square: squareDocs,\r\n  subtract: subtractDocs,\r\n  unaryMinus: unaryMinusDocs,\r\n  unaryPlus: unaryPlusDocs,\r\n  xgcd: xgcdDocs,\r\n  // functions - bitwise\r\n  bitAnd: bitAndDocs,\r\n  bitNot: bitNotDocs,\r\n  bitOr: bitOrDocs,\r\n  bitXor: bitXorDocs,\r\n  leftShift: leftShiftDocs,\r\n  rightArithShift: rightArithShiftDocs,\r\n  rightLogShift: rightLogShiftDocs,\r\n  // functions - combinatorics\r\n  bellNumbers: bellNumbersDocs,\r\n  catalan: catalanDocs,\r\n  composition: compositionDocs,\r\n  stirlingS2: stirlingS2Docs,\r\n  // functions - core\r\n  config: configDocs,\r\n  \"import\": importDocs,\r\n  typed: typedDocs,\r\n  // functions - complex\r\n  arg: argDocs,\r\n  conj: conjDocs,\r\n  re: reDocs,\r\n  im: imDocs,\r\n  // functions - expression\r\n  evaluate: evaluateDocs,\r\n  help: helpDocs,\r\n  // functions - geometry\r\n  distance: distanceDocs,\r\n  intersect: intersectDocs,\r\n  // functions - logical\r\n  and: andDocs,\r\n  not: notDocs,\r\n  or: orDocs,\r\n  xor: xorDocs,\r\n  // functions - matrix\r\n  concat: concatDocs,\r\n  cross: crossDocs,\r\n  column: columnDocs,\r\n  ctranspose: ctransposeDocs,\r\n  det: detDocs,\r\n  diag: diagDocs,\r\n  diff: diffDocs,\r\n  dot: dotDocs,\r\n  getMatrixDataType: getMatrixDataTypeDocs,\r\n  identity: identityDocs,\r\n  filter: filterDocs,\r\n  flatten: flattenDocs,\r\n  forEach: forEachDocs,\r\n  inv: invDocs,\r\n  eigs: eigsDocs,\r\n  kron: kronDocs,\r\n  map: mapDocs,\r\n  ones: onesDocs,\r\n  partitionSelect: partitionSelectDocs,\r\n  range: rangeDocs,\r\n  resize: resizeDocs,\r\n  reshape: reshapeDocs,\r\n  rotationMatrix: rotationMatrixDocs,\r\n  row: rowDocs,\r\n  size: sizeDocs,\r\n  sort: sortDocs,\r\n  squeeze: squeezeDocs,\r\n  subset: subsetDocs,\r\n  trace: traceDocs,\r\n  transpose: transposeDocs,\r\n  zeros: zerosDocs,\r\n  // functions - probability\r\n  combinations: combinationsDocs,\r\n  combinationsWithRep: combinationsWithRepDocs,\r\n  // distribution: distributionDocs,\r\n  factorial: factorialDocs,\r\n  gamma: gammaDocs,\r\n  kldivergence: kldivergenceDocs,\r\n  multinomial: multinomialDocs,\r\n  permutations: permutationsDocs,\r\n  pickRandom: pickRandomDocs,\r\n  random: randomDocs,\r\n  randomInt: randomIntDocs,\r\n  // functions - relational\r\n  compare: compareDocs,\r\n  compareNatural: compareNaturalDocs,\r\n  compareText: compareTextDocs,\r\n  deepEqual: deepEqualDocs,\r\n  equal: equalDocs,\r\n  equalText: equalTextDocs,\r\n  larger: largerDocs,\r\n  largerEq: largerEqDocs,\r\n  smaller: smallerDocs,\r\n  smallerEq: smallerEqDocs,\r\n  unequal: unequalDocs,\r\n  // functions - set\r\n  setCartesian: setCartesianDocs,\r\n  setDifference: setDifferenceDocs,\r\n  setDistinct: setDistinctDocs,\r\n  setIntersect: setIntersectDocs,\r\n  setIsSubset: setIsSubsetDocs,\r\n  setMultiplicity: setMultiplicityDocs,\r\n  setPowerset: setPowersetDocs,\r\n  setSize: setSizeDocs,\r\n  setSymDifference: setSymDifferenceDocs,\r\n  setUnion: setUnionDocs,\r\n  // functions - special\r\n  erf: erfDocs,\r\n  // functions - statistics\r\n  mad: madDocs,\r\n  max: maxDocs,\r\n  mean: meanDocs,\r\n  median: medianDocs,\r\n  min: minDocs,\r\n  mode: modeDocs,\r\n  prod: prodDocs,\r\n  quantileSeq: quantileSeqDocs,\r\n  std: stdDocs,\r\n  sum: sumDocs,\r\n  variance: varianceDocs,\r\n  // functions - trigonometry\r\n  acos: acosDocs,\r\n  acosh: acoshDocs,\r\n  acot: acotDocs,\r\n  acoth: acothDocs,\r\n  acsc: acscDocs,\r\n  acsch: acschDocs,\r\n  asec: asecDocs,\r\n  asech: asechDocs,\r\n  asin: asinDocs,\r\n  asinh: asinhDocs,\r\n  atan: atanDocs,\r\n  atanh: atanhDocs,\r\n  atan2: atan2Docs,\r\n  cos: cosDocs,\r\n  cosh: coshDocs,\r\n  cot: cotDocs,\r\n  coth: cothDocs,\r\n  csc: cscDocs,\r\n  csch: cschDocs,\r\n  sec: secDocs,\r\n  sech: sechDocs,\r\n  sin: sinDocs,\r\n  sinh: sinhDocs,\r\n  tan: tanDocs,\r\n  tanh: tanhDocs,\r\n  // functions - units\r\n  to: toDocs,\r\n  // functions - utils\r\n  clone: cloneDocs,\r\n  format: formatDocs,\r\n  bin: binDocs,\r\n  oct: octDocs,\r\n  hex: hexDocs,\r\n  isNaN: isNaNDocs,\r\n  isInteger: isIntegerDocs,\r\n  isNegative: isNegativeDocs,\r\n  isNumeric: isNumericDocs,\r\n  hasNumericValue: hasNumericValueDocs,\r\n  isPositive: isPositiveDocs,\r\n  isPrime: isPrimeDocs,\r\n  isZero: isZeroDocs,\r\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\r\n  typeOf: typeOfDocs,\r\n  numeric: numericDocs\r\n};"]},"metadata":{},"sourceType":"module"}