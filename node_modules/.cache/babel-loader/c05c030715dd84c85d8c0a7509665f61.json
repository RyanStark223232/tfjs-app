{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Elu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([-1, 1, -3, 2]);\r\n *\r\n * x.elu().print();  // or tf.elu(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\n\nfunction elu_(x) {\n  var $x = convertToTensor(x, 'x', 'elu');\n\n  var forward = function forward(backend, save) {\n    var y = backend.elu($x);\n    save([y]);\n    return y;\n  };\n\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , Elu);\n}\n\nexport var elu = op({\n  elu_: elu_\n});","map":{"version":3,"sources":["../../src/ops/elu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAkC,WAAlC;AACA,SAAQ,GAAR,QAA6B,iBAA7B;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;AAWG;;AACH,SAAS,IAAT,CAAgC,CAAhC,EAA+C;AAC7C,MAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,CAA1B;;AAEA,MAAM,OAAO,GAAwB,SAA/B,OAA+B,CAAC,OAAD,EAAU,IAAV,EAAkB;AACrD,QAAM,CAAC,GAAG,OAAO,CAAC,GAAR,CAAY,EAAZ,CAAV;AACA,IAAA,IAAI,CAAC,CAAC,CAAD,CAAD,CAAJ;AACA,WAAO,CAAP;AACD,GAJD;;AAMA,MAAM,MAAM,GAAc;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA1B;AAEA,SAAO,MAAM,CAAC,aAAP,CACI,OADJ,EACa,MADb,EAC6C;AAAK;AADlD,IAC8D,GAD9D,CAAP;AAGD;;AAED,OAAO,IAAM,GAAG,GAAG,EAAE,CAAC;AAAC,EAAA,IAAI,EAAJ;AAAD,CAAD,CAAd","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Elu } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([-1, 1, -3, 2]);\r\n *\r\n * x.elu().print();  // or tf.elu(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\r\nfunction elu_(x) {\r\n    const $x = convertToTensor(x, 'x', 'elu');\r\n    const forward = (backend, save) => {\r\n        const y = backend.elu($x);\r\n        save([y]);\r\n        return y;\r\n    };\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc(forward, inputs, null /* grad */, Elu);\r\n}\r\nexport const elu = op({ elu_ });\r\n//# sourceMappingURL=elu.js.map"]},"metadata":{},"sourceType":"module"}