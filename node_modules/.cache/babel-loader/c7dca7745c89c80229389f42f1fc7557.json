{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Sigmoid } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, -1, 2, -3]);\r\n *\r\n * x.sigmoid().print();  // or tf.sigmoid(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\n\nfunction sigmoid_(x) {\n  const $x = convertToTensor(x, 'x', 'sigmoid');\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc((backend, save) => {\n    const res = backend.sigmoid($x);\n    save([res]);\n    return res;\n  }, inputs, null\n  /* grad */\n  , Sigmoid);\n}\n\nexport const sigmoid = op({\n  sigmoid_\n});","map":{"version":3,"sources":["../../src/ops/sigmoid.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,OAAR,QAAqC,iBAArC;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;AAWG;;AACH,SAAS,QAAT,CAAoC,CAApC,EAAmD;AACjD,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,SAAT,CAA1B;AAEA,QAAM,MAAM,GAAkB;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA9B;AAEA,SAAO,MAAM,CAAC,aAAP,CAAqB,CAAC,OAAD,EAAU,IAAV,KAAkB;AAC5C,UAAM,GAAG,GAAG,OAAO,CAAC,OAAR,CAAgB,EAAhB,CAAZ;AACA,IAAA,IAAI,CAAC,CAAC,GAAD,CAAD,CAAJ;AACA,WAAO,GAAP;AACD,GAJM,EAIJ,MAJI,EAI4B;AAAK;AAJjC,IAI6C,OAJ7C,CAAP;AAKD;;AACD,OAAO,MAAM,OAAO,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAlB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Sigmoid } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, -1, 2, -3]);\r\n *\r\n * x.sigmoid().print();  // or tf.sigmoid(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\r\nfunction sigmoid_(x) {\r\n    const $x = convertToTensor(x, 'x', 'sigmoid');\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc((backend, save) => {\r\n        const res = backend.sigmoid($x);\r\n        save([res]);\r\n        return res;\r\n    }, inputs, null /* grad */, Sigmoid);\r\n}\r\nexport const sigmoid = op({ sigmoid_ });\r\n//# sourceMappingURL=sigmoid.js.map"]},"metadata":{},"sourceType":"module"}