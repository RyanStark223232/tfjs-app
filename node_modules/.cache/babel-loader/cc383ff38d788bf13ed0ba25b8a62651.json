{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { op } from '../operation';\nimport { cosineWindow } from '../signal_ops_util';\n/**\r\n * Generate a hamming window.\r\n *\r\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\r\n *\r\n * ```js\r\n * tf.signal.hammingWindow(10).print();\r\n * ```\r\n * @param The length of window\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\r\n */\n\nfunction hammingWindow_(windowLength) {\n  return cosineWindow(windowLength, 0.54, 0.46);\n}\n\nexport const hammingWindow = op({\n  hammingWindow_\n});","map":{"version":3,"sources":["../../../src/ops/signal/hamming_window.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,EAAR,QAAiB,cAAjB;AACA,SAAQ,YAAR,QAA2B,oBAA3B;AAEA;;;;;;;;;;;AAWG;;AACH,SAAS,cAAT,CAAwB,YAAxB,EAA4C;AAC1C,SAAO,YAAY,CAAC,YAAD,EAAe,IAAf,EAAqB,IAArB,CAAnB;AACD;;AACD,OAAO,MAAM,aAAa,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAxB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { op } from '../operation';\r\nimport { cosineWindow } from '../signal_ops_util';\r\n/**\r\n * Generate a hamming window.\r\n *\r\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\r\n *\r\n * ```js\r\n * tf.signal.hammingWindow(10).print();\r\n * ```\r\n * @param The length of window\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\r\n */\r\nfunction hammingWindow_(windowLength) {\r\n    return cosineWindow(windowLength, 0.54, 0.46);\r\n}\r\nexport const hammingWindow = op({ hammingWindow_ });\r\n//# sourceMappingURL=hamming_window.js.map"]},"metadata":{},"sourceType":"module"}