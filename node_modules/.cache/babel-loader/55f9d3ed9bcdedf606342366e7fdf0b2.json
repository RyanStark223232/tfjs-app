{"ast":null,"code":"import _toConsumableArray from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import Button from'@material-ui/core/Button';import*as handpose from\"@tensorflow-models/handpose\";import*as posenet from\"@tensorflow-models/posenet\";import*as facemesh from\"@tensorflow-models/facemesh\";//import * as tf from '@tensorflow/tfjs-core';\nimport Webcam from\"react-webcam\";import\"./App.css\";import{drawHand_tap,drawHand_rotate,drawHand_fist,writeText,drawKeypoints,drawSkeleton,drawMesh}from\"./utilities\";import{sqrt,pow}from\"mathjs\";import{Line}from'react-chartjs-2';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.sleep=function(milliseconds){return new Promise(function(resolve){return setTimeout(resolve,milliseconds);});};_this.exportToJson=function(objectData,filename){var contentType=\"application/json;charset=utf-8;\";if(window.navigator&&window.navigator.msSaveOrOpenBlob){var blob=new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))],{type:contentType});navigator.msSaveOrOpenBlob(blob,filename);}else{var a=document.createElement('a');a.download=filename;a.href='data:'+contentType+','+encodeURIComponent(JSON.stringify(objectData));a.target='_blank';document.body.appendChild(a);a.click();document.body.removeChild(a);}};_this.getArray=function(){var dict={tap_count:_this.state.tap_count,rotate_count:_this.state.rotate_count,fist_count:_this.state.fist_count,dist_array:_this.state.dist_array,dist_time_array:_this.state.dist_time_array,dist_record:_this.state.dist_record,dist_time_record:_this.state.dist_time_record,rotate_array:_this.state.rotate_array,rotate_time_array:_this.state.rotate_time_array,rotate_record:_this.state.rotate_record,rotate_time_record:_this.state.rotate_time_record,fist_array:_this.state.fist_array,fist_time_array:_this.state.fist_time_array,fist_record:_this.state.fist_record,fist_time_record:_this.state.fist_time_record,gait_record:_this.state.gait_record,gait_time_record:_this.state.gait_time_record,startAt:_this.state.startAt,avg_fps:_this.state.avg_fps};_this.exportToJson(dict,\"state\");};_this.state={ID:0,tap_count:[],rotate_count:[],fist_count:[],index_passed:0,min_dist:0,max_dist:5.0,rotate_passed:0,last_pressed:0,real_time_inferencing:false,recording:false,button_mode:false,chart_ready:false,finger_done:false,rotate_done:false,fist_done:false,dist_array:[],dist_time_array:[],dist_record:[],dist_time_record:[],rotate_array:[],rotate_time_array:[],rotate_record:[],rotate_time_record:[],fist_array:[],fist_time_array:[],fist_record:[],fist_time_record:[],gait_record:[],gait_time_record:[],chart_data1:null,chart_data2:null,chart_data3:null,wait:false,wait_till:0,startAt:Date.now(),dead_frame:0,raw:true,facingMode:\"user\",avg_fps:0};_this.webcamRef=/*#__PURE__*/React.createRef(null);_this.canvasRef=/*#__PURE__*/React.createRef(null);_this.videoConstraints={facingMode:\"user\"};_this.capture_interval=100;_this.runHandpose=_this.runHandpose.bind(_assertThisInitialized(_this));_this.stop_real_time_inference=_this.stop_real_time_inference.bind(_assertThisInitialized(_this));_this.stop_tapping=_this.stop_tapping.bind(_assertThisInitialized(_this));_this.stop_rotating=_this.stop_rotating.bind(_assertThisInitialized(_this));_this.stop_record=_this.stop_record.bind(_assertThisInitialized(_this));_this.record_video=_this.record_video.bind(_assertThisInitialized(_this));_this.concat_frame=_this.concat_frame.bind(_assertThisInitialized(_this));_this.inference=_this.inference.bind(_assertThisInitialized(_this));_this.reset_counter=_this.reset_counter.bind(_assertThisInitialized(_this));_this.increment_tap1=_this.increment_tap1.bind(_assertThisInitialized(_this));_this.increment_tap2=_this.increment_tap2.bind(_assertThisInitialized(_this));_this.switch_button=_this.switch_button.bind(_assertThisInitialized(_this));_this.compose_chart=_this.compose_chart.bind(_assertThisInitialized(_this));_this.runPosenet=_this.runPosenet.bind(_assertThisInitialized(_this));_this.real_time_posenet=_this.real_time_posenet.bind(_assertThisInitialized(_this));_this.runFacemesh=_this.runFacemesh.bind(_assertThisInitialized(_this));_this.real_time_facemesh=_this.real_time_facemesh.bind(_assertThisInitialized(_this));_this.switch_style=_this.switch_style.bind(_assertThisInitialized(_this));_this.switch_cam=_this.switch_cam.bind(_assertThisInitialized(_this));_this.getArray=_this.getArray.bind(_assertThisInitialized(_this));_this.exportToJson=_this.exportToJson.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"switch_cam\",value:function switch_cam(){if(this.state.facingMode===\"user\")this.setState({facingMode:\"environment\"});else if(this.state.facingMode===\"environment\")this.setState({facingMode:\"user\"});}},{key:\"runFacemesh\",value:function(){var _runFacemesh=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var net,Interval_ID;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:require('@tensorflow/tfjs-backend-webgl');_context.next=3;return facemesh.load();case 3:net=_context.sent;console.log(\"Facemesh model loaded.\");this.setState({startAt:Date.now()});Interval_ID=setInterval(function(){_this2.real_time_facemesh(net);},this.capture_interval);this.setState({ID:Interval_ID,real_time_inferencing:true});case 8:case\"end\":return _context.stop();}}},_callee,this);}));function runFacemesh(){return _runFacemesh.apply(this,arguments);}return runFacemesh;}()},{key:\"real_time_facemesh\",value:function(){var _real_time_facemesh=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(net){var video,videoWidth,videoHeight,face,ctx;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this.state.wait){this.setState({wait_till:Date.now()+3000});this.setState({wait:false});}if(!(typeof this.webcamRef.current!==\"undefined\"&&this.webcamRef.current!==null&&this.webcamRef.current.video.readyState===4)){_context2.next=14;break;}video=this.webcamRef.current.video;videoWidth=this.webcamRef.current.video.videoWidth;videoHeight=this.webcamRef.current.video.videoHeight;this.webcamRef.current.video.width=videoWidth;this.webcamRef.current.video.height=videoHeight;this.canvasRef.current.width=videoWidth;this.canvasRef.current.height=videoHeight;_context2.next=11;return net.estimateFaces(video);case 11:face=_context2.sent;ctx=this.canvasRef.current.getContext(\"2d\");drawMesh(face,ctx);case 14:case\"end\":return _context2.stop();}}},_callee2,this);}));function real_time_facemesh(_x){return _real_time_facemesh.apply(this,arguments);}return real_time_facemesh;}()},{key:\"runPosenet\",value:function(){var _runPosenet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _this3=this;var net,Interval_ID;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:require('@tensorflow/tfjs-backend-webgl');_context3.next=3;return posenet.load();case 3:net=_context3.sent;console.log(\"PoseNet model loaded.\");this.setState({startAt:Date.now()});Interval_ID=setInterval(function(){_this3.real_time_posenet(net);},this.capture_interval);this.setState({ID:Interval_ID,real_time_inferencing:true});case 8:case\"end\":return _context3.stop();}}},_callee3,this);}));function runPosenet(){return _runPosenet.apply(this,arguments);}return runPosenet;}()},{key:\"real_time_posenet\",value:function(){var _real_time_posenet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(net){var video,videoWidth,videoHeight,pose,ctx;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(this.state.wait){this.setState({wait_till:Date.now()+3000,wait:false});}if(!(typeof this.webcamRef.current!==\"undefined\"&&this.webcamRef.current!==null&&this.webcamRef.current.video.readyState===4)){_context4.next=15;break;}video=this.webcamRef.current.video;videoWidth=this.webcamRef.current.video.videoWidth;videoHeight=this.webcamRef.current.video.videoHeight;this.webcamRef.current.video.width=videoWidth;this.webcamRef.current.video.height=videoHeight;this.canvasRef.current.width=videoWidth;this.canvasRef.current.height=videoHeight;_context4.next=11;return net.estimateSinglePose(video);case 11:pose=_context4.sent;ctx=this.canvasRef.current.getContext(\"2d\");drawKeypoints(pose[\"keypoints\"],0.6,ctx);drawSkeleton(pose[\"keypoints\"],0.7,ctx);case 15:case\"end\":return _context4.stop();}}},_callee4,this);}));function real_time_posenet(_x2){return _real_time_posenet.apply(this,arguments);}return real_time_posenet;}()},{key:\"switch_style\",value:function(){var _switch_style=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return this.setState({raw:!this.state.raw});case 2:this.compose_chart();case 3:case\"end\":return _context5.stop();}}},_callee5,this);}));function switch_style(){return _switch_style.apply(this,arguments);}return switch_style;}()},{key:\"compose_chart\",value:function compose_chart(){var time_array_1=[];var count_array_1=[];var label_1=\"\";var time_array_2=[];var count_array_2=[];var label_2=\"\";var time_array_3=[];var count_array_3=[];var label_3=\"\";var real_dist=document.getElementById(\"real_measurement\").value;var avg_fps=this.state.dist_time_array.length/(this.state.dist_time_array[this.state.dist_time_array.length-1]-this.state.dist_time_array[0]);this.setState({avg_fps:avg_fps});if(this.state.raw){// Print Data Raw\ntime_array_1=_toConsumableArray(this.state.dist_time_array);count_array_1=_toConsumableArray(this.state.dist_array);time_array_2=_toConsumableArray(this.state.rotate_time_array);count_array_2=_toConsumableArray(this.state.rotate_array);time_array_3=_toConsumableArray(this.state.fist_time_array);count_array_3=_toConsumableArray(this.state.fist_array);// Change to Real Life Measurement\nif(real_dist>0.0001){label_1=\"Distance between Index and Thumb (cm)\";label_2=\"Relative Location between Left and Right of Hand (cm)\";label_3=\"Relative Location between Tip of Fingers and Finger Joints (cm)\";var i=0;var tmp=0;for(i=0;i<count_array_1.length;i++){tmp=count_array_1[i];count_array_1[i]=tmp*real_dist;}for(i=0;i<count_array_2.length;i++){tmp=count_array_2[i];count_array_2[i]=tmp*real_dist;}for(i=0;i<count_array_3.length;i++){tmp=count_array_3[i];count_array_3[i]=tmp*real_dist;}}else{label_1=\"Distance between Index and Thumb (Relative Scale)\";label_2=\"Relative Location between Left and Right of Hand (Relative Scale)\";label_3=\"Relative Location between Tip of Fingers and Finger Joints (Relative Scale)\";}}else{// Recalculate Tapping Data\nvar d_array=[];var avg_value=0;for(var _i=1;_i<this.state.dist_array.length;_i++){d_array=[].concat(_toConsumableArray(d_array),[Math.abs(this.state.dist_array[_i-1]-this.state.dist_array[_i])]);}for(var _i2=0;_i2<d_array.length-49;_i2++){avg_value=(d_array[_i2]+d_array[_i2+1]+d_array[_i2+2]+d_array[_i2+3]+d_array[_i2+4])/5;count_array_1=[].concat(_toConsumableArray(count_array_1),[avg_value]);time_array_1=[].concat(_toConsumableArray(time_array_1),[this.state.dist_time_array[_i2]]);}d_array=[];avg_value=0;for(var _i3=1;_i3<this.state.rotate_array.length;_i3++){d_array=[].concat(_toConsumableArray(d_array),[Math.abs(this.state.rotate_array[_i3-1]-this.state.rotate_array[_i3])]);}for(var _i4=0;_i4<d_array.length-49;_i4++){avg_value=(d_array[_i4]+d_array[_i4+1]+d_array[_i4+2]+d_array[_i4+3]+d_array[_i4+4])/5;count_array_2=[].concat(_toConsumableArray(count_array_2),[avg_value]);time_array_2=[].concat(_toConsumableArray(time_array_2),[this.state.rotate_time_array[_i4]]);}d_array=[];avg_value=0;for(var _i5=1;_i5<this.state.fist_array.length;_i5++){d_array=[].concat(_toConsumableArray(d_array),[Math.abs(this.state.fist_array[_i5-1]-this.state.fist_array[_i5])]);}for(var _i6=0;_i6<d_array.length-49;_i6++){avg_value=(d_array[_i6]+d_array[_i6+1]+d_array[_i6+2]+d_array[_i6+3]+d_array[_i6+4])/5;count_array_3=[].concat(_toConsumableArray(count_array_3),[avg_value]);time_array_3=[].concat(_toConsumableArray(time_array_3),[this.state.fist_time_array[_i6]]);}// Change to Real Life Measurement\nif(real_dist>0.0001){label_1=\"Average Distance between Index and Thumb per Second (cm)\";label_2=\"Average Distance between Left and Right of Hand per Second (cm)\";label_3=\"Average Distance Location between Tip of Fingers and Finger Joints per Second (cm)\";var _i7=0;var _tmp=0;for(_i7=0;_i7<count_array_1.length;_i7++){_tmp=count_array_1[_i7];count_array_1[_i7]=_tmp*real_dist;}for(_i7=0;_i7<count_array_2.length;_i7++){_tmp=count_array_2[_i7];count_array_2[_i7]=_tmp*real_dist;}for(_i7=0;_i7<count_array_3.length;_i7++){_tmp=count_array_3[_i7];count_array_3[_i7]=_tmp*real_dist;}}else{label_1=\"Average Distance between Index and Thumb per Second (Relative Scale)\";label_2=\"Average Distance between Left and Right of Hand per Second (Relative Scale)\";label_3=\"Average Distance Location between Tip of Fingers and Finger Joints per Second (Relative Scale)\";}}// Setup Graphs\nvar data1={labels:time_array_1,datasets:[{label:label_1,fill:false,lineTension:0.3,backgroundColor:'rgba(75,192,192,0.4)',borderColor:'rgba(75,192,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(75,192,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(75,192,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:count_array_1}]};var data2={labels:time_array_2,datasets:[{label:label_2,fill:false,lineTension:0.1,backgroundColor:'rgba(192,75,192,0.4)',borderColor:'rgba(192,75,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(192,75,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(192,75,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:count_array_2}]};var data3={labels:time_array_3,datasets:[{label:label_3,fill:false,lineTension:0.1,backgroundColor:'rgba(192,192,75,0.4)',borderColor:'rgba(192,192,75,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(192,192,75,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(192,192,75,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:count_array_3}]};this.setState({chart_data1:data1});this.setState({chart_data2:data2});this.setState({chart_data3:data3});this.setState({chart_ready:true});}},{key:\"switch_button\",value:function switch_button(){if(this.state.button_mode===true){this.setState({button_mode:false});this.compose_chart();}else{this.setState({button_mode:true});}}},{key:\"increment_tap1\",value:function increment_tap1(){if(this.state.last_pressed!==1){var current_moment=(Date.now()-this.state.startAt)/1000;this.setState({last_pressed:1});this.setState({dist_array:[].concat(_toConsumableArray(this.state.dist_array),[1.0])});this.setState({dist_time_array:[].concat(_toConsumableArray(this.state.dist_time_array),[current_moment])});this.setState({tap_count:[].concat(_toConsumableArray(this.state.tap_count),[current_moment])});}}},{key:\"increment_tap2\",value:function increment_tap2(){if(this.state.last_pressed!==2){var current_moment=(Date.now()-this.state.startAt)/1000;this.setState({last_pressed:2});this.setState({dist_array:[].concat(_toConsumableArray(this.state.dist_array),[1.0])});this.setState({dist_time_array:[].concat(_toConsumableArray(this.state.dist_time_array),[current_moment])});this.setState({tap_count:[].concat(_toConsumableArray(this.state.tap_count),[current_moment])});}}},{key:\"norm\",value:function norm(lm1,lm2){return sqrt(pow(lm1[0]-lm2[0],2)+pow(lm1[1]-lm2[1],2));}},{key:\"reset_counter\",value:function reset_counter(){clearInterval(this.state.ID);var ctx=this.canvasRef.current.getContext(\"2d\");ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height);this.setState({ID:0,tap_count:[],rotate_count:[],fist_count:[],index_passed:0,min_dist:0,max_dist:5.0,rotate_passed:0,last_pressed:0,real_time_inferencing:false,recording:false,button_mode:false,chart_ready:false,finger_done:false,rotate_done:false,fist_done:false,dist_array:[],dist_time_array:[],dist_record:[],dist_time_record:[],rotate_array:[],rotate_time_array:[],rotate_record:[],rotate_time_record:[],fist_array:[],fist_time_array:[],fist_record:[],fist_time_record:[],gait_record:[],gait_time_record:[],chart_data1:null,chart_data2:null,chart_data3:null,wait:false,wait_till:0,startAt:Date.now(),dead_frame:0,raw:true,facingMode:\"user\",avg_fps:0});}},{key:\"runHandpose\",value:function(){var _runHandpose=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var _this4=this;var ctx,net,Interval_ID;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:ctx=this.canvasRef.current.getContext(\"2d\");writeText(ctx,{text:'Loading',x:180,y:70});require('@tensorflow/tfjs-backend-webgl');_context6.next=5;return handpose.load();case 5:net=_context6.sent;ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height);//const uploadJSONInput = document.getElementById('upload-json');\n//const uploadWeightsInput = document.getElementById('upload-weights');\n//const model = await tf.loadLayersModel(tf.io.browserFiles([uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\nconsole.log(\"Handpose model loaded.\");this.setState({startAt:Date.now()});Interval_ID=setInterval(function(){_this4.real_time_inference(net);},this.capture_interval);this.setState({ID:Interval_ID,real_time_inferencing:true,wait:true});case 11:case\"end\":return _context6.stop();}}},_callee6,this);}));function runHandpose(){return _runHandpose.apply(this,arguments);}return runHandpose;}()},{key:\"real_time_inference\",value:function(){var _real_time_inference=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(net){var _this5=this;var video,videoWidth,videoHeight,hand,ctx;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(this.state.wait){this.setState({wait_till:Date.now()+3000});this.setState({wait:false});}if(!(typeof this.webcamRef.current!==\"undefined\"&&this.webcamRef.current!==null&&this.webcamRef.current.video.readyState===4)){_context7.next=14;break;}video=this.webcamRef.current.video;videoWidth=this.webcamRef.current.video.videoWidth;videoHeight=this.webcamRef.current.video.videoHeight;this.webcamRef.current.video.width=videoWidth;this.webcamRef.current.video.height=videoHeight;this.canvasRef.current.width=videoWidth;this.canvasRef.current.height=videoHeight;_context7.next=11;return net.estimateHands(video);case 11:hand=_context7.sent;ctx=this.canvasRef.current.getContext(\"2d\");//check if waiting\nif(Date.now()<this.state.wait_till){if(hand.length>0)drawHand_tap(hand,ctx);//count down 3, 2, 1\nif(this.state.wait_till-Date.now()<1000)writeText(ctx,{text:'1',x:180,y:70});else if(this.state.wait_till-Date.now()<2000)writeText(ctx,{text:'2',x:140,y:70});else if(this.state.wait_till-Date.now()<3000)writeText(ctx,{text:'3',x:100,y:70});}else{if(hand.length>0){hand.forEach(function(prediction){_this5.setState({dead_frame:0});var landmarks=prediction.landmarks;var pawn_dist=_this5.norm(landmarks[0],landmarks[2]);var current_moment=(Date.now()-_this5.state.startAt)/1000;if(_this5.state.finger_done===false){drawHand_tap(hand,ctx);// Calculate relative distance\nvar index_dist=_this5.norm(landmarks[4],landmarks[8]);var current_dist=index_dist/pawn_dist;// Record distance\n_this5.setState({dist_array:[].concat(_toConsumableArray(_this5.state.dist_array),[current_dist]),dist_time_array:[].concat(_toConsumableArray(_this5.state.dist_time_array),[current_moment])});// Perform counting\nif(_this5.state.index_passed===0&&current_dist-_this5.state.min_dist>0.05){_this5.setState({index_passed:1,max_dist:current_dist});console.log(1);}if(_this5.state.index_passed===1&&current_dist>_this5.state.max_dist){_this5.setState({max_dist:current_dist});console.log(2);}if(_this5.state.index_passed===1&&_this5.state.max_dist-current_dist>0.05){_this5.setState({index_passed:0,min_dist:current_dist,tap_count:[].concat(_toConsumableArray(_this5.state.tap_count),[current_moment])});console.log(3);}if(_this5.state.index_passed===0&&current_dist<_this5.state.min_dist){_this5.setState({min_dist:current_dist});console.log(4);}}if(_this5.state.finger_done===true&&_this5.state.rotate_done===false){drawHand_rotate(hand,ctx,_this5.state.rotate_passed);// Calculate relative distance\nvar rotate_dist=(landmarks[2][0]-landmarks[17][0])/pawn_dist;// Record distance\n_this5.setState({rotate_array:[].concat(_toConsumableArray(_this5.state.rotate_array),[rotate_dist]),rotate_time_array:[].concat(_toConsumableArray(_this5.state.rotate_time_array),[current_moment])});// Perform counting\nif(_this5.state.rotate_passed===0){if(rotate_dist>=0.25)_this5.setState({rotate_passed:1});if(rotate_dist<=-0.25)_this5.setState({rotate_passed:-1});}if(_this5.state.rotate_passed===1&&rotate_dist<=-0.5){_this5.setState({rotate_passed:-1});}if(_this5.state.rotate_passed===-1&&rotate_dist>=0.5){_this5.setState({rotate_passed:1,rotate_count:[].concat(_toConsumableArray(_this5.state.rotate_count),[current_moment])});}}if(_this5.state.rotate_done===true&&_this5.state.fist_done===false){console.log(_this5.state.fist_passed);drawHand_fist(hand,ctx,_this5.state.fist_passed);// Calculate relative distance\nvar fist_dist=(landmarks[8][1]-landmarks[5][1]+(landmarks[12][1]-landmarks[9][1])+(landmarks[16][1]-landmarks[13][1])+(landmarks[20][1]-landmarks[17][1]))/(4*pawn_dist);// Record distance\n_this5.setState({fist_array:[].concat(_toConsumableArray(_this5.state.fist_array),[fist_dist]),fist_time_array:[].concat(_toConsumableArray(_this5.state.fist_time_array),[current_moment])});// Perform counting\nif(fist_dist>=0.0){_this5.setState({fist_passed:1});}if(fist_dist<-0.4&&_this5.state.fist_passed===1){_this5.setState({fist_passed:0,fist_count:[].concat(_toConsumableArray(_this5.state.fist_count),[current_moment])});}}});}else{// Warning message for hand off screen\nif(this.state.dead_frame>9)writeText(ctx,{text:'Hand Off Screen',x:180,y:70});this.setState({dead_frame:this.state.dead_frame+1});}}case 14:case\"end\":return _context7.stop();}}},_callee7,this);}));function real_time_inference(_x3){return _real_time_inference.apply(this,arguments);}return real_time_inference;}()},{key:\"stop_tapping\",value:function(){var _stop_tapping=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:this.setState({finger_done:true});this.setState({wait:true});case 2:case\"end\":return _context8.stop();}}},_callee8,this);}));function stop_tapping(){return _stop_tapping.apply(this,arguments);}return stop_tapping;}()},{key:\"stop_rotating\",value:function(){var _stop_rotating=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:this.setState({rotate_done:true});this.setState({wait:true});case 2:case\"end\":return _context9.stop();}}},_callee9,this);}));function stop_rotating(){return _stop_rotating.apply(this,arguments);}return stop_rotating;}()},{key:\"stop_real_time_inference\",value:function stop_real_time_inference(){clearInterval(this.state.ID);this.setState({real_time_inferencing:false,finger_done:false,rotate_done:false,fist_done:false});this.compose_chart();var ctx=this.canvasRef.current.getContext(\"2d\");ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height);}},{key:\"record_video\",value:function(){var _record_video=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){var _this6=this;var Interval_ID;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:this.setState({startAt:Date.now()});console.log(\"Handpose model loaded.\");Interval_ID=setInterval(function(){_this6.concat_frame();},this.capture_interval);this.setState({ID:Interval_ID,recording:true,wait:true});case 4:case\"end\":return _context10.stop();}}},_callee10,this);}));function record_video(){return _record_video.apply(this,arguments);}return record_video;}()},{key:\"concat_frame\",value:function(){var _concat_frame=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var ctx,current_moment,image,img;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(this.state.wait){this.setState({wait_till:Date.now()+3000,wait:false});}if(typeof this.webcamRef.current!==\"undefined\"&&this.webcamRef.current!==null&&this.webcamRef.current.video.readyState===4){if(Date.now()<this.state.wait_till){console.log(\"Waiting till \",this.state.wait_till);//count down 3, 2, 1\nctx=this.canvasRef.current.getContext(\"2d\");if(this.state.wait_till-Date.now()<250)ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height);else if(this.state.wait_till-Date.now()<1000)writeText(ctx,{text:'1',x:180,y:70});else if(this.state.wait_till-Date.now()<2000)writeText(ctx,{text:'2',x:140,y:70});else if(this.state.wait_till-Date.now()<3000)writeText(ctx,{text:'3',x:100,y:70});}else{current_moment=(Date.now()-this.state.startAt)/1000;image=this.webcamRef.current.getScreenshot();img=document.createElement(\"img\");img.src=image;img.onload=function(){if(this.state.finger_done===false){this.setState({dist_record:[].concat(_toConsumableArray(this.state.dist_record),[img]),dist_time_record:[].concat(_toConsumableArray(this.state.dist_time_record),[current_moment])});}else if(this.state.finger_done===true&&this.state.rotate_done===false){this.setState({rotate_record:[].concat(_toConsumableArray(this.state.rotate_record),[img]),rotate_time_record:[].concat(_toConsumableArray(this.state.rotate_time_record),[current_moment])});}else if(this.state.rotate_done===true&&this.state.fist_done===false){this.setState({fist_record:[].concat(_toConsumableArray(this.state.fist_record),[img]),fist_time_record:[].concat(_toConsumableArray(this.state.fist_time_record),[current_moment])});}}.bind(this);}}case 2:case\"end\":return _context11.stop();}}},_callee11,this);}));function concat_frame(){return _concat_frame.apply(this,arguments);}return concat_frame;}()},{key:\"inference\",value:function(){var _inference=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){var _this7=this;var net,_loop,i,_loop2,_i8,_loop3,_i9;return _regeneratorRuntime.wrap(function _callee12$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:require('@tensorflow/tfjs-backend-webgl');_context15.next=3;return handpose.load();case 3:net=_context15.sent;console.log(\"Handpose model loaded.\");// Run prediction on recorded tapping data\n_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(i){var hand;return _regeneratorRuntime.wrap(function _loop$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.next=2;return net.estimateHands(_this7.state.dist_record[i]);case 2:hand=_context12.sent;if(hand.length>0){hand.forEach(function(prediction){// Calculate relative distance\nvar landmarks=prediction.landmarks;var index_dist=_this7.norm(landmarks[4],landmarks[8]);var pawn_dist=_this7.norm(landmarks[0],landmarks[2]);var current_dist=index_dist/pawn_dist;// Record distance\n_this7.setState({dist_array:[].concat(_toConsumableArray(_this7.state.dist_array),[current_dist]),dist_time_array:[].concat(_toConsumableArray(_this7.state.dist_time_array),[_this7.state.dist_time_record[i]])});// Perform counting\nif(_this7.state.index_passed===0&&current_dist-_this7.state.min_dist>0.05){_this7.setState({index_passed:1,max_dist:current_dist});console.log(1);}if(_this7.state.index_passed===1&&current_dist>_this7.state.max_dist){_this7.setState({max_dist:current_dist});console.log(2);}if(_this7.state.index_passed===1&&_this7.state.max_dist-current_dist>0.05){_this7.setState({index_passed:0,min_dist:current_dist,tap_count:[].concat(_toConsumableArray(_this7.state.tap_count),[_this7.state.dist_time_record[i]])});console.log(3);}if(_this7.state.index_passed===0&&current_dist<_this7.state.min_dist){_this7.setState({min_dist:current_dist});console.log(4);}console.log(\"INDEX COUNT:\",_this7.state.tap_count);});}case 4:case\"end\":return _context12.stop();}}},_loop);});i=0;case 7:if(!(i<this.state.dist_record.length)){_context15.next=12;break;}return _context15.delegateYield(_loop(i),\"t0\",9);case 9:i++;_context15.next=7;break;case 12:_loop2=/*#__PURE__*/_regeneratorRuntime.mark(function _loop2(_i8){var hand;return _regeneratorRuntime.wrap(function _loop2$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_context13.next=2;return net.estimateHands(_this7.state.rotate_record[_i8]);case 2:hand=_context13.sent;if(hand.length>0){hand.forEach(function(prediction){var landmarks=prediction.landmarks;var pawn_dist=_this7.norm(landmarks[0],landmarks[2]);var rotate_dist=(landmarks[2][0]-landmarks[17][0])/pawn_dist;//this.setState({pawn_rotate_array:[...this.state.pawn_rotate_array, pawn_dist]});\n_this7.setState({rotate_array:[].concat(_toConsumableArray(_this7.state.rotate_array),[rotate_dist]),rotate_time_array:[].concat(_toConsumableArray(_this7.state.rotate_time_array),[_this7.state.rotate_time_record[_i8]])});if(_this7.state.rotate_passed===0){if(rotate_dist>=0.5)_this7.setState({rotate_passed:1});if(rotate_dist<=-0.5)_this7.setState({rotate_passed:-1});}if(_this7.state.rotate_passed===1&&rotate_dist<=-0.5){_this7.setState({rotate_passed:-1});}if(_this7.state.rotate_passed===-1&&rotate_dist>=0.5){_this7.setState({rotate_passed:1,rotate_count:[].concat(_toConsumableArray(_this7.state.rotate_count),[_this7.state.rotate_time_record[_i8]])});}console.log(\"ROTATE COUNT:\",_this7.state.rotate_count);});}case 4:case\"end\":return _context13.stop();}}},_loop2);});_i8=0;case 14:if(!(_i8<this.state.rotate_record.length)){_context15.next=19;break;}return _context15.delegateYield(_loop2(_i8),\"t1\",16);case 16:_i8++;_context15.next=14;break;case 19:_loop3=/*#__PURE__*/_regeneratorRuntime.mark(function _loop3(_i9){var hand;return _regeneratorRuntime.wrap(function _loop3$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.next=2;return net.estimateHands(_this7.state.fist_record[_i9]);case 2:hand=_context14.sent;if(hand.length>0){hand.forEach(function(prediction){var landmarks=prediction.landmarks;var pawn_dist=_this7.norm(landmarks[0],landmarks[2]);var fist_dist=(landmarks[8][1]-landmarks[5][1]+(landmarks[12][1]-landmarks[9][1])+(landmarks[16][1]-landmarks[13][1])+(landmarks[20][1]-landmarks[17][1]))/(4*pawn_dist);//this.setState({pawn_fist_array:[...this.state.pawn_fist_array, pawn_dist]});\n_this7.setState({fist_array:[].concat(_toConsumableArray(_this7.state.fist_array),[fist_dist])});_this7.setState({fist_time_array:[].concat(_toConsumableArray(_this7.state.fist_time_array),[_this7.state.fist_time_record[_i9]])});if(fist_dist>=0.0){_this7.setState({fist_passed:1});}if(fist_dist<-0.4&&_this7.state.fist_passed===1){_this7.setState({fist_passed:0});_this7.setState({fist_count:[].concat(_toConsumableArray(_this7.state.fist_count),[_this7.state.fist_time_record[_i9]])});}console.log(\"FIST COUNT:\",_this7.state.fist_count);});}case 4:case\"end\":return _context14.stop();}}},_loop3);});_i9=0;case 21:if(!(_i9<this.state.fist_record.length)){_context15.next=26;break;}return _context15.delegateYield(_loop3(_i9),\"t2\",23);case 23:_i9++;_context15.next=21;break;case 26:this.setState({record:[]});case 27:case\"end\":return _context15.stop();}}},_callee12,this);}));function inference(){return _inference.apply(this,arguments);}return inference;}()},{key:\"stop_record\",value:function(){var _stop_record=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(){return _regeneratorRuntime.wrap(function _callee13$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:clearInterval(this.state.ID);_context16.next=3;return this.inference();case 3:this.setState({recording:false,finger_done:false,rotate_done:false,fist_done:false});this.compose_chart();case 5:case\"end\":return _context16.stop();}}},_callee13,this);}));function stop_record(){return _stop_record.apply(this,arguments);}return stop_record;}()},{key:\"render\",value:function render(){var videoConstraints={facingMode:this.state.facingMode};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(Webcam,{ref:this.webcamRef,videoConstraints:videoConstraints,style:{position:\"absolute\",marginLeft:\"auto\",marginRight:\"auto\",left:0,right:0,textAlign:\"center\",zindex:9,width:\"auto\",height:\"auto\"}}),/*#__PURE__*/_jsx(\"canvas\",{ref:this.canvasRef,style:{position:\"absolute\",marginLeft:\"auto\",marginRight:\"auto\",left:0,right:0,textAlign:\"center\",zindex:9,width:\"auto\",height:\"auto\"}})]}),this.state.button_mode?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.increment_tap1,id:\"button1\",children:\"Index Finger\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.increment_tap2,id:\"button2\",children:\"Middle Finger\"})]}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[this.state.real_time_inferencing?this.state.finger_done?this.state.rotate_done?/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.stop_real_time_inference,children:\"Calculate Result\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.stop_rotating,children:\"Finish Rotating\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.stop_tapping,children:\"Finish Tapping\"}):/*#__PURE__*/_jsx(Button,{disabled:this.state.recording,variant:\"contained\",color:\"primary\",onClick:this.runHandpose,children:\"Starting Real Time Inference\"}),this.state.recording?this.state.finger_done?this.state.rotate_done?/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:this.stop_record,children:\"Calculate Result\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:this.stop_rotating,children:\"Finish Rotating\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:this.stop_tapping,children:\"Finish Tapping\"}):/*#__PURE__*/_jsx(Button,{disabled:this.state.real_time_inferencing,variant:\"contained\",color:\"secondary\",onClick:this.record_video,children:\"Starting Recording\"}),/*#__PURE__*/_jsx(Button,{disabled:this.state.recording||this.state.real_time_inferencing,variant:\"outlined\",color:\"secondary\",onClick:this.reset_counter,children:\"Reset All\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h5\",{children:[\"Finger Tapping Count:\",this.state.tap_count.length,\"\\xA0\\xA0\\xA0\\xA0 Rotate Count:\",this.state.rotate_count.length,\"\\xA0\\xA0\\xA0\\xA0 Gripping Count: \",this.state.fist_count.length,\"\\xA0\\xA0\\xA0\\xA0 FPS: \",this.state.avg_fps]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"small\",{children:\"Enter Real Measurement (cm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"real_measurement\",onChange:this.compose_chart,step:\"0.001\",min:\"0\",max:\"20\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!this.state.chart_ready,onClick:this.switch_style,children:\"Switch Chart Style\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.switch_cam,children:\"Switch Camera\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"small\",{children:\"Experimental Features\"}),/*#__PURE__*/_jsx(\"button\",{disabled:this.state.recording||this.state.real_time_inferencing,onClick:this.runPosenet,children:\"PoseNet\"}),/*#__PURE__*/_jsx(\"button\",{disabled:this.state.recording||this.state.real_time_inferencing,onClick:this.runFacemesh,children:\"Facemesh\"}),/*#__PURE__*/_jsx(\"button\",{disabled:this.state.recording||this.state.real_time_inferencing,onClick:this.switch_button,children:\"Switch On/Off Button\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[this.state.chart_ready?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Line,{data:this.state.chart_data1}),/*#__PURE__*/_jsx(Line,{data:this.state.chart_data2}),/*#__PURE__*/_jsx(Line,{data:this.state.chart_data3})]}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"upload-json\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"upload-weights\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:this.getArray,children:\"Get Array\"})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/wongh/Documents/GitHub/tfjs-app/src/App.js"],"names":["React","Button","handpose","posenet","facemesh","Webcam","drawHand_tap","drawHand_rotate","drawHand_fist","writeText","drawKeypoints","drawSkeleton","drawMesh","sqrt","pow","Line","App","props","sleep","milliseconds","Promise","resolve","setTimeout","exportToJson","objectData","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","getArray","dict","tap_count","state","rotate_count","fist_count","dist_array","dist_time_array","dist_record","dist_time_record","rotate_array","rotate_time_array","rotate_record","rotate_time_record","fist_array","fist_time_array","fist_record","fist_time_record","gait_record","gait_time_record","startAt","avg_fps","ID","index_passed","min_dist","max_dist","rotate_passed","last_pressed","real_time_inferencing","recording","button_mode","chart_ready","finger_done","rotate_done","fist_done","chart_data1","chart_data2","chart_data3","wait","wait_till","Date","now","dead_frame","raw","facingMode","webcamRef","createRef","canvasRef","videoConstraints","capture_interval","runHandpose","bind","stop_real_time_inference","stop_tapping","stop_rotating","stop_record","record_video","concat_frame","inference","reset_counter","increment_tap1","increment_tap2","switch_button","compose_chart","runPosenet","real_time_posenet","runFacemesh","real_time_facemesh","switch_style","switch_cam","setState","require","load","net","console","log","Interval_ID","setInterval","current","video","readyState","videoWidth","videoHeight","width","height","estimateFaces","face","ctx","getContext","estimateSinglePose","pose","time_array_1","count_array_1","label_1","time_array_2","count_array_2","label_2","time_array_3","count_array_3","label_3","real_dist","getElementById","value","length","i","tmp","d_array","avg_value","Math","abs","data1","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","data2","data3","current_moment","lm1","lm2","clearInterval","clearRect","text","x","y","real_time_inference","estimateHands","hand","forEach","prediction","landmarks","pawn_dist","norm","index_dist","current_dist","rotate_dist","fist_passed","fist_dist","image","getScreenshot","img","src","onload","record","position","marginLeft","marginRight","left","right","textAlign","zindex","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport * as posenet from \"@tensorflow-models/posenet\";\r\nimport * as facemesh from \"@tensorflow-models/facemesh\";\r\n//import * as tf from '@tensorflow/tfjs-core';\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawHand_tap, drawHand_rotate, drawHand_fist, writeText, drawKeypoints, drawSkeleton, drawMesh } from \"./utilities\";\r\nimport { sqrt, pow } from \"mathjs\"\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ID : 0,\r\n      tap_count : [],\r\n      rotate_count : [],\r\n      fist_count : [],\r\n      index_passed : 0,\r\n      min_dist: 0,\r\n      max_dist: 5.0,\r\n      rotate_passed : 0,\r\n      last_pressed:0,\r\n      real_time_inferencing:false,\r\n      recording:false,\r\n      button_mode:false,\r\n      chart_ready:false,\r\n      finger_done : false,\r\n      rotate_done : false,\r\n      fist_done : false,\r\n      dist_array : [],\r\n      dist_time_array : [],\r\n      dist_record : [],\r\n      dist_time_record : [],\r\n      rotate_array : [],\r\n      rotate_time_array : [],\r\n      rotate_record : [],\r\n      rotate_time_record : [],\r\n      fist_array : [],\r\n      fist_time_array : [],\r\n      fist_record : [],\r\n      fist_time_record : [],\r\n      gait_record : [],\r\n      gait_time_record : [],\r\n      chart_data1 : null,\r\n      chart_data2 : null,\r\n      chart_data3 : null,\r\n      wait : false,\r\n      wait_till : 0,\r\n      startAt: Date.now(),\r\n      dead_frame: 0,\r\n      raw: true,\r\n      facingMode: \"user\",\r\n      avg_fps: 0,\r\n    };\r\n    this.webcamRef = React.createRef(null);\r\n    this.canvasRef = React.createRef(null);\r\n    this.videoConstraints = {facingMode: \"user\"};\r\n    this.capture_interval = 100;\r\n    this.runHandpose = this.runHandpose.bind(this);\r\n    this.stop_real_time_inference = this.stop_real_time_inference.bind(this);\r\n    this.stop_tapping = this.stop_tapping.bind(this);\r\n    this.stop_rotating = this.stop_rotating.bind(this);\r\n    this.stop_record = this.stop_record.bind(this);\r\n    this.record_video = this.record_video.bind(this);\r\n    this.concat_frame = this.concat_frame.bind(this);\r\n    this.inference = this.inference.bind(this);\r\n    this.reset_counter = this.reset_counter.bind(this);\r\n    this.increment_tap1 = this.increment_tap1.bind(this);\r\n    this.increment_tap2 = this.increment_tap2.bind(this);\r\n    this.switch_button = this.switch_button.bind(this);\r\n    this.compose_chart = this.compose_chart.bind(this);\r\n    this.runPosenet = this.runPosenet.bind(this);\r\n    this.real_time_posenet = this.real_time_posenet.bind(this);\r\n    this.runFacemesh = this.runFacemesh.bind(this);\r\n    this.real_time_facemesh = this.real_time_facemesh.bind(this);\r\n    this.switch_style = this.switch_style.bind(this);\r\n    this.switch_cam = this.switch_cam.bind(this);\r\n    this.getArray = this.getArray.bind(this);\r\n    this.exportToJson = this.exportToJson.bind(this);\r\n  }\r\n\r\n  switch_cam(){\r\n    if (this.state.facingMode === \"user\") this.setState({facingMode: \"environment\"});\r\n    else if (this.state.facingMode === \"environment\") this.setState({facingMode: \"user\"});\r\n  }\r\n\r\n  async runFacemesh(){\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await facemesh.load();\r\n    console.log(\"Facemesh model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_facemesh(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true});\r\n  }\r\n\r\n  async real_time_facemesh(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000});\r\n      this.setState({wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const face = await net.estimateFaces(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      drawMesh(face, ctx);\r\n    }\r\n  }\r\n\r\n  async runPosenet(){\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await posenet.load();\r\n    console.log(\"PoseNet model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_posenet(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true});\r\n  }\r\n\r\n  async real_time_posenet(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000,\r\n        wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const pose = await net.estimateSinglePose(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\r\n      drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\r\n    }\r\n  }\r\n\r\n  async switch_style(){\r\n    await this.setState({raw: !this.state.raw});\r\n    this.compose_chart();\r\n  }\r\n\r\n  compose_chart(){\r\n    let time_array_1 = [];\r\n    let count_array_1 = [];\r\n    let label_1 = \"\";\r\n    let time_array_2 = [];\r\n    let count_array_2 = [];\r\n    let label_2 = \"\";\r\n    let time_array_3 = [];\r\n    let count_array_3 = [];\r\n    let label_3 = \"\";\r\n    let real_dist = document.getElementById(\"real_measurement\").value;\r\n    let avg_fps = this.state.dist_time_array.length / \r\n                 (this.state.dist_time_array[this.state.dist_time_array.length - 1] - \r\n                  this.state.dist_time_array[0]);\r\n    this.setState({avg_fps:avg_fps});\r\n    \r\n    if (this.state.raw){\r\n      // Print Data Raw\r\n      time_array_1 = [...this.state.dist_time_array];\r\n      count_array_1 = [...this.state.dist_array];\r\n      time_array_2 = [...this.state.rotate_time_array];\r\n      count_array_2 = [...this.state.rotate_array];\r\n      time_array_3 = [...this.state.fist_time_array];\r\n      count_array_3 = [...this.state.fist_array];\r\n      \r\n      // Change to Real Life Measurement\r\n      if (real_dist > 0.0001){\r\n        label_1 = \"Distance between Index and Thumb (cm)\";\r\n        label_2 = \"Relative Location between Left and Right of Hand (cm)\";\r\n        label_3 = \"Relative Location between Tip of Fingers and Finger Joints (cm)\";\r\n        let i = 0;\r\n        let tmp = 0;\r\n        for (i = 0; i < count_array_1.length; i++){\r\n          tmp = count_array_1[i];\r\n          count_array_1[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_2.length; i++){\r\n          tmp = count_array_2[i];\r\n          count_array_2[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_3.length; i++){\r\n          tmp = count_array_3[i];\r\n          count_array_3[i] = tmp*real_dist;\r\n        }\r\n      }\r\n      else{\r\n        label_1 = \"Distance between Index and Thumb (Relative Scale)\";\r\n        label_2 = \"Relative Location between Left and Right of Hand (Relative Scale)\";\r\n        label_3 = \"Relative Location between Tip of Fingers and Finger Joints (Relative Scale)\";\r\n      }\r\n    }\r\n    else{\r\n      // Recalculate Tapping Data\r\n      let d_array = [];\r\n      let avg_value = 0;\r\n      for (let i = 1; i < this.state.dist_array.length; i++) d_array = [...d_array, Math.abs(this.state.dist_array[i-1] - this.state.dist_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_1 = [...count_array_1, avg_value];\r\n        time_array_1 = [...time_array_1, this.state.dist_time_array[i]];\r\n      }\r\n\r\n      d_array = [];\r\n      avg_value = 0;\r\n      for (let i = 1; i < this.state.rotate_array.length; i++) d_array = [...d_array, Math.abs(this.state.rotate_array[i-1] - this.state.rotate_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_2 = [...count_array_2, avg_value];\r\n        time_array_2 = [...time_array_2, this.state.rotate_time_array[i]];\r\n      }\r\n\r\n      d_array = [];\r\n      avg_value = 0;\r\n      for (let i = 1; i < this.state.fist_array.length; i++) d_array = [...d_array, Math.abs(this.state.fist_array[i-1] - this.state.fist_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_3 = [...count_array_3, avg_value];\r\n        time_array_3 = [...time_array_3, this.state.fist_time_array[i]];\r\n      }\r\n\r\n      // Change to Real Life Measurement\r\n      if (real_dist > 0.0001){\r\n        label_1 = \"Average Distance between Index and Thumb per Second (cm)\";\r\n        label_2 = \"Average Distance between Left and Right of Hand per Second (cm)\";\r\n        label_3 = \"Average Distance Location between Tip of Fingers and Finger Joints per Second (cm)\";\r\n        let i = 0;\r\n        let tmp = 0;\r\n        for (i = 0; i < count_array_1.length; i++){\r\n          tmp = count_array_1[i];\r\n          count_array_1[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_2.length; i++){\r\n          tmp = count_array_2[i];\r\n          count_array_2[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_3.length; i++){\r\n          tmp = count_array_3[i];\r\n          count_array_3[i] = tmp*real_dist;\r\n        }\r\n      }\r\n      else{\r\n        label_1 = \"Average Distance between Index and Thumb per Second (Relative Scale)\";\r\n        label_2 = \"Average Distance between Left and Right of Hand per Second (Relative Scale)\";\r\n        label_3 = \"Average Distance Location between Tip of Fingers and Finger Joints per Second (Relative Scale)\";\r\n      }\r\n    }\r\n\r\n    // Setup Graphs\r\n    const data1 = {\r\n      labels: time_array_1,\r\n      datasets: [        \r\n        {\r\n          label: label_1,\r\n          fill: false,\r\n          lineTension: 0.3,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_1\r\n        }\r\n      ]\r\n    };\r\n    const data2 = {\r\n      labels: time_array_2,\r\n      datasets: [        \r\n        {\r\n          label: label_2,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(192,75,192,0.4)',\r\n          borderColor: 'rgba(192,75,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(192,75,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(192,75,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_2 \r\n        },\r\n      ]\r\n    };\r\n    const data3 = {\r\n      labels: time_array_3,\r\n      datasets: [        \r\n        {\r\n          label: label_3,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(192,192,75,0.4)',\r\n          borderColor: 'rgba(192,192,75,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(192,192,75,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(192,192,75,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_3\r\n        }\r\n      ]\r\n    };\r\n    this.setState({chart_data1:data1});\r\n    this.setState({chart_data2:data2});\r\n    this.setState({chart_data3:data3});\r\n    this.setState({chart_ready:true});\r\n  }\r\n\r\n  switch_button(){\r\n    if (this.state.button_mode === true){\r\n      this.setState({button_mode:false});\r\n      this.compose_chart();\r\n    }\r\n    else{\r\n      this.setState({button_mode:true})\r\n    }\r\n  }\r\n\r\n  increment_tap1(){\r\n    if (this.state.last_pressed !== 1){\r\n      let current_moment = (Date.now() - this.state.startAt)/1000\r\n      this.setState({last_pressed:1})\r\n      this.setState({dist_array:[...this.state.dist_array, 1.0]});\r\n      this.setState({dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n      this.setState({tap_count:[...this.state.tap_count, current_moment]});\r\n    }\r\n  }\r\n\r\n  increment_tap2(){\r\n    if (this.state.last_pressed !== 2){\r\n      let current_moment = (Date.now() - this.state.startAt)/1000\r\n      this.setState({last_pressed:2})\r\n      this.setState({dist_array:[...this.state.dist_array, 1.0]});\r\n      this.setState({dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n      this.setState({tap_count:[...this.state.tap_count, current_moment]});\r\n    }\r\n  }\r\n\r\n  norm(lm1, lm2){\r\n    return sqrt(pow(lm1[0]-lm2[0], 2)+pow(lm1[1]-lm2[1], 2))\r\n  }\r\n\r\n  reset_counter(){\r\n    clearInterval(this.state.ID);\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n    this.setState({\r\n      ID : 0,\r\n      tap_count : [],\r\n      rotate_count : [],\r\n      fist_count : [],\r\n      index_passed : 0,\r\n      min_dist: 0,\r\n      max_dist: 5.0,\r\n      rotate_passed : 0,\r\n      last_pressed:0,\r\n      real_time_inferencing:false,\r\n      recording:false,\r\n      button_mode:false,\r\n      chart_ready:false,\r\n      finger_done : false,\r\n      rotate_done : false,\r\n      fist_done : false,\r\n      dist_array : [],\r\n      dist_time_array : [],\r\n      dist_record : [],\r\n      dist_time_record : [],\r\n      rotate_array : [],\r\n      rotate_time_array : [],\r\n      rotate_record : [],\r\n      rotate_time_record : [],\r\n      fist_array : [],\r\n      fist_time_array : [],\r\n      fist_record : [],\r\n      fist_time_record : [],\r\n      gait_record : [],\r\n      gait_time_record : [],\r\n      chart_data1 : null,\r\n      chart_data2 : null,\r\n      chart_data3 : null,\r\n      wait : false,\r\n      wait_till : 0,\r\n      startAt: Date.now(),\r\n      dead_frame: 0,\r\n      raw: true,\r\n      facingMode: \"user\",\r\n      avg_fps: 0,\r\n    });\r\n  }\r\n\r\n  sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n  }\r\n\r\n  async runHandpose() {\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    writeText(ctx, { text: 'Loading', x: 180, y: 70 });\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await handpose.load();\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n    //const uploadJSONInput = document.getElementById('upload-json');\r\n    //const uploadWeightsInput = document.getElementById('upload-weights');\r\n    //const model = await tf.loadLayersModel(tf.io.browserFiles([uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\r\n    console.log(\"Handpose model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_inference(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true,\r\n      wait:true});\r\n  };\r\n\r\n  async real_time_inference(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000});\r\n      this.setState({wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const hand = await net.estimateHands(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      \r\n      //check if waiting\r\n      if (Date.now() < this.state.wait_till){\r\n        if (hand.length > 0) drawHand_tap (hand, ctx);\r\n        //count down 3, 2, 1\r\n        if (this.state.wait_till - Date.now() < 1000) writeText(ctx, { text: '1', x: 180, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 2000) writeText(ctx, { text: '2', x: 140, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 3000) writeText(ctx, { text: '3', x: 100, y: 70 });\r\n      }\r\n      else {\r\n        if (hand.length > 0){\r\n          hand.forEach((prediction) => {\r\n            this.setState({dead_frame: 0});\r\n            const landmarks = prediction.landmarks\r\n\r\n            let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n            let current_moment = (Date.now() - this.state.startAt)/1000\r\n\r\n            if (this.state.finger_done === false){\r\n              drawHand_tap (hand, ctx);\r\n              // Calculate relative distance\r\n              let index_dist = this.norm(landmarks[4], landmarks[8]);\r\n              let current_dist = index_dist/pawn_dist;\r\n\r\n              // Record distance\r\n              this.setState({dist_array:[...this.state.dist_array, current_dist],\r\n                dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n              \r\n              // Perform counting\r\n              if (this.state.index_passed === 0 && (current_dist - this.state.min_dist) > 0.05){\r\n                this.setState({index_passed:1,\r\n                  max_dist: current_dist});\r\n                console.log(1);\r\n              }\r\n              if (this.state.index_passed === 1 && current_dist > this.state.max_dist){\r\n                this.setState({max_dist: current_dist});\r\n                console.log(2);\r\n              }\r\n              if (this.state.index_passed === 1 && (this.state.max_dist - current_dist) > 0.05){\r\n                this.setState({index_passed:0,\r\n                  min_dist: current_dist,\r\n                  tap_count:[...this.state.tap_count, current_moment]});\r\n                console.log(3);\r\n              }\r\n              if (this.state.index_passed === 0 && current_dist < this.state.min_dist){\r\n                this.setState({min_dist: current_dist});\r\n                console.log(4);\r\n              }\r\n            }\r\n            \r\n            if (this.state.finger_done === true && this.state.rotate_done === false){\r\n              drawHand_rotate (hand, ctx, this.state.rotate_passed);\r\n              // Calculate relative distance\r\n              let rotate_dist = (landmarks[2][0] - landmarks[17][0]) / pawn_dist;\r\n\r\n              // Record distance\r\n              this.setState({rotate_array:[...this.state.rotate_array, rotate_dist],\r\n                rotate_time_array:[...this.state.rotate_time_array, current_moment]});\r\n\r\n              // Perform counting\r\n              if (this.state.rotate_passed === 0){\r\n                if (rotate_dist >= 0.25) this.setState({rotate_passed:1});\r\n                if (rotate_dist <= -0.25) this.setState({rotate_passed:-1});\r\n              }\r\n              if (this.state.rotate_passed === 1 && rotate_dist <= -0.5){\r\n                this.setState({rotate_passed:-1});\r\n              }\r\n              if (this.state.rotate_passed === -1 && rotate_dist >= 0.5){\r\n                this.setState({rotate_passed:1,\r\n                  rotate_count:[...this.state.rotate_count, current_moment]});\r\n              }\r\n            }\r\n\r\n            if (this.state.rotate_done === true && this.state.fist_done === false){\r\n              console.log(this.state.fist_passed);\r\n              drawHand_fist (hand, ctx, this.state.fist_passed);\r\n              // Calculate relative distance\r\n              let fist_dist =  ((landmarks[8][1] - landmarks[5][1])+\r\n                                (landmarks[12][1] - landmarks[9][1])+\r\n                                (landmarks[16][1] - landmarks[13][1])+\r\n                                (landmarks[20][1] - landmarks[17][1]))/\r\n                                (4*pawn_dist)\r\n\r\n              // Record distance\r\n              this.setState({fist_array:[...this.state.fist_array, fist_dist],\r\n                fist_time_array:[...this.state.fist_time_array, current_moment]});\r\n\r\n              // Perform counting\r\n              if (fist_dist >= 0.0){this.setState({fist_passed:1})}\r\n              if (fist_dist < -0.4 && this.state.fist_passed === 1){\r\n                this.setState({fist_passed:0,\r\n                  fist_count:[...this.state.fist_count, current_moment]});\r\n              }\r\n            }                  \r\n          });\r\n        }\r\n        else {\r\n          // Warning message for hand off screen\r\n          if (this.state.dead_frame > 9) writeText(ctx, { text: 'Hand Off Screen', x: 180, y: 70 });\r\n          this.setState({dead_frame: this.state.dead_frame + 1});\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  async stop_tapping() {\r\n    this.setState({finger_done:true});\r\n    this.setState({wait:true});\r\n  }\r\n\r\n  async stop_rotating() {\r\n    this.setState({rotate_done:true});\r\n    this.setState({wait:true});\r\n  }\r\n\r\n  stop_real_time_inference() {\r\n    clearInterval(this.state.ID);\r\n    this.setState({real_time_inferencing:false,\r\n                   finger_done:false,\r\n                   rotate_done:false,\r\n                   fist_done:false});\r\n    this.compose_chart();\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n  }\r\n\r\n  async record_video(){\r\n    this.setState({startAt:Date.now()});\r\n    console.log(\"Handpose model loaded.\");\r\n    const Interval_ID = setInterval(() => {\r\n      this.concat_frame();\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      recording:true,\r\n      wait:true});\r\n  }\r\n\r\n  async concat_frame() {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000,\r\n        wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      if (Date.now() < this.state.wait_till){\r\n        console.log(\"Waiting till \", this.state.wait_till);\r\n        //count down 3, 2, 1\r\n        const ctx = this.canvasRef.current.getContext(\"2d\");\r\n        if (this.state.wait_till - Date.now() < 250) ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n        else if (this.state.wait_till - Date.now() < 1000) writeText(ctx, { text: '1', x: 180, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 2000) writeText(ctx, { text: '2', x: 140, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 3000) writeText(ctx, { text: '3', x: 100, y: 70 });\r\n      }\r\n      else {\r\n        let current_moment = (Date.now() - this.state.startAt)/1000;\r\n        const image = this.webcamRef.current.getScreenshot();      \r\n        var img = document.createElement(\"img\");\r\n        img.src = image;\r\n        img.onload = function(){\r\n          if (this.state.finger_done === false){\r\n            this.setState({dist_record:[...this.state.dist_record, img],\r\n              dist_time_record:[...this.state.dist_time_record, current_moment]});\r\n          }\r\n\r\n          else if (this.state.finger_done === true && this.state.rotate_done === false){\r\n            this.setState({rotate_record:[...this.state.rotate_record, img],\r\n              rotate_time_record:[...this.state.rotate_time_record, current_moment]});\r\n          }\r\n\r\n          else if (this.state.rotate_done === true && this.state.fist_done === false){\r\n            this.setState({fist_record:[...this.state.fist_record, img],\r\n              fist_time_record:[...this.state.fist_time_record, current_moment]});\r\n          }\r\n        }.bind(this)\r\n      }\r\n    }\r\n  }\r\n\r\n  async inference() {\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n\r\n    // Run prediction on recorded tapping data\r\n    for (let i = 0; i<this.state.dist_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.dist_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => { \r\n          // Calculate relative distance\r\n          const landmarks = prediction.landmarks\r\n          let index_dist = this.norm(landmarks[4], landmarks[8]);\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let current_dist = index_dist/pawn_dist;\r\n\r\n          // Record distance\r\n          this.setState({dist_array:[...this.state.dist_array, current_dist],\r\n            dist_time_array:[...this.state.dist_time_array, this.state.dist_time_record[i]]});\r\n          \r\n          // Perform counting\r\n          if (this.state.index_passed === 0 && (current_dist - this.state.min_dist) > 0.05){\r\n            this.setState({index_passed:1,\r\n              max_dist: current_dist});\r\n            console.log(1);\r\n          }\r\n          if (this.state.index_passed === 1 && current_dist > this.state.max_dist){\r\n            this.setState({max_dist: current_dist});\r\n            console.log(2);\r\n          }\r\n          if (this.state.index_passed === 1 && (this.state.max_dist - current_dist) > 0.05){\r\n            this.setState({index_passed:0,\r\n              min_dist: current_dist,\r\n              tap_count:[...this.state.tap_count, this.state.dist_time_record[i]]});\r\n            console.log(3);\r\n          }\r\n          if (this.state.index_passed === 0 && current_dist < this.state.min_dist){\r\n            this.setState({min_dist: current_dist});\r\n            console.log(4);\r\n          }\r\n          console.log(\"INDEX COUNT:\", this.state.tap_count);\r\n        });\r\n      }\r\n    }\r\n\r\n    // Run prediction on recorded rotation data\r\n    for (let i = 0; i<this.state.rotate_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.rotate_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => {\r\n          const landmarks = prediction.landmarks\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let rotate_dist = (landmarks[2][0] - landmarks[17][0]) / pawn_dist;\r\n          //this.setState({pawn_rotate_array:[...this.state.pawn_rotate_array, pawn_dist]});\r\n          this.setState({rotate_array:[...this.state.rotate_array, rotate_dist],\r\n            rotate_time_array:[...this.state.rotate_time_array, this.state.rotate_time_record[i]]});\r\n          if (this.state.rotate_passed === 0){\r\n            if (rotate_dist >= 0.5) this.setState({rotate_passed:1});\r\n            if (rotate_dist <= -0.5) this.setState({rotate_passed:-1});\r\n          }\r\n          if (this.state.rotate_passed === 1 && rotate_dist <= -0.5){\r\n            this.setState({rotate_passed:-1});\r\n          }\r\n          if (this.state.rotate_passed === -1 && rotate_dist >= 0.5){\r\n            this.setState({rotate_passed:1, \r\n              rotate_count:[...this.state.rotate_count, this.state.rotate_time_record[i]]});\r\n          }\r\n          console.log(\"ROTATE COUNT:\", this.state.rotate_count);\r\n        });\r\n      }\r\n    }\r\n\r\n    // Run prediction on recorded gripping data\r\n    for (let i = 0; i<this.state.fist_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.fist_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => {\r\n          const landmarks = prediction.landmarks\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let fist_dist =  ((landmarks[8][1] - landmarks[5][1])+\r\n            (landmarks[12][1] - landmarks[9][1])+\r\n            (landmarks[16][1] - landmarks[13][1])+\r\n            (landmarks[20][1] - landmarks[17][1]))/\r\n            (4*pawn_dist)\r\n          //this.setState({pawn_fist_array:[...this.state.pawn_fist_array, pawn_dist]});\r\n          this.setState({fist_array:[...this.state.fist_array, fist_dist]});\r\n          this.setState({fist_time_array:[...this.state.fist_time_array, this.state.fist_time_record[i]]});\r\n          if (fist_dist >= 0.0){this.setState({fist_passed:1})}\r\n          if (fist_dist < -0.4 && this.state.fist_passed === 1){\r\n            this.setState({fist_passed:0});\r\n            this.setState({fist_count:[...this.state.fist_count, this.state.fist_time_record[i]]});\r\n          }\r\n          console.log(\"FIST COUNT:\", this.state.fist_count);\r\n        });\r\n      }\r\n    }\r\n    this.setState({record:[]});\r\n  }\r\n\r\n  async stop_record() {\r\n    clearInterval(this.state.ID);\r\n    await this.inference();\r\n    this.setState({recording:false,\r\n      finger_done:false,\r\n      rotate_done:false,\r\n      fist_done:false});\r\n    this.compose_chart();\r\n  }\r\n\r\n  exportToJson = (objectData, filename) => {\r\n    let contentType = \"application/json;charset=utf-8;\";\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n      navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n      var a = document.createElement('a');\r\n      a.download = filename;\r\n      a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData));\r\n      a.target = '_blank';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    }\r\n  }\r\n \r\n  getArray = () => {\r\n    let dict = {\r\n      tap_count : this.state.tap_count,\r\n      rotate_count : this.state.rotate_count,\r\n      fist_count : this.state.fist_count,\r\n      dist_array : this.state.dist_array,\r\n      dist_time_array : this.state.dist_time_array,\r\n      dist_record : this.state.dist_record,\r\n      dist_time_record : this.state.dist_time_record,\r\n      rotate_array : this.state.rotate_array,\r\n      rotate_time_array : this.state.rotate_time_array,\r\n      rotate_record : this.state.rotate_record,\r\n      rotate_time_record : this.state.rotate_time_record,\r\n      fist_array : this.state.fist_array,\r\n      fist_time_array : this.state.fist_time_array,\r\n      fist_record : this.state.fist_record,\r\n      fist_time_record : this.state.fist_time_record,\r\n      gait_record : this.state.gait_record,\r\n      gait_time_record : this.state.gait_time_record,\r\n      startAt: this.state.startAt,\r\n      avg_fps: this.state.avg_fps,\r\n    }\r\n    this.exportToJson(dict, \"state\");\r\n  }\r\n\r\n  render(){\r\n    const videoConstraints = {\r\n      facingMode: this.state.facingMode\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <Webcam\r\n          ref={this.webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={this.canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n        </header>\r\n          {this.state.button_mode ? (\r\n            <div>\r\n              <button onClick={this.increment_tap1} id=\"button1\">Index Finger</button>\r\n              <button onClick={this.increment_tap2} id=\"button2\">Middle Finger</button>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n\r\n          <div>\r\n            {this.state.real_time_inferencing ? (\r\n              this.state.finger_done ? (\r\n                this.state.rotate_done ? (\r\n                  <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_real_time_inference}>Calculate Result</Button>\r\n                ):(\r\n                  <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_rotating}>Finish Rotating</Button>\r\n                )\r\n              ):(\r\n                <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_tapping}>Finish Tapping</Button>\r\n              )            \r\n            ) : (\r\n            <Button disabled={this.state.recording} variant=\"contained\" color=\"primary\"  onClick={this.runHandpose}>Starting Real Time Inference</Button>\r\n            )}\r\n\r\n            {this.state.recording ? (\r\n              this.state.finger_done ? (\r\n                this.state.rotate_done ? (\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_record}>Calculate Result</Button>\r\n                ):(\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_rotating}>Finish Rotating</Button>\r\n                )\r\n              ):(\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_tapping}>Finish Tapping</Button>\r\n              )            \r\n            ) : (\r\n            <Button disabled={this.state.real_time_inferencing} variant=\"contained\" color=\"secondary\" onClick={this.record_video}>Starting Recording</Button>\r\n            )}\r\n\r\n            <Button disabled={this.state.recording||this.state.real_time_inferencing} variant=\"outlined\" color=\"secondary\" onClick={this.reset_counter}>\r\n              Reset All\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <h5>\r\n              Finger Tapping Count:{this.state.tap_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              Rotate Count:{this.state.rotate_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              Gripping Count: {this.state.fist_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              FPS: {this.state.avg_fps}\r\n            </h5>\r\n          </div>\r\n          <div>\r\n            <small>Enter Real Measurement (cm)</small>\r\n            <input type=\"number\" id=\"real_measurement\" onChange={this.compose_chart} step=\"0.001\" min='0' max='20'></input>\r\n            <button disabled={!this.state.chart_ready} onClick={this.switch_style}>Switch Chart Style</button>\r\n            <button onClick={this.switch_cam}>Switch Camera</button>\r\n          </div>\r\n          <div>\r\n            <small>Experimental Features</small>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.runPosenet}>PoseNet</button>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.runFacemesh}>Facemesh</button>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.switch_button}>Switch On/Off Button</button>\r\n          </div>\r\n          <div>\r\n            {this.state.chart_ready ? (\r\n              <div>\r\n                <Line data={this.state.chart_data1} />\r\n                <Line data={this.state.chart_data2} />\r\n                <Line data={this.state.chart_data3} />\r\n              </div>\r\n            ) : (\r\n              <div/>\r\n            )}\r\n            <div>\r\n              <input type=\"file\" id=\"upload-json\"></input>\r\n            </div>\r\n            <div>\r\n              <input type=\"file\" id=\"upload-weights\"></input>\r\n            </div>\r\n            <button onClick={this.getArray}>Get Array</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}