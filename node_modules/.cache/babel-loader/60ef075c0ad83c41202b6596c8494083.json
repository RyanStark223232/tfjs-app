{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\r\n * Reverses a `tf.Tensor1D`.\r\n *\r\n * @param x The input tensor.\r\n */\n\nfunction reverse1d_(x) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  util.assert($x.rank === 1, function () {\n    return \"Error in reverse1D: x must be rank 1 but got rank \".concat($x.rank, \".\");\n  });\n  return reverse($x, 0);\n}\n\nexport var reverse1d = op({\n  reverse1d_: reverse1d_\n});","map":{"version":3,"sources":["../../src/ops/reverse_1d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,eAAR,QAA8B,oBAA9B;AAEA,OAAO,KAAK,IAAZ,MAAsB,SAAtB;AACA,SAAQ,EAAR,QAAiB,aAAjB;AACA,SAAQ,OAAR,QAAsB,WAAtB;AAEA;;;;AAIG;;AACH,SAAS,UAAT,CAAoB,CAApB,EAA0C;AACxC,MAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,SAAT,CAA1B;AACA,EAAA,IAAI,CAAC,MAAL,CACI,EAAE,CAAC,IAAH,KAAY,CADhB,EAEI;AAAA,uEAA2D,EAAE,CAAC,IAA9D;AAAA,GAFJ;AAGA,SAAO,OAAO,CAAC,EAAD,EAAK,CAAL,CAAd;AACD;;AAED,OAAO,IAAM,SAAS,GAAG,EAAE,CAAC;AAAC,EAAA,UAAU,EAAV;AAAD,CAAD,CAApB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport * as util from '../util';\r\nimport { op } from './operation';\r\nimport { reverse } from './reverse';\r\n/**\r\n * Reverses a `tf.Tensor1D`.\r\n *\r\n * @param x The input tensor.\r\n */\r\nfunction reverse1d_(x) {\r\n    const $x = convertToTensor(x, 'x', 'reverse');\r\n    util.assert($x.rank === 1, () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\r\n    return reverse($x, 0);\r\n}\r\nexport const reverse1d = op({ reverse1d_ });\r\n//# sourceMappingURL=reverse_1d.js.map"]},"metadata":{},"sourceType":"module"}