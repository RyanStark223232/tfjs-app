{"ast":null,"code":"import { factory } from '../../utils/factory';\nimport { errorTransform } from './utils/errorTransform';\nimport { createSubset } from '../../function/matrix/subset';\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var subset = createSubset({\n    typed: typed,\n    matrix: matrix\n  });\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/mathjs/es/expression/transform/subset.transform.js"],"names":["factory","errorTransform","createSubset","name","dependencies","createSubsetTransform","_ref","typed","matrix","subset","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,CAAnB;AACA,OAAO,IAAIC,qBAAqB,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAqB,UAAUE,IAAV,EAAgB;AAC5F,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAEA,MAAIC,MAAM,GAAGP,YAAY,CAAC;AACxBK,IAAAA,KAAK,EAAEA,KADiB;AAExBC,IAAAA,MAAM,EAAEA;AAFgB,GAAD,CAAzB;AAIA;AACF;AACA;AACA;AACA;AACA;;AAEE,SAAOD,KAAK,CAAC,QAAD,EAAW;AACrB,cAAU,SAASG,GAAT,CAAaC,IAAb,EAAmB;AAC3B,UAAI;AACF,eAAOF,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBD,IAAnB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMZ,cAAc,CAACY,GAAD,CAApB;AACD;AACF;AAPoB,GAAX,CAAZ;AASD,CAvBwD,EAuBtD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CAvBsD,CAAlD","sourcesContent":["import { factory } from '../../utils/factory';\r\nimport { errorTransform } from './utils/errorTransform';\r\nimport { createSubset } from '../../function/matrix/subset';\r\nvar name = 'subset';\r\nvar dependencies = ['typed', 'matrix'];\r\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\r\n  var typed = _ref.typed,\r\n      matrix = _ref.matrix;\r\n  var subset = createSubset({\r\n    typed: typed,\r\n    matrix: matrix\r\n  });\r\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\r\n\r\n  return typed('subset', {\r\n    '...any': function any(args) {\r\n      try {\r\n        return subset.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"]},"metadata":{},"sourceType":"module"}