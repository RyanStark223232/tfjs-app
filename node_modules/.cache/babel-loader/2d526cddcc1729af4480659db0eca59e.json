{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Max } from '../kernel_names';\nimport * as util from '../util';\nimport { gradForMinAndMax } from './min_max_grad_util';\nexport var maxGradConfig = {\n  kernelName: Max,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var maxAttrs = attrs;\n    var reductionIndices = maxAttrs.reductionIndices;\n    var x = saved[0];\n    var y = saved[1];\n    var origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    var maxGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: function x() {\n        return maxGrad['x']();\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Max_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAR,QAA4B,iBAA5B;AAGA,OAAO,KAAK,IAAZ,MAAsB,SAAtB;AAEA,SAAQ,gBAAR,QAA+B,qBAA/B;AAEA,OAAO,IAAM,aAAa,GAAe;AACvC,EAAA,UAAU,EAAE,GAD2B;AAEvC,EAAA,YAAY,EAAE,CAAC,GAAD,CAFyB;AAGvC,EAAA,aAAa,EAAE,CAAC,IAAD,CAHwB;AAIvC,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;AAC7D,QAAM,QAAQ,GAAa,KAA3B;AAD6D,QAEtD,gBAFsD,GAElC,QAFkC,CAEtD,gBAFsD;AAG7D,QAAM,CAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,CAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,cAAL,CAAoB,gBAApB,EAAsC,CAAC,CAAC,KAAxC,CAAjB;AACA,QAAM,OAAO,GAAG,gBAAgB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,QAAX,CAAhC;AACA,WAAO;AACL,MAAA,CAAC,EAAE,aAAK;AACN,eAAO,OAAO,CAAC,GAAD,CAAP,EAAP;AACD;AAHI,KAAP;AAKD;AAhBsC,CAAlC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Max } from '../kernel_names';\r\nimport * as util from '../util';\r\nimport { gradForMinAndMax } from './min_max_grad_util';\r\nexport const maxGradConfig = {\r\n    kernelName: Max,\r\n    inputsToSave: ['x'],\r\n    outputsToSave: [true],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const maxAttrs = attrs;\r\n        const { reductionIndices } = maxAttrs;\r\n        const x = saved[0];\r\n        const y = saved[1];\r\n        const origAxes = util.parseAxisParam(reductionIndices, x.shape);\r\n        const maxGrad = gradForMinAndMax(dy, y, x, origAxes);\r\n        return {\r\n            x: () => {\r\n                return maxGrad['x']();\r\n            }\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Max_grad.js.map"]},"metadata":{},"sourceType":"module"}