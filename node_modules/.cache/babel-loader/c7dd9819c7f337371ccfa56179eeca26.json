{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { LRNBackprop } from '../kernel_names';\nimport { op } from './operation';\n\nfunction localResponseNormalizationBackprop_(x, y, dy, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\n  const forward = backend => backend.LRNGrad(dy, x, y, depthRadius, bias, alpha, beta);\n\n  const inputs = {\n    x,\n    y,\n    dy\n  };\n  const attrs = {\n    depthRadius,\n    bias,\n    alpha,\n    beta\n  };\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , LRNBackprop, attrs);\n}\n\nexport const localResponseNormalizationBackprop = op({\n  localResponseNormalizationBackprop_\n});","map":{"version":3,"sources":["../../src/ops/local_response_normalization_backprop.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAkC,WAAlC;AACA,SAAQ,WAAR,QAA+D,iBAA/D;AAKA,SAAQ,EAAR,QAAiB,aAAjB;;AAEA,SAAS,mCAAT,CACI,CADJ,EACU,CADV,EACgB,EADhB,EACuB,WAAW,GAAG,CADrC,EACwC,IAAI,GAAG,CAD/C,EACkD,KAAK,GAAG,CAD1D,EAC6D,IAAI,GAAG,GADpE,EACuE;AACrE,QAAM,OAAO,GAAwB,OAAO,IACxC,OAAO,CAAC,OAAR,CAAgB,EAAhB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,WAA1B,EAAuC,IAAvC,EAA6C,KAA7C,EAAoD,IAApD,CADJ;;AAGA,QAAM,MAAM,GAAsB;AAAC,IAAA,CAAD;AAAI,IAAA,CAAJ;AAAO,IAAA;AAAP,GAAlC;AAEA,QAAM,KAAK,GAAqB;AAAC,IAAA,WAAD;AAAc,IAAA,IAAd;AAAoB,IAAA,KAApB;AAA2B,IAAA;AAA3B,GAAhC;AAEA,SAAO,MAAM,CAAC,aAAP,CACI,OADJ,EACa,MADb,EAC6C;AAAK;AADlD,IAEI,WAFJ,EAEiB,KAFjB,CAAP;AAGD;;AAED,OAAO,MAAM,kCAAkC,GAC3C,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CADC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { LRNBackprop } from '../kernel_names';\r\nimport { op } from './operation';\r\nfunction localResponseNormalizationBackprop_(x, y, dy, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\r\n    const forward = backend => backend.LRNGrad(dy, x, y, depthRadius, bias, alpha, beta);\r\n    const inputs = { x, y, dy };\r\n    const attrs = { depthRadius, bias, alpha, beta };\r\n    return ENGINE.runKernelFunc(forward, inputs, null /* grad */, LRNBackprop, attrs);\r\n}\r\nexport const localResponseNormalizationBackprop = op({ localResponseNormalizationBackprop_ });\r\n//# sourceMappingURL=local_response_normalization_backprop.js.map"]},"metadata":{},"sourceType":"module"}