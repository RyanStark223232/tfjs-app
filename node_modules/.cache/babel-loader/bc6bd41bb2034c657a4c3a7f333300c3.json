{"ast":null,"code":"import _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { getCoordsDataType } from './shader_compiler';\nexport var GatherNDProgram = function GatherNDProgram(sliceDim, strides, shape) {\n  _classCallCheck(this, GatherNDProgram);\n\n  this.sliceDim = sliceDim;\n  this.strides = strides;\n  this.variableNames = ['x', 'indices'];\n  this.outputShape = shape;\n  var stridesType = getCoordsDataType(strides.length);\n  var dtype = getCoordsDataType(shape.length);\n  var strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n  this.userCode = \"\\n        \".concat(stridesType, \" strides = \").concat(stridesType, \"(\").concat(this.strides, \");\\n         void main() {\\n          \").concat(dtype, \" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \").concat(this.sliceDim, \"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \").concat(strideString, \";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \");\n};","map":{"version":3,"sources":["../src/gather_nd_gpu.ts"],"names":[],"mappings":";AAiBA,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,WAAa,eAAb,GAIE,yBACY,QADZ,EACsC,OADtC,EACyD,KADzD,EACwE;AAAA;;AAA5D,OAAA,QAAA,GAAA,QAAA;AAA0B,OAAA,OAAA,GAAA,OAAA;AAJtC,OAAA,aAAA,GAAgB,CAAC,GAAD,EAAM,SAAN,CAAhB;AAKE,OAAK,WAAL,GAAmB,KAAnB;AACA,MAAM,WAAW,GAAG,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAArC;AACA,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,MAAP,CAA/B;AACA,MAAM,YAAY,GAAG,KAAK,QAAL,GAAgB,CAAhB,GAAoB,YAApB,GAAmC,SAAxD;AACA,OAAK,QAAL,uBACM,WADN,wBAC+B,WAD/B,cAC8C,KAAK,OADnD,mDAGQ,KAHR,0GAK4B,KAAK,QALjC,qHAOkC,YAPlC;AAYD,CAtBH","sourceRoot":"","sourcesContent":["import { getCoordsDataType } from './shader_compiler';\r\nexport class GatherNDProgram {\r\n    constructor(sliceDim, strides, shape) {\r\n        this.sliceDim = sliceDim;\r\n        this.strides = strides;\r\n        this.variableNames = ['x', 'indices'];\r\n        this.outputShape = shape;\r\n        const stridesType = getCoordsDataType(strides.length);\r\n        const dtype = getCoordsDataType(shape.length);\r\n        const strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\r\n        this.userCode = `\r\n        ${stridesType} strides = ${stridesType}(${this.strides});\r\n         void main() {\r\n          ${dtype} coords = getOutputCoords();\r\n          int flattenIndex = 0;\r\n          for (int j = 0; j < ${this.sliceDim}; j++) {\r\n            int index = round(getIndices(coords[0], j));\r\n            flattenIndex += index * ${strideString};\r\n          }\r\n          setOutput(getX(flattenIndex, coords[1]));\r\n        }\r\n      `;\r\n    }\r\n}\r\n//# sourceMappingURL=gather_nd_gpu.js.map"]},"metadata":{},"sourceType":"module"}