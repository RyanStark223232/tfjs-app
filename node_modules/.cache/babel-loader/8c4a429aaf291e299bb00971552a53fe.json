{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Rsqrt } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\r\n * `y = 1 / sqrt(x)`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, 4, -1]);\r\n *\r\n * x.rsqrt().print();  // or tf.rsqrt(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\n\nfunction rsqrt_(x) {\n  const $x = convertToTensor(x, 'x', 'rsqrt');\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc((backend, save) => {\n    const res = backend.rsqrt($x);\n    save([$x]);\n    return res;\n  }, inputs, null\n  /* grad */\n  , Rsqrt);\n}\n\nexport const rsqrt = op({\n  rsqrt_\n});","map":{"version":3,"sources":["../../src/ops/rsqrt.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,KAAR,QAAiC,iBAAjC;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;;AAYG;;AACH,SAAS,MAAT,CAAkC,CAAlC,EAAiD;AAC/C,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,OAAT,CAA1B;AAEA,QAAM,MAAM,GAAgB;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA5B;AAEA,SAAO,MAAM,CAAC,aAAP,CAAqB,CAAC,OAAD,EAAU,IAAV,KAAkB;AAC5C,UAAM,GAAG,GAAG,OAAO,CAAC,KAAR,CAAc,EAAd,CAAZ;AACA,IAAA,IAAI,CAAC,CAAC,EAAD,CAAD,CAAJ;AACA,WAAO,GAAP;AACD,GAJM,EAIJ,MAJI,EAI4B;AAAK;AAJjC,IAI6C,KAJ7C,CAAP;AAKD;;AACD,OAAO,MAAM,KAAK,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAhB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Rsqrt } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\r\n * `y = 1 / sqrt(x)`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, 4, -1]);\r\n *\r\n * x.rsqrt().print();  // or tf.rsqrt(x)\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\r\nfunction rsqrt_(x) {\r\n    const $x = convertToTensor(x, 'x', 'rsqrt');\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc((backend, save) => {\r\n        const res = backend.rsqrt($x);\r\n        save([$x]);\r\n        return res;\r\n    }, inputs, null /* grad */, Rsqrt);\r\n}\r\nexport const rsqrt = op({ rsqrt_ });\r\n//# sourceMappingURL=rsqrt.js.map"]},"metadata":{},"sourceType":"module"}