{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { makeZerosTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\n/**\r\n * Creates a `tf.Tensor` with all elements set to 0.\r\n *\r\n * ```js\r\n * tf.zeros([2, 2]).print();\r\n * ```\r\n *\r\n * @param shape An array of integers defining the output tensor shape.\r\n * @param dtype The type of an element in the resulting tensor. Can\r\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\n\nexport function zeros(shape) {\n  var dtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float32';\n\n  if (dtype === 'complex64') {\n    var real = zeros(shape, 'float32');\n    var imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n\n  var values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype);\n}","map":{"version":3,"sources":["../../src/ops/zeros.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AAGA,SAAQ,mBAAR,EAA6B,aAA7B,QAAiD,SAAjD;AAEA,SAAQ,OAAR,QAAsB,WAAtB;AAEA;;;;;;;;;;;;AAYG;;AACH,OAAM,SAAU,KAAV,CACF,KADE,EAC6C;AAAA,MAA3B,KAA2B,uEAAT,SAAS;;AACjD,MAAI,KAAK,KAAK,WAAd,EAA2B;AACzB,QAAM,IAAI,GAAG,KAAK,CAAC,KAAD,EAAQ,SAAR,CAAlB;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,KAAD,EAAQ,SAAR,CAAlB;AACA,WAAO,OAAO,CAAC,IAAD,EAAO,IAAP,CAAd;AACD;;AACD,MAAM,MAAM,GAAG,mBAAmB,CAAC,aAAa,CAAC,KAAD,CAAd,EAAuB,KAAvB,CAAlC;AACA,SAAO,MAAM,CAAC,UAAP,CAAkB,MAAlB,EAA0B,KAA1B,EAAiC,KAAjC,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { makeZerosTypedArray, sizeFromShape } from '../util';\r\nimport { complex } from './complex';\r\n/**\r\n * Creates a `tf.Tensor` with all elements set to 0.\r\n *\r\n * ```js\r\n * tf.zeros([2, 2]).print();\r\n * ```\r\n *\r\n * @param shape An array of integers defining the output tensor shape.\r\n * @param dtype The type of an element in the resulting tensor. Can\r\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\r\nexport function zeros(shape, dtype = 'float32') {\r\n    if (dtype === 'complex64') {\r\n        const real = zeros(shape, 'float32');\r\n        const imag = zeros(shape, 'float32');\r\n        return complex(real, imag);\r\n    }\r\n    const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\r\n    return ENGINE.makeTensor(values, shape, dtype);\r\n}\r\n//# sourceMappingURL=zeros.js.map"]},"metadata":{},"sourceType":"module"}