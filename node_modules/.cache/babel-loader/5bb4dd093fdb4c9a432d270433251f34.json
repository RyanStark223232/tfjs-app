{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { SGDOptimizer } from './sgd_optimizer';\n/** @doclink Optimizer */\n\nexport var MomentumOptimizer = /*#__PURE__*/function (_SGDOptimizer) {\n  _inherits(MomentumOptimizer, _SGDOptimizer);\n\n  var _super = _createSuper(MomentumOptimizer);\n\n  function MomentumOptimizer(learningRate, momentum) {\n    var _this;\n\n    var useNesterov = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, MomentumOptimizer);\n\n    _this = _super.call(this, learningRate);\n    _this.learningRate = learningRate;\n    _this.momentum = momentum;\n    _this.useNesterov = useNesterov;\n    _this.accumulations = [];\n    _this.m = scalar(_this.momentum);\n    return _this;\n  }\n\n  _createClass(MomentumOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n\n        if (_this2.accumulations[i] == null) {\n          var trainable = false;\n          _this2.accumulations[i] = {\n            originalName: \"\".concat(name, \"/momentum\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        var accumulation = _this2.accumulations[i].variable;\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        tidy(function () {\n          var newValue;\n          var newAccumulation = add(mul(_this2.m, accumulation), gradient);\n\n          if (_this2.useNesterov) {\n            newValue = add(mul(_this2.c, add(gradient, mul(newAccumulation, _this2.m))), value);\n          } else {\n            newValue = add(mul(_this2.c, newAccumulation), value);\n          }\n\n          accumulation.assign(newAccumulation);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.m.dispose();\n\n      if (this.accumulations != null) {\n        _dispose(this.accumulations.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n    /**\r\n     * Sets the momentum of the optimizer.\r\n     *\r\n     * @param momentum\r\n     */\n\n  }, {\n    key: \"setMomentum\",\n    value: function setMomentum(momentum) {\n      this.momentum = momentum;\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.saveIterations();\n\n              case 2:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(this.accumulations.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                trainable = false;\n                this.accumulations = weightValues.map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'momentum': this.momentum,\n        'useNesterov': this.useNesterov\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n  }]);\n\n  return MomentumOptimizer;\n}(SGDOptimizer);\n/** @nocollapse */\n\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\n\nregisterClass(MomentumOptimizer);","map":{"version":3,"sources":["../../src/optimizers/momentum_optimizer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { dispose, tidy } from '../globals';\r\nimport { add } from '../ops/add';\r\nimport { mul } from '../ops/mul';\r\nimport { scalar } from '../ops/scalar';\r\nimport { zerosLike } from '../ops/zeros_like';\r\nimport { registerClass } from '../serialization';\r\nimport { SGDOptimizer } from './sgd_optimizer';\r\n/** @doclink Optimizer */\r\nexport class MomentumOptimizer extends SGDOptimizer {\r\n    constructor(learningRate, momentum, useNesterov = false) {\r\n        super(learningRate);\r\n        this.learningRate = learningRate;\r\n        this.momentum = momentum;\r\n        this.useNesterov = useNesterov;\r\n        this.accumulations = [];\r\n        this.m = scalar(this.momentum);\r\n    }\r\n    applyGradients(variableGradients) {\r\n        const variableNames = Array.isArray(variableGradients) ?\r\n            variableGradients.map(item => item.name) :\r\n            Object.keys(variableGradients);\r\n        variableNames.forEach((name, i) => {\r\n            const value = ENGINE.registeredVariables[name];\r\n            if (this.accumulations[i] == null) {\r\n                const trainable = false;\r\n                this.accumulations[i] = {\r\n                    originalName: `${name}/momentum`,\r\n                    variable: tidy(() => zerosLike(value).variable(trainable))\r\n                };\r\n            }\r\n            const accumulation = this.accumulations[i].variable;\r\n            const gradient = Array.isArray(variableGradients) ?\r\n                variableGradients[i].tensor :\r\n                variableGradients[name];\r\n            if (gradient == null) {\r\n                return;\r\n            }\r\n            tidy(() => {\r\n                let newValue;\r\n                const newAccumulation = add(mul(this.m, accumulation), gradient);\r\n                if (this.useNesterov) {\r\n                    newValue = add(mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\r\n                }\r\n                else {\r\n                    newValue = add(mul(this.c, newAccumulation), value);\r\n                }\r\n                accumulation.assign(newAccumulation);\r\n                value.assign(newValue);\r\n            });\r\n        });\r\n        this.incrementIterations();\r\n    }\r\n    dispose() {\r\n        this.m.dispose();\r\n        if (this.accumulations != null) {\r\n            dispose(this.accumulations.map(v => v.variable));\r\n        }\r\n    }\r\n    /**\r\n     * Sets the momentum of the optimizer.\r\n     *\r\n     * @param momentum\r\n     */\r\n    setMomentum(momentum) {\r\n        this.momentum = momentum;\r\n    }\r\n    async getWeights() {\r\n        // Order matters for Python compatibility.\r\n        return [await this.saveIterations()].concat(this.accumulations.map(v => ({ name: v.originalName, tensor: v.variable })));\r\n    }\r\n    async setWeights(weightValues) {\r\n        weightValues = await this.extractIterations(weightValues);\r\n        const trainable = false;\r\n        this.accumulations = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\r\n    }\r\n    getConfig() {\r\n        return {\r\n            'learningRate': this.learningRate,\r\n            'momentum': this.momentum,\r\n            'useNesterov': this.useNesterov\r\n        };\r\n    }\r\n    /** @nocollapse */\r\n    static fromConfig(cls, config) {\r\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\r\n    }\r\n}\r\n/** @nocollapse */\r\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\r\nregisterClass(MomentumOptimizer);\r\n//# sourceMappingURL=momentum_optimizer.js.map"]},"metadata":{},"sourceType":"module"}