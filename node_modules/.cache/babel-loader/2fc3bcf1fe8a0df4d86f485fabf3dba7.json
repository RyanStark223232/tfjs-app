{"ast":null,"code":"import _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var ConcatProgram = // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\nfunction ConcatProgram(shapes) {\n  _classCallCheck(this, ConcatProgram);\n\n  this.outputShape = [];\n  this.outputShape = backend_util.computeOutShape(shapes, 1\n  /* axis */\n  );\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var offsets = new Array(shapes.length - 1);\n  offsets[0] = shapes[0][1];\n\n  for (var i = 1; i < offsets.length; i++) {\n    offsets[i] = offsets[i - 1] + shapes[i][1];\n  }\n\n  var snippets = [\"if (yC < \".concat(offsets[0], \") setOutput(getT0(yR, yC));\")];\n\n  for (var _i = 1; _i < offsets.length; _i++) {\n    var shift = offsets[_i - 1];\n    snippets.push(\"else if (yC < \".concat(offsets[_i], \") \") + \"setOutput(getT\".concat(_i, \"(yR, yC-\").concat(shift, \"));\"));\n  }\n\n  var lastIndex = offsets.length;\n  var lastShift = offsets[offsets.length - 1];\n  snippets.push(\"else setOutput(getT\".concat(lastIndex, \"(yR, yC-\").concat(lastShift, \"));\"));\n  this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \".concat(snippets.join('\\n        '), \"\\n      }\\n    \");\n};","map":{"version":3,"sources":["../src/concat_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,QAA2B,uBAA3B;AAGA,WAAa,aAAb,GAKE;AACA,uBAAY,MAAZ,EAA2C;AAAA;;AAJ3C,OAAA,WAAA,GAAwB,EAAxB;AAKE,OAAK,WAAL,GAAmB,YAAY,CAAC,eAAb,CAA6B,MAA7B,EAAqC;AAAE;AAAvC,GAAnB;AACA,OAAK,aAAL,GAAqB,MAAM,CAAC,GAAP,CAAW,UAAC,CAAD,EAAI,CAAJ;AAAA,sBAAc,CAAd;AAAA,GAAX,CAArB;AAEA,MAAM,OAAO,GAAa,IAAI,KAAJ,CAAU,MAAM,CAAC,MAAP,GAAgB,CAA1B,CAA1B;AACA,EAAA,OAAO,CAAC,CAAD,CAAP,GAAa,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAb;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,IAAA,OAAO,CAAC,CAAD,CAAP,GAAa,OAAO,CAAC,CAAC,GAAG,CAAL,CAAP,GAAiB,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAA9B;AACD;;AAED,MAAM,QAAQ,GAAG,oBAAa,OAAO,CAAC,CAAD,CAApB,iCAAjB;;AACA,OAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,EAAC,EAArC,EAAyC;AACvC,QAAM,KAAK,GAAG,OAAO,CAAC,EAAC,GAAG,CAAL,CAArB;AACA,IAAA,QAAQ,CAAC,IAAT,CACI,wBAAiB,OAAO,CAAC,EAAD,CAAxB,kCACiB,EADjB,qBAC6B,KAD7B,QADJ;AAGD;;AACD,MAAM,SAAS,GAAG,OAAO,CAAC,MAA1B;AACA,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CAAzB;AACA,EAAA,QAAQ,CAAC,IAAT,8BAAoC,SAApC,qBAAwD,SAAxD;AAEA,OAAK,QAAL,iJAMM,QAAQ,CAAC,IAAT,CAAc,YAAd,CANN;AASD,CApCH","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { backend_util } from '@tensorflow/tfjs-core';\r\nexport class ConcatProgram {\r\n    // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\r\n    constructor(shapes) {\r\n        this.outputShape = [];\r\n        this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\r\n        this.variableNames = shapes.map((_, i) => `T${i}`);\r\n        const offsets = new Array(shapes.length - 1);\r\n        offsets[0] = shapes[0][1];\r\n        for (let i = 1; i < offsets.length; i++) {\r\n            offsets[i] = offsets[i - 1] + shapes[i][1];\r\n        }\r\n        const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\r\n        for (let i = 1; i < offsets.length; i++) {\r\n            const shift = offsets[i - 1];\r\n            snippets.push(`else if (yC < ${offsets[i]}) ` +\r\n                `setOutput(getT${i}(yR, yC-${shift}));`);\r\n        }\r\n        const lastIndex = offsets.length;\r\n        const lastShift = offsets[offsets.length - 1];\r\n        snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\r\n        this.userCode = `\r\n      void main() {\r\n        ivec2 coords = getOutputCoords();\r\n        int yR = coords.x;\r\n        int yC = coords.y;\r\n\r\n        ${snippets.join('\\n        ')}\r\n      }\r\n    `;\r\n    }\r\n}\r\n//# sourceMappingURL=concat_gpu.js.map"]},"metadata":{},"sourceType":"module"}