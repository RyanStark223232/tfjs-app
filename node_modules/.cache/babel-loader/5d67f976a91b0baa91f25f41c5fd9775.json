{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n// TODO update import path once op is modularized.\nimport { stridedSlice } from '../../ops/ops';\nimport { Tensor } from '../../tensor';\n\nTensor.prototype.stridedSlice = function (begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n  this.throwIfDisposed();\n  return stridedSlice(this, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/strided_slice.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH;AACA,SAAQ,YAAR,QAA2B,eAA3B;AACA,SAAQ,MAAR,QAAqB,cAArB;;AAYA,MAAM,CAAC,SAAP,CAAiB,YAAjB,GAAgC,UACd,KADc,EACG,GADH,EACkB,OADlB,EAE5B,SAF4B,EAER,OAFQ,EAEU,YAFV,EAG5B,WAH4B,EAGN,cAHM,EAGiB;AAC/C,OAAK,eAAL;AACA,SAAO,YAAY,CACR,IADQ,EACF,KADE,EACK,GADL,EACU,OADV,EACmB,SADnB,EAC8B,OAD9B,EACuC,YADvC,EAER,WAFQ,EAEK,cAFL,CAAnB;AAGD,CARD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n// TODO update import path once op is modularized.\r\nimport { stridedSlice } from '../../ops/ops';\r\nimport { Tensor } from '../../tensor';\r\nTensor.prototype.stridedSlice = function (begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\r\n    this.throwIfDisposed();\r\n    return stridedSlice(this, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\r\n};\r\n//# sourceMappingURL=strided_slice.js.map"]},"metadata":{},"sourceType":"module"}