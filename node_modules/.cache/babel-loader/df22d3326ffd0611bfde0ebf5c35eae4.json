{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n  let x4D = x;\n\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n\n  let dy4D = dy;\n\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const forward = backend => {\n    const convInfo = conv_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true\n    /* depthwise */\n    );\n    return backend.depthwiseConv2DDerFilter(x4D, dy4D, convInfo);\n  };\n\n  const inputs = {\n    x: x4D,\n    dy: dy4D\n  };\n  const attrs = {\n    strides,\n    pad,\n    dimRoundingMode,\n    dilations,\n    filterShape\n  };\n  return ENGINE.runKernelFunc(forward, inputs, null, DepthwiseConv2dNativeBackpropFilter, attrs);\n}\n\nexport const depthwiseConv2dNativeBackpropFilter = op({\n  depthwiseConv2dNativeBackpropFilter_\n});","map":{"version":3,"sources":["../../src/ops/depthwise_conv2d_native_backprop_filter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAAkC,WAAlC;AACA,SAAQ,mCAAR,QAAuI,iBAAvI;AAKA,OAAO,KAAK,SAAZ,MAA2B,aAA3B;AACA,SAAQ,EAAR,QAAiB,aAAjB;AACA,SAAQ,OAAR,QAAsB,WAAtB;;AAEA,SAAS,oCAAT,CACI,CADJ,EACU,EADV,EACiB,WADjB,EAEI,OAFJ,EAEsC,GAFtC,EAGI,SAAA,GAAqC,CAAC,CAAD,EAAI,CAAJ,CAHzC,EAII,eAJJ,EAI4C;AAC1C,MAAI,GAAG,GAAG,CAAV;;AACA,MAAI,CAAC,CAAC,IAAF,KAAW,CAAf,EAAkB;AAChB,IAAA,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAJ,EAAgB,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAhB,EAA4B,CAAC,CAAC,KAAF,CAAQ,CAAR,CAA5B,CAAJ,CAAb;AACD;;AACD,MAAI,IAAI,GAAG,EAAX;;AACA,MAAI,IAAI,CAAC,IAAL,KAAc,CAAlB,EAAqB;AACnB,IAAA,IAAI,GAAG,OAAO,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,EAAE,CAAC,KAAH,CAAS,CAAT,CAAJ,EAAiB,EAAE,CAAC,KAAH,CAAS,CAAT,CAAjB,EAA8B,EAAE,CAAC,KAAH,CAAS,CAAT,CAA9B,CAAL,CAAd;AACD;;AAED,QAAM,OAAO,GAAwB,OAAO,IAAG;AAC7C,UAAM,QAAQ,GAAG,SAAS,CAAC,iBAAV,CACb,CAAC,CAAC,KADW,EACgC,WADhC,EAC6C,OAD7C,EAEb,SAFa,EAEF,GAFE,EAEG,eAFH,EAEoB;AAAK;AAFzB,KAAjB;AAIA,WAAO,OAAO,CAAC,wBAAR,CAAiC,GAAjC,EAAsC,IAAtC,EAA4C,QAA5C,CAAP;AACD,GAND;;AAQA,QAAM,MAAM,GAA8C;AAAC,IAAA,CAAC,EAAE,GAAJ;AAAS,IAAA,EAAE,EAAE;AAAb,GAA1D;AACA,QAAM,KAAK,GACP;AAAC,IAAA,OAAD;AAAU,IAAA,GAAV;AAAe,IAAA,eAAf;AAAgC,IAAA,SAAhC;AAA2C,IAAA;AAA3C,GADJ;AAGA,SAAO,MAAM,CAAC,aAAP,CACI,OADJ,EACa,MADb,EAC6C,IAD7C,EAEI,mCAFJ,EAGI,KAHJ,CAAP;AAID;;AAED,OAAO,MAAM,mCAAmC,GAC5C,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CADC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\r\nimport * as conv_util from './conv_util';\r\nimport { op } from './operation';\r\nimport { reshape } from './reshape';\r\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\r\n    let x4D = x;\r\n    if (x.rank === 3) {\r\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\r\n    }\r\n    let dy4D = dy;\r\n    if (dy4D.rank === 3) {\r\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\r\n    }\r\n    const forward = backend => {\r\n        const convInfo = conv_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\r\n        return backend.depthwiseConv2DDerFilter(x4D, dy4D, convInfo);\r\n    };\r\n    const inputs = { x: x4D, dy: dy4D };\r\n    const attrs = { strides, pad, dimRoundingMode, dilations, filterShape };\r\n    return ENGINE.runKernelFunc(forward, inputs, null, DepthwiseConv2dNativeBackpropFilter, attrs);\r\n}\r\nexport const depthwiseConv2dNativeBackpropFilter = op({ depthwiseConv2dNativeBackpropFilter_ });\r\n//# sourceMappingURL=depthwise_conv2d_native_backprop_filter.js.map"]},"metadata":{},"sourceType":"module"}