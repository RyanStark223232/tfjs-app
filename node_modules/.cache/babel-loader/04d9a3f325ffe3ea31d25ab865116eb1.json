{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { backend_util, kernel_impls } from '@tensorflow/tfjs-core';\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport const nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'webgl',\n  kernelFunc: ({\n    inputs,\n    backend,\n    attrs\n  }) => {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n    const {\n      boxes,\n      scores\n    } = inputs;\n    const {\n      maxOutputSize,\n      iouThreshold,\n      scoreThreshold,\n      softNmsSigma\n    } = attrs;\n    const gpuBackend = backend;\n    const boxesVals = gpuBackend.readSync(boxes.dataId);\n    const scoresVals = gpuBackend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const {\n      selectedIndices,\n      selectedScores\n    } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [selectedIndices, selectedScores];\n  }\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV5.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,YAAtB,QAAmE,uBAAnE;AACA,SAAQ,mBAAR,QAAuF,uBAAvF;AACA,MAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAGA,OAAO,MAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,OAFwC;AAGrD,EAAA,UAAU,EAAE,CAAC;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,GAAD,KAA6B;AACvC,IAAA,YAAY,CAAC,IAAb,CACI,0DACA,0CAFJ;AAIA,UAAM;AAAC,MAAA,KAAD;AAAQ,MAAA;AAAR,QAAkB,MAAxB;AACA,UAAM;AAAC,MAAA,aAAD;AAAgB,MAAA,YAAhB;AAA8B,MAAA,cAA9B;AAA8C,MAAA;AAA9C,QACF,KADJ;AAGA,UAAM,UAAU,GAAG,OAAnB;AAEA,UAAM,SAAS,GAAG,UAAU,CAAC,QAAX,CAAoB,KAAK,CAAC,MAA1B,CAAlB;AACA,UAAM,UAAU,GAAG,UAAU,CAAC,QAAX,CAAoB,MAAM,CAAC,MAA3B,CAAnB;AAEA,UAAM,gBAAgB,GAAG,aAAzB;AACA,UAAM,eAAe,GAAG,YAAxB;AACA,UAAM,iBAAiB,GAAG,cAA1B;AACA,UAAM,eAAe,GAAG,YAAxB;AAEA,UAAM;AAAC,MAAA,eAAD;AAAkB,MAAA;AAAlB,QAAoC,uBAAuB,CAC7D,SAD6D,EAClD,UADkD,EACtC,gBADsC,EACpB,eADoB,EAE7D,iBAF6D,EAE1C,eAF0C,CAAjE;AAIA,WAAO,CAAC,eAAD,EAAkB,cAAlB,CAAP;AACD;AA3BoD,CAAhD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { backend_util, kernel_impls } from '@tensorflow/tfjs-core';\r\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\r\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\r\nexport const nonMaxSuppressionV5Config = {\r\n    kernelName: NonMaxSuppressionV5,\r\n    backendName: 'webgl',\r\n    kernelFunc: ({ inputs, backend, attrs }) => {\r\n        backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\r\n            'Call tf.nonMaxSuppressionAsync() instead');\r\n        const { boxes, scores } = inputs;\r\n        const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\r\n        const gpuBackend = backend;\r\n        const boxesVals = gpuBackend.readSync(boxes.dataId);\r\n        const scoresVals = gpuBackend.readSync(scores.dataId);\r\n        const maxOutputSizeVal = maxOutputSize;\r\n        const iouThresholdVal = iouThreshold;\r\n        const scoreThresholdVal = scoreThreshold;\r\n        const softNmsSigmaVal = softNmsSigma;\r\n        const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\r\n        return [selectedIndices, selectedScores];\r\n    }\r\n};\r\n//# sourceMappingURL=NonMaxSuppressionV5.js.map"]},"metadata":{},"sourceType":"module"}