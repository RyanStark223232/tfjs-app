{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes square of `x` element-wise: `x ^ 2`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\r\n *\r\n * x.square().print();  // or tf.square(x)\r\n * ```\r\n * @param x The input Tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\n\nfunction square_(x) {\n  const $x = convertToTensor(x, 'x', 'square');\n  const attrs = {};\n  const inputsToSave = [$x];\n  const outputsToSave = [];\n  return ENGINE.runKernelFunc((backend, save) => {\n    save([$x]);\n    return backend.square($x);\n  }, {\n    x: $x\n  }, null\n  /* grad */\n  , 'Square', attrs, inputsToSave, outputsToSave);\n}\n\nexport const square = op({\n  square_\n});","map":{"version":3,"sources":["../../src/ops/square.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AAEA,SAAQ,eAAR,QAA8B,oBAA9B;AAEA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;;AAWG;;AACH,SAAS,OAAT,CAAmC,CAAnC,EAAkD;AAChD,QAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,QAAT,CAA1B;AACA,QAAM,KAAK,GAAG,EAAd;AACA,QAAM,YAAY,GAAG,CAAC,EAAD,CAArB;AACA,QAAM,aAAa,GAAc,EAAjC;AACA,SAAO,MAAM,CAAC,aAAP,CAAqB,CAAC,OAAD,EAAU,IAAV,KAAkB;AAC5C,IAAA,IAAI,CAAC,CAAC,EAAD,CAAD,CAAJ;AACA,WAAO,OAAO,CAAC,MAAR,CAAe,EAAf,CAAP;AACD,GAHM,EAGJ;AAAC,IAAA,CAAC,EAAE;AAAJ,GAHI,EAGK;AAAK;AAHV,IAGsB,QAHtB,EAGgC,KAHhC,EAGuC,YAHvC,EAGqD,aAHrD,CAAP;AAID;;AAED,OAAO,MAAM,MAAM,GAAG,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CAAjB","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Computes square of `x` element-wise: `x ^ 2`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\r\n *\r\n * x.square().print();  // or tf.square(x)\r\n * ```\r\n * @param x The input Tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\r\nfunction square_(x) {\r\n    const $x = convertToTensor(x, 'x', 'square');\r\n    const attrs = {};\r\n    const inputsToSave = [$x];\r\n    const outputsToSave = [];\r\n    return ENGINE.runKernelFunc((backend, save) => {\r\n        save([$x]);\r\n        return backend.square($x);\r\n    }, { x: $x }, null /* grad */, 'Square', attrs, inputsToSave, outputsToSave);\r\n}\r\nexport const square = op({ square_ });\r\n//# sourceMappingURL=square.js.map"]},"metadata":{},"sourceType":"module"}