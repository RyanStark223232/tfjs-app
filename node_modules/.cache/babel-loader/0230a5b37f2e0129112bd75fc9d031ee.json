{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n// So typings can propagate.\nimport { AdadeltaOptimizer } from './optimizers/adadelta_optimizer';\nimport { AdagradOptimizer } from './optimizers/adagrad_optimizer';\nimport { AdamOptimizer } from './optimizers/adam_optimizer';\nimport { AdamaxOptimizer } from './optimizers/adamax_optimizer';\nimport { MomentumOptimizer } from './optimizers/momentum_optimizer';\nimport { OptimizerConstructors } from './optimizers/optimizer_constructors';\nimport { RMSPropOptimizer } from './optimizers/rmsprop_optimizer';\nimport { SGDOptimizer } from './optimizers/sgd_optimizer'; // tslint:disable-next-line:no-unused-expression\n\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer, RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\nexport const train = {\n  sgd: OptimizerConstructors.sgd,\n  momentum: OptimizerConstructors.momentum,\n  adadelta: OptimizerConstructors.adadelta,\n  adagrad: OptimizerConstructors.adagrad,\n  rmsprop: OptimizerConstructors.rmsprop,\n  adamax: OptimizerConstructors.adamax,\n  adam: OptimizerConstructors.adam\n};","map":{"version":3,"sources":["../src/train.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH;AACA,SAAQ,iBAAR,QAAgC,iCAAhC;AACA,SAAQ,gBAAR,QAA+B,gCAA/B;AACA,SAAQ,aAAR,QAA4B,6BAA5B;AACA,SAAQ,eAAR,QAA8B,+BAA9B;AACA,SAAQ,iBAAR,QAAgC,iCAAhC;AACA,SAAQ,qBAAR,QAAoC,qCAApC;AACA,SAAQ,gBAAR,QAA+B,gCAA/B;AACA,SAAQ,YAAR,QAA2B,4BAA3B,C,CAEA;;AACA,CAAC,iBAAD,EAAoB,YAApB,EAAkC,iBAAlC,EAAqD,gBAArD,EACC,gBADD,EACmB,eADnB,EACoC,aADpC;AAGA,OAAO,MAAM,KAAK,GAAG;AACnB,EAAA,GAAG,EAAE,qBAAqB,CAAC,GADR;AAEnB,EAAA,QAAQ,EAAE,qBAAqB,CAAC,QAFb;AAGnB,EAAA,QAAQ,EAAE,qBAAqB,CAAC,QAHb;AAInB,EAAA,OAAO,EAAE,qBAAqB,CAAC,OAJZ;AAKnB,EAAA,OAAO,EAAE,qBAAqB,CAAC,OALZ;AAMnB,EAAA,MAAM,EAAE,qBAAqB,CAAC,MANX;AAOnB,EAAA,IAAI,EAAE,qBAAqB,CAAC;AAPT,CAAd","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n// So typings can propagate.\r\nimport { AdadeltaOptimizer } from './optimizers/adadelta_optimizer';\r\nimport { AdagradOptimizer } from './optimizers/adagrad_optimizer';\r\nimport { AdamOptimizer } from './optimizers/adam_optimizer';\r\nimport { AdamaxOptimizer } from './optimizers/adamax_optimizer';\r\nimport { MomentumOptimizer } from './optimizers/momentum_optimizer';\r\nimport { OptimizerConstructors } from './optimizers/optimizer_constructors';\r\nimport { RMSPropOptimizer } from './optimizers/rmsprop_optimizer';\r\nimport { SGDOptimizer } from './optimizers/sgd_optimizer';\r\n// tslint:disable-next-line:no-unused-expression\r\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer,\r\n    RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\r\nexport const train = {\r\n    sgd: OptimizerConstructors.sgd,\r\n    momentum: OptimizerConstructors.momentum,\r\n    adadelta: OptimizerConstructors.adadelta,\r\n    adagrad: OptimizerConstructors.adagrad,\r\n    rmsprop: OptimizerConstructors.rmsprop,\r\n    adamax: OptimizerConstructors.adamax,\r\n    adam: OptimizerConstructors.adam\r\n};\r\n//# sourceMappingURL=train.js.map"]},"metadata":{},"sourceType":"module"}