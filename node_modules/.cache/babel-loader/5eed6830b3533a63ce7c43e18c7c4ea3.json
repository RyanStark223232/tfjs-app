{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { absGradConfig } from './gradients/Abs_grad';\nimport { acosGradConfig } from './gradients/Acos_grad';\nimport { acoshGradConfig } from './gradients/Acosh_grad';\nimport { addGradConfig } from './gradients/Add_grad';\nimport { addNGradConfig } from './gradients/AddN_grad';\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\nimport { asinGradConfig } from './gradients/Asin_grad';\nimport { asinhGradConfig } from './gradients/Asinh_grad';\nimport { atan2GradConfig } from './gradients/Atan2_grad';\nimport { atanGradConfig } from './gradients/Atan_grad';\nimport { atanhGradConfig } from './gradients/Atanh_grad';\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\nimport { castGradConfig } from './gradients/Cast_grad';\nimport { ceilGradConfig } from './gradients/Ceil_grad';\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\nimport { concatGradConfig } from './gradients/Concat_grad';\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\nimport { cosGradConfig } from './gradients/Cos_grad';\nimport { coshGradConfig } from './gradients/Cosh_grad';\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\nimport { divGradConfig } from './gradients/Div_grad';\nimport { eluGradConfig } from './gradients/Elu_grad';\nimport { erfGradConfig } from './gradients/Erf_grad';\nimport { expGradConfig } from './gradients/Exp_grad';\nimport { expm1GradConfig } from './gradients/Expm1_grad';\nimport { floorGradConfig } from './gradients/Floor_grad';\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\nimport { identityGradConfig } from './gradients/Identity_grad';\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\nimport { isInfGradConfig } from './gradients/IsInf_grad';\nimport { isNanGradConfig } from './gradients/IsNan_grad';\nimport { log1pGradConfig } from './gradients/Log1p_grad';\nimport { logGradConfig } from './gradients/Log_grad';\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\nimport { lrnGradConfig } from './gradients/LRN_grad';\nimport { maxGradConfig } from './gradients/Max_grad';\nimport { maximumGradConfig } from './gradients/Maximum_grad';\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\nimport { minGradConfig } from './gradients/Min_grad';\nimport { minimumGradConfig } from './gradients/Minimum_grad';\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\nimport { modGradConfig } from './gradients/Mod_grad';\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\nimport { negateGradConfig } from './gradients/Negate_grad';\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\nimport { padV2GradConfig } from './gradients/PadV2_grad';\nimport { powGradConfig } from './gradients/Pow_grad';\nimport { preluGradConfig } from './gradients/Prelu_grad';\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\nimport { relu6GradConfig } from './gradients/Relu6_grad';\nimport { reluGradConfig } from './gradients/Relu_grad';\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\nimport { reverseGradConfig } from './gradients/Reverse_grad';\nimport { roundGradConfig } from './gradients/Round_grad';\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\nimport { selectV2PoolGradConfig } from './gradients/SelectV2_grad';\nimport { seluGradConfig } from './gradients/Selu_grad';\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\nimport { signGradConfig } from './gradients/Sign_grad';\nimport { sinGradConfig } from './gradients/Sin_grad';\nimport { sinhGradConfig } from './gradients/Sinh_grad';\nimport { sliceGradConfig } from './gradients/Slice_grad';\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\nimport { softplusGradConfig } from './gradients/Softplus_grad';\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\nimport { splitVGradConfig } from './gradients/SplitV_grad';\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\nimport { squareGradConfig } from './gradients/Square_grad';\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\nimport { stepGradConfig } from './gradients/Step_grad';\nimport { subGradConfig } from './gradients/Sub_grad';\nimport { sumGradConfig } from './gradients/Sum_grad';\nimport { tanGradConfig } from './gradients/Tan_grad';\nimport { tanhGradConfig } from './gradients/Tanh_grad';\nimport { tileGradConfig } from './gradients/Tile_grad';\nimport { transposeGradConfig } from './gradients/Transpose_grad';\nimport { unpackGradConfig } from './gradients/Unpack_grad';\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\nimport { registerGradient } from './kernel_registry'; // Export all kernel configs here so that the package can auto register them\n\nvar gradConfigs = [absGradConfig, acosGradConfig, acoshGradConfig, addGradConfig, addNGradConfig, argMaxGradConfig, argMinGradConfig, asinGradConfig, asinhGradConfig, atan2GradConfig, atanGradConfig, atanhGradConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulGradConfig, batchToSpaceNDGradConfig, broadcastToGradConfig, castGradConfig, ceilGradConfig, clipByValueGradConfig, concatGradConfig, conv2DBackpropInputGradConfig, conv2DGradConfig, conv3DGradConfig, cosGradConfig, coshGradConfig, cumsumGradConfig, depthwiseConv2dNativeGradConfig, dilation2dGradConfig, divGradConfig, eluGradConfig, erfGradConfig, expGradConfig, expm1GradConfig, floorDivGradConfig, floorGradConfig, fusedBatchNormGradConfig, gatherGradConfig, greaterEqualGradConfig, identityGradConfig, isFiniteGradConfig, isInfGradConfig, isNanGradConfig, log1pGradConfig, logGradConfig, logSoftmaxGradConfig, lrnGradConfig, maxGradConfig, maxGradConfig, maximumGradConfig, maxPool3DGradConfig, maxPoolGradConfig, minGradConfig, minimumGradConfig, mirrorPadGradConfig, modGradConfig, multiplyGradConfig, negateGradConfig, oneHotGradConfig, onesLikeGradConfig, padV2GradConfig, padV2GradConfig, powGradConfig, preluGradConfig, reciprocalGradConfig, relu6GradConfig, reluGradConfig, reshapeGradConfig, resizeBilinearGradConfig, resizeNearestNeighborGradConfig, reverseGradConfig, roundGradConfig, rsqrtGradConfig, selectV2PoolGradConfig, seluGradConfig, sigmoidGradConfig, signGradConfig, sinGradConfig, sinhGradConfig, sliceGradConfig, softmaxGradConfig, softplusGradConfig, spaceToBatchNDGradConfig, spaceToBatchNDGradConfig, splitVGradConfig, splitVGradConfig, sqrtGradConfig, squaredDifferenceGradConfig, squareGradConfig, stepGradConfig, subGradConfig, sumGradConfig, tanGradConfig, tanhGradConfig, tileGradConfig, transposeGradConfig, unpackGradConfig, unsortedSegmentSumGradConfig, zerosLikeGradConfig];\n\nfor (var _i = 0, _gradConfigs = gradConfigs; _i < _gradConfigs.length; _i++) {\n  var gradientConfig = _gradConfigs[_i];\n  registerGradient(gradientConfig);\n}","map":{"version":3,"sources":["../src/register_all_gradients.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { absGradConfig } from './gradients/Abs_grad';\r\nimport { acosGradConfig } from './gradients/Acos_grad';\r\nimport { acoshGradConfig } from './gradients/Acosh_grad';\r\nimport { addGradConfig } from './gradients/Add_grad';\r\nimport { addNGradConfig } from './gradients/AddN_grad';\r\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\r\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\r\nimport { asinGradConfig } from './gradients/Asin_grad';\r\nimport { asinhGradConfig } from './gradients/Asinh_grad';\r\nimport { atan2GradConfig } from './gradients/Atan2_grad';\r\nimport { atanGradConfig } from './gradients/Atan_grad';\r\nimport { atanhGradConfig } from './gradients/Atanh_grad';\r\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\r\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\r\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\r\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\r\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\r\nimport { castGradConfig } from './gradients/Cast_grad';\r\nimport { ceilGradConfig } from './gradients/Ceil_grad';\r\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\r\nimport { concatGradConfig } from './gradients/Concat_grad';\r\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\r\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\r\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\r\nimport { cosGradConfig } from './gradients/Cos_grad';\r\nimport { coshGradConfig } from './gradients/Cosh_grad';\r\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\r\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\r\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\r\nimport { divGradConfig } from './gradients/Div_grad';\r\nimport { eluGradConfig } from './gradients/Elu_grad';\r\nimport { erfGradConfig } from './gradients/Erf_grad';\r\nimport { expGradConfig } from './gradients/Exp_grad';\r\nimport { expm1GradConfig } from './gradients/Expm1_grad';\r\nimport { floorGradConfig } from './gradients/Floor_grad';\r\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\r\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\r\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\r\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\r\nimport { identityGradConfig } from './gradients/Identity_grad';\r\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\r\nimport { isInfGradConfig } from './gradients/IsInf_grad';\r\nimport { isNanGradConfig } from './gradients/IsNan_grad';\r\nimport { log1pGradConfig } from './gradients/Log1p_grad';\r\nimport { logGradConfig } from './gradients/Log_grad';\r\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\r\nimport { lrnGradConfig } from './gradients/LRN_grad';\r\nimport { maxGradConfig } from './gradients/Max_grad';\r\nimport { maximumGradConfig } from './gradients/Maximum_grad';\r\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\r\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\r\nimport { minGradConfig } from './gradients/Min_grad';\r\nimport { minimumGradConfig } from './gradients/Minimum_grad';\r\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\r\nimport { modGradConfig } from './gradients/Mod_grad';\r\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\r\nimport { negateGradConfig } from './gradients/Negate_grad';\r\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\r\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\r\nimport { padV2GradConfig } from './gradients/PadV2_grad';\r\nimport { powGradConfig } from './gradients/Pow_grad';\r\nimport { preluGradConfig } from './gradients/Prelu_grad';\r\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\r\nimport { relu6GradConfig } from './gradients/Relu6_grad';\r\nimport { reluGradConfig } from './gradients/Relu_grad';\r\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\r\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\r\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\r\nimport { reverseGradConfig } from './gradients/Reverse_grad';\r\nimport { roundGradConfig } from './gradients/Round_grad';\r\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\r\nimport { selectV2PoolGradConfig } from './gradients/SelectV2_grad';\r\nimport { seluGradConfig } from './gradients/Selu_grad';\r\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\r\nimport { signGradConfig } from './gradients/Sign_grad';\r\nimport { sinGradConfig } from './gradients/Sin_grad';\r\nimport { sinhGradConfig } from './gradients/Sinh_grad';\r\nimport { sliceGradConfig } from './gradients/Slice_grad';\r\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\r\nimport { softplusGradConfig } from './gradients/Softplus_grad';\r\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\r\nimport { splitVGradConfig } from './gradients/SplitV_grad';\r\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\r\nimport { squareGradConfig } from './gradients/Square_grad';\r\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\r\nimport { stepGradConfig } from './gradients/Step_grad';\r\nimport { subGradConfig } from './gradients/Sub_grad';\r\nimport { sumGradConfig } from './gradients/Sum_grad';\r\nimport { tanGradConfig } from './gradients/Tan_grad';\r\nimport { tanhGradConfig } from './gradients/Tanh_grad';\r\nimport { tileGradConfig } from './gradients/Tile_grad';\r\nimport { transposeGradConfig } from './gradients/Transpose_grad';\r\nimport { unpackGradConfig } from './gradients/Unpack_grad';\r\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\r\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\r\nimport { registerGradient } from './kernel_registry';\r\n// Export all kernel configs here so that the package can auto register them\r\nconst gradConfigs = [\r\n    absGradConfig,\r\n    acosGradConfig,\r\n    acoshGradConfig,\r\n    addGradConfig,\r\n    addNGradConfig,\r\n    argMaxGradConfig,\r\n    argMinGradConfig,\r\n    asinGradConfig,\r\n    asinhGradConfig,\r\n    atan2GradConfig,\r\n    atanGradConfig,\r\n    atanhGradConfig,\r\n    avgPool3DGradConfig,\r\n    avgPoolGradConfig,\r\n    batchMatMulGradConfig,\r\n    batchToSpaceNDGradConfig,\r\n    broadcastToGradConfig,\r\n    castGradConfig,\r\n    ceilGradConfig,\r\n    clipByValueGradConfig,\r\n    concatGradConfig,\r\n    conv2DBackpropInputGradConfig,\r\n    conv2DGradConfig,\r\n    conv3DGradConfig,\r\n    cosGradConfig,\r\n    coshGradConfig,\r\n    cumsumGradConfig,\r\n    depthwiseConv2dNativeGradConfig,\r\n    dilation2dGradConfig,\r\n    divGradConfig,\r\n    eluGradConfig,\r\n    erfGradConfig,\r\n    expGradConfig,\r\n    expm1GradConfig,\r\n    floorDivGradConfig,\r\n    floorGradConfig,\r\n    fusedBatchNormGradConfig,\r\n    gatherGradConfig,\r\n    greaterEqualGradConfig,\r\n    identityGradConfig,\r\n    isFiniteGradConfig,\r\n    isInfGradConfig,\r\n    isNanGradConfig,\r\n    log1pGradConfig,\r\n    logGradConfig,\r\n    logSoftmaxGradConfig,\r\n    lrnGradConfig,\r\n    maxGradConfig,\r\n    maxGradConfig,\r\n    maximumGradConfig,\r\n    maxPool3DGradConfig,\r\n    maxPoolGradConfig,\r\n    minGradConfig,\r\n    minimumGradConfig,\r\n    mirrorPadGradConfig,\r\n    modGradConfig,\r\n    multiplyGradConfig,\r\n    negateGradConfig,\r\n    oneHotGradConfig,\r\n    onesLikeGradConfig,\r\n    padV2GradConfig,\r\n    padV2GradConfig,\r\n    powGradConfig,\r\n    preluGradConfig,\r\n    reciprocalGradConfig,\r\n    relu6GradConfig,\r\n    reluGradConfig,\r\n    reshapeGradConfig,\r\n    resizeBilinearGradConfig,\r\n    resizeNearestNeighborGradConfig,\r\n    reverseGradConfig,\r\n    roundGradConfig,\r\n    rsqrtGradConfig,\r\n    selectV2PoolGradConfig,\r\n    seluGradConfig,\r\n    sigmoidGradConfig,\r\n    signGradConfig,\r\n    sinGradConfig,\r\n    sinhGradConfig,\r\n    sliceGradConfig,\r\n    softmaxGradConfig,\r\n    softplusGradConfig,\r\n    spaceToBatchNDGradConfig,\r\n    spaceToBatchNDGradConfig,\r\n    splitVGradConfig,\r\n    splitVGradConfig,\r\n    sqrtGradConfig,\r\n    squaredDifferenceGradConfig,\r\n    squareGradConfig,\r\n    stepGradConfig,\r\n    subGradConfig,\r\n    sumGradConfig,\r\n    tanGradConfig,\r\n    tanhGradConfig,\r\n    tileGradConfig,\r\n    transposeGradConfig,\r\n    unpackGradConfig,\r\n    unsortedSegmentSumGradConfig,\r\n    zerosLikeGradConfig\r\n];\r\nfor (const gradientConfig of gradConfigs) {\r\n    registerGradient(gradientConfig);\r\n}\r\n//# sourceMappingURL=register_all_gradients.js.map"]},"metadata":{},"sourceType":"module"}