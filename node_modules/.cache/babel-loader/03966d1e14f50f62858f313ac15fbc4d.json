{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport var FromPixelsPackedProgram = function FromPixelsPackedProgram(outputShape) {\n  _classCallCheck(this, FromPixelsPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  var glsl = getGlslDifferences();\n\n  var _outputShape = _slicedToArray(outputShape, 2),\n      height = _outputShape[0],\n      width = _outputShape[1];\n\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) /\\n                       vec2(\".concat(width, \".0, \").concat(height, \".0);\\n            vec4 values = \").concat(glsl.texture2D, \"(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","map":{"version":3,"sources":["../../../src/kernels/FromPixels_utils/from_pixels_packed_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,kBAAR,QAAiC,oBAAjC;AAGA,WAAa,uBAAb,GAOE,iCAAY,WAAZ,EAAiC;AAAA;;AANjC,OAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAGA,OAAA,YAAA,GAAe,KAAf;AACA,OAAA,YAAA,GAAe,IAAf;AAGE,MAAM,IAAI,GAAG,kBAAkB,EAA/B;;AAD+B,oCAEL,WAFK;AAAA,MAExB,MAFwB;AAAA,MAEhB,KAFgB;;AAG/B,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,QAAL,ocAe0B,KAf1B,iBAesC,MAftC,6CAgBwB,IAAI,CAAC,SAhB7B,0bAgCM,IAAI,CAAC,MAhCX;AAmCD,CA9CH","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { getGlslDifferences } from '../../glsl_version';\r\nexport class FromPixelsPackedProgram {\r\n    constructor(outputShape) {\r\n        this.variableNames = ['A'];\r\n        this.packedInputs = false;\r\n        this.packedOutput = true;\r\n        const glsl = getGlslDifferences();\r\n        const [height, width,] = outputShape;\r\n        this.outputShape = outputShape;\r\n        this.userCode = `\r\n      void main() {\r\n        ivec3 coords = getOutputCoords();\r\n        int texR = coords[0];\r\n        int texC = coords[1];\r\n        int depth = coords[2];\r\n\r\n        vec4 result = vec4(0.);\r\n\r\n        for(int row=0; row<=1; row++) {\r\n          for(int col=0; col<=1; col++) {\r\n            texC = coords[1] + row;\r\n            depth = coords[2] + col;\r\n\r\n            vec2 uv = (vec2(texC, texR) + halfCR) /\r\n                       vec2(${width}.0, ${height}.0);\r\n            vec4 values = ${glsl.texture2D}(A, uv);\r\n            float value;\r\n            if (depth == 0) {\r\n              value = values.r;\r\n            } else if (depth == 1) {\r\n              value = values.g;\r\n            } else if (depth == 2) {\r\n              value = values.b;\r\n            } else if (depth == 3) {\r\n              value = values.a;\r\n            }\r\n\r\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\r\n          }\r\n        }\r\n\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n    }\r\n}\r\n//# sourceMappingURL=from_pixels_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}