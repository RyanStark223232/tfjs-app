{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Prelu } from '../kernel_names';\nimport { getReductionAxes } from '../ops/broadcast_util';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var preluGradConfig = {\n  kernelName: Prelu,\n  inputsToSave: ['x', 'alpha'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        _alpha = _saved[1];\n\n    var mask = greater(x, 0);\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, _alpha));\n      },\n      alpha: function alpha() {\n        var res = where(mask, zerosLike(dy), mul(dy, x));\n        var reduceAxes = getReductionAxes(_alpha.shape, dy.shape);\n\n        if (reduceAxes.length > 0) {\n          res = sum(res, reduceAxes);\n        }\n\n        return reshape(res, _alpha.shape);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Prelu_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,KAAR,QAAoB,iBAApB;AAEA,SAAQ,gBAAR,QAA+B,uBAA/B;AACA,SAAQ,OAAR,QAAsB,gBAAtB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AACA,SAAQ,OAAR,QAAsB,gBAAtB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AACA,SAAQ,KAAR,QAAoB,cAApB;AACA,SAAQ,SAAR,QAAwB,mBAAxB;AAGA,OAAO,IAAM,eAAe,GAAe;AACzC,EAAA,UAAU,EAAE,KAD6B;AAEzC,EAAA,YAAY,EAAE,CAAC,GAAD,EAAM,OAAN,CAF2B;AAGzC,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAAgC;AAAA,gCACrB,KADqB;AAAA,QACjC,CADiC;AAAA,QAC9B,MAD8B;;AAExC,QAAM,IAAI,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,CAApB;AAEA,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eAAM,KAAK,CAAC,IAAD,EAAO,EAAP,EAAW,GAAG,CAAC,EAAD,EAAK,MAAL,CAAd,CAAX;AAAA,OADE;AAEL,MAAA,KAAK,EAAE,iBAAK;AACV,YAAI,GAAG,GAAG,KAAK,CAAC,IAAD,EAAO,SAAS,CAAC,EAAD,CAAhB,EAAsB,GAAG,CAAC,EAAD,EAAK,CAAL,CAAzB,CAAf;AACA,YAAM,UAAU,GAAG,gBAAgB,CAAC,MAAK,CAAC,KAAP,EAAc,EAAE,CAAC,KAAjB,CAAnC;;AACA,YAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAA,GAAG,GAAG,GAAG,CAAC,GAAD,EAAM,UAAN,CAAT;AACD;;AACD,eAAO,OAAO,CAAC,GAAD,EAAM,MAAK,CAAC,KAAZ,CAAd;AACD;AATI,KAAP;AAWD;AAlBwC,CAApC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { Prelu } from '../kernel_names';\r\nimport { getReductionAxes } from '../ops/broadcast_util';\r\nimport { greater } from '../ops/greater';\r\nimport { mul } from '../ops/mul';\r\nimport { reshape } from '../ops/reshape';\r\nimport { sum } from '../ops/sum';\r\nimport { where } from '../ops/where';\r\nimport { zerosLike } from '../ops/zeros_like';\r\nexport const preluGradConfig = {\r\n    kernelName: Prelu,\r\n    inputsToSave: ['x', 'alpha'],\r\n    gradFunc: (dy, saved) => {\r\n        const [x, alpha] = saved;\r\n        const mask = greater(x, 0);\r\n        return {\r\n            x: () => where(mask, dy, mul(dy, alpha)),\r\n            alpha: () => {\r\n                let res = where(mask, zerosLike(dy), mul(dy, x));\r\n                const reduceAxes = getReductionAxes(alpha.shape, dy.shape);\r\n                if (reduceAxes.length > 0) {\r\n                    res = sum(res, reduceAxes);\r\n                }\r\n                return reshape(res, alpha.shape);\r\n            }\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Prelu_grad.js.map"]},"metadata":{},"sourceType":"module"}