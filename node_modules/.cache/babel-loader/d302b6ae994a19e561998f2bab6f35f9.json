{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { LRN } from '../kernel_names';\nimport { localResponseNormalizationBackprop } from '../ops/local_response_normalization_backprop';\nexport var lrnGradConfig = {\n  kernelName: LRN,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        y = _saved[1];\n\n    var depthRadius = attrs.depthRadius,\n        bias = attrs.bias,\n        alpha = attrs.alpha,\n        beta = attrs.beta;\n    return {\n      x: function x() {\n        return localResponseNormalizationBackprop(_x, y, dy, depthRadius, bias, alpha, beta);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/LRN_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,GAAR,QAA4B,iBAA5B;AAEA,SAAQ,kCAAR,QAAiD,8CAAjD;AAGA,OAAO,IAAM,aAAa,GAAe;AACvC,EAAA,UAAU,EAAE,GAD2B;AAEvC,EAAA,YAAY,EAAE,CAAC,GAAD,CAFyB;AAGvC,EAAA,aAAa,EAAE,CAAC,IAAD,CAHwB;AAIvC,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAe,KAAf,EAAgC,KAAhC,EAAuD;AAAA,gCAChD,KADgD;AAAA,QACxD,EADwD;AAAA,QACrD,CADqD;;AAAA,QAExD,WAFwD,GAEtB,KAFsB,CAExD,WAFwD;AAAA,QAE3C,IAF2C,GAEtB,KAFsB,CAE3C,IAF2C;AAAA,QAErC,KAFqC,GAEtB,KAFsB,CAErC,KAFqC;AAAA,QAE9B,IAF8B,GAEtB,KAFsB,CAE9B,IAF8B;AAI/D,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eAAM,kCAAkC,CACvC,EADuC,EACpC,CADoC,EACjC,EADiC,EAC7B,WAD6B,EAChB,IADgB,EACV,KADU,EACH,IADG,CAAxC;AAAA;AADE,KAAP;AAID;AAZsC,CAAlC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { LRN } from '../kernel_names';\r\nimport { localResponseNormalizationBackprop } from '../ops/local_response_normalization_backprop';\r\nexport const lrnGradConfig = {\r\n    kernelName: LRN,\r\n    inputsToSave: ['x'],\r\n    outputsToSave: [true],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const [x, y] = saved;\r\n        const { depthRadius, bias, alpha, beta } = attrs;\r\n        return {\r\n            x: () => localResponseNormalizationBackprop(x, y, dy, depthRadius, bias, alpha, beta)\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=LRN_grad.js.map"]},"metadata":{},"sourceType":"module"}