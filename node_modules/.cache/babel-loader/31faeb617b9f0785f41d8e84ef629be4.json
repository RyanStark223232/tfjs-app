{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { MirrorPad } from '../kernel_names';\nimport { slice } from '../ops/slice';\nexport var mirrorPadGradConfig = {\n  kernelName: MirrorPad,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    // Pad introduces values around the original tensor, so the gradient\n    // slices the original shape out of the gradient.\n    var _x = saved[0];\n    var paddings = attrs.paddings;\n    var begin = paddings.map(function (p) {\n      return p[0];\n    });\n    return {\n      x: function x() {\n        return slice(dy, begin, _x.shape);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/MirrorPad_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR,QAAwC,iBAAxC;AAEA,SAAQ,KAAR,QAAoB,cAApB;AAGA,OAAO,IAAM,mBAAmB,GAAe;AAC7C,EAAA,UAAU,EAAE,SADiC;AAE7C,EAAA,YAAY,EAAE,CAAC,GAAD,CAF+B;AAG7C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;AAC7D;AACA;AACA,QAAM,EAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AAH6D,QAItD,QAJsD,GAI1C,KAJ0C,CAItD,QAJsD;AAK7D,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAA,CAAC;AAAA,aAAI,CAAC,CAAC,CAAD,CAAL;AAAA,KAAd,CAAd;AACA,WAAO;AAAC,MAAA,CAAC,EAAE;AAAA,eAAM,KAAK,CAAC,EAAD,EAAK,KAAL,EAAY,EAAC,CAAC,KAAd,CAAX;AAAA;AAAJ,KAAP;AACD;AAV4C,CAAxC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { MirrorPad } from '../kernel_names';\r\nimport { slice } from '../ops/slice';\r\nexport const mirrorPadGradConfig = {\r\n    kernelName: MirrorPad,\r\n    inputsToSave: ['x'],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        // Pad introduces values around the original tensor, so the gradient\r\n        // slices the original shape out of the gradient.\r\n        const x = saved[0];\r\n        const { paddings } = attrs;\r\n        const begin = paddings.map(p => p[0]);\r\n        return { x: () => slice(dy, begin, x.shape) };\r\n    }\r\n};\r\n//# sourceMappingURL=MirrorPad_grad.js.map"]},"metadata":{},"sourceType":"module"}