{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Acos } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, 1, -1, .7]);\r\n *\r\n * x.acos().print();  // or tf.acos(x)\r\n * ```\r\n * @param x The input tensor.\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\n\nfunction acos_(x) {\n  var $x = convertToTensor(x, 'x', 'acos');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernelFunc(function (backend, save) {\n    var res = backend.acos($x);\n    save([$x]);\n    return res;\n  }, inputs, null\n  /* grad */\n  , Acos);\n}\n\nexport var acos = op({\n  acos_: acos_\n});","map":{"version":3,"sources":["../../src/ops/acos.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,IAAR,QAA+B,iBAA/B;AAGA,SAAQ,eAAR,QAA8B,oBAA9B;AAGA,SAAQ,EAAR,QAAiB,aAAjB;AAEA;;;;;;;;;;AAUG;;AACH,SAAS,KAAT,CAAiC,CAAjC,EAAgD;AAC9C,MAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,MAAT,CAA1B;AACA,MAAM,MAAM,GAAe;AAAC,IAAA,CAAC,EAAE;AAAJ,GAA3B;AAEA,SAAO,MAAM,CAAC,aAAP,CAAqB,UAAC,OAAD,EAAU,IAAV,EAAkB;AAC5C,QAAM,GAAG,GAAG,OAAO,CAAC,IAAR,CAAa,EAAb,CAAZ;AACA,IAAA,IAAI,CAAC,CAAC,EAAD,CAAD,CAAJ;AACA,WAAO,GAAP;AACD,GAJM,EAIJ,MAJI,EAI4B;AAAK;AAJjC,IAI6C,IAJ7C,CAAP;AAKD;;AACD,OAAO,IAAM,IAAI,GAAG,EAAE,CAAC;AAAC,EAAA,KAAK,EAAL;AAAD,CAAD,CAAf","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Acos } from '../kernel_names';\r\nimport { convertToTensor } from '../tensor_util_env';\r\nimport { op } from './operation';\r\n/**\r\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, 1, -1, .7]);\r\n *\r\n * x.acos().print();  // or tf.acos(x)\r\n * ```\r\n * @param x The input tensor.\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\r\nfunction acos_(x) {\r\n    const $x = convertToTensor(x, 'x', 'acos');\r\n    const inputs = { x: $x };\r\n    return ENGINE.runKernelFunc((backend, save) => {\r\n        const res = backend.acos($x);\r\n        save([$x]);\r\n        return res;\r\n    }, inputs, null /* grad */, Acos);\r\n}\r\nexport const acos = op({ acos_ });\r\n//# sourceMappingURL=acos.js.map"]},"metadata":{},"sourceType":"module"}