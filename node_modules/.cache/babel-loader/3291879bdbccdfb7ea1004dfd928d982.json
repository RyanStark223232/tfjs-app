{"ast":null,"code":"import _slicedToArray from \"C:/Users/wongh/Documents/GitHub/tfjs-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Dilation2D, Dilation2DBackpropFilter, Dilation2DBackpropInput } from '../kernel_names';\nexport var dilation2dGradConfig = {\n  kernelName: Dilation2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        filter = _saved[1];\n\n    var inputInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    var filterInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    return {\n      x: function x() {\n        return ENGINE.runKernel(Dilation2DBackpropInput, inputInputs, attrs);\n      },\n      filter: function filter() {\n        return ENGINE.runKernel(Dilation2DBackpropFilter, filterInputs, attrs);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Dilation2D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,UAAR,EAAoB,wBAApB,EAA8E,uBAA9E,QAA2I,iBAA3I;AAMA,OAAO,IAAM,oBAAoB,GAAe;AAC9C,EAAA,UAAU,EAAE,UADkC;AAE9C,EAAA,YAAY,EAAE,CAAC,GAAD,EAAM,QAAN,CAFgC;AAG9C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAe,KAAf,EAAgC,KAAhC,EAAuD;AAAA,gCAC3C,KAD2C;AAAA,QACxD,CADwD;AAAA,QACrD,MADqD;;AAG/D,QAAM,WAAW,GAAkC;AAAC,MAAA,CAAC,EAAD,CAAD;AAAI,MAAA,MAAM,EAAN,MAAJ;AAAY,MAAA,EAAE,EAAF;AAAZ,KAAnD;AACA,QAAM,YAAY,GAAmC;AAAC,MAAA,CAAC,EAAD,CAAD;AAAI,MAAA,MAAM,EAAN,MAAJ;AAAY,MAAA,EAAE,EAAF;AAAZ,KAArD;AAEA,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eAAM,MAAM,CAAC,SAAP,CACI,uBADJ,EAC6B,WAD7B,EAEI,KAFJ,CAAN;AAAA,OADE;AAIL,MAAA,MAAM,EAAE;AAAA,eAAM,MAAM,CAAC,SAAP,CACI,wBADJ,EAEI,YAFJ,EAE0C,KAF1C,CAAN;AAAA;AAJH,KAAP;AAQD;AAjB6C,CAAzC","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { ENGINE } from '../engine';\r\nimport { Dilation2D, Dilation2DBackpropFilter, Dilation2DBackpropInput } from '../kernel_names';\r\nexport const dilation2dGradConfig = {\r\n    kernelName: Dilation2D,\r\n    inputsToSave: ['x', 'filter'],\r\n    gradFunc: (dy, saved, attrs) => {\r\n        const [x, filter] = saved;\r\n        const inputInputs = { x, filter, dy };\r\n        const filterInputs = { x, filter, dy };\r\n        return {\r\n            x: () => ENGINE.runKernel(Dilation2DBackpropInput, inputInputs, attrs),\r\n            filter: () => ENGINE.runKernel(Dilation2DBackpropFilter, filterInputs, attrs)\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=Dilation2D_grad.js.map"]},"metadata":{},"sourceType":"module"}