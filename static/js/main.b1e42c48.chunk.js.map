{"version":3,"sources":["utilities.js","App.js","reportWebVitals.js","index.js"],"names":["color","style_tap","0","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand_tap","predictions","ctx","length","forEach","prediction","landmarks","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","style_rotate","drawHand_rotate","passed","style_fist","drawHand_fist","writeText","info","style","text","fontSize","fontFamily","textAlign","textBaseline","font","fillText","toTuple","drawPoint","r","drawSegment","scale","ay","ax","by","bx","drawSkeleton","keypoints","minConfidence","adjacentKeyPoints","posenet","position","drawKeypoints","keypoint","score","TRIANGULATION","drawPath","points","closePath","region","Path2D","point","drawMesh","scaledMesh","map","index","App","props","sleep","milliseconds","Promise","resolve","setTimeout","exportToJson","objectData","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","getArray","dict","tap_count","state","rotate_count","fist_count","dist_array","dist_time_array","dist_record","dist_time_record","rotate_array","rotate_time_array","rotate_record","rotate_time_record","fist_array","fist_time_array","fist_record","fist_time_record","gait_record","gait_time_record","startAt","avg_fps","ID","index_passed","min_dist","max_dist","rotate_passed","last_pressed","real_time_inferencing","recording","button_mode","chart_ready","finger_done","rotate_done","fist_done","chart_data1","chart_data2","chart_data3","wait","wait_till","Date","now","dead_frame","raw","facingMode","webcamRef","React","createRef","canvasRef","videoConstraints","capture_interval","runHandpose","bind","stop_real_time_inference","stop_tapping","stop_rotating","stop_record","record_video","concat_frame","inference","reset_counter","increment_tap1","increment_tap2","switch_button","compose_chart","runPosenet","real_time_posenet","runFacemesh","real_time_facemesh","switch_style","switch_cam","this","setState","require","facemesh","net","console","log","Interval_ID","setInterval","current","video","readyState","videoWidth","videoHeight","width","height","estimateFaces","face","getContext","estimateSinglePose","pose","time_array_1","count_array_1","label_1","time_array_2","count_array_2","label_2","time_array_3","count_array_3","label_3","real_dist","getElementById","value","tmp","d_array","avg_value","abs","data1","labels","datasets","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","data2","data3","current_moment","lm1","lm2","sqrt","pow","clearInterval","clearRect","handpose","real_time_inference","estimateHands","hand","pawn_dist","norm","current_dist","rotate_dist","fist_passed","fist_dist","image","getScreenshot","img","src","onload","record","className","ref","marginLeft","marginRight","left","right","zindex","onClick","id","Button","variant","disabled","onChange","step","min","max","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b1e42c48.chunk.js","sourcesContent":["// Points for fingers\r\n/*\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };*/\r\n\r\n  import * as posenet from \"@tensorflow-models/posenet\";\r\n\r\n  const color = \"aqua\";\r\n  const lineWidth = 2;\r\n  \r\n  const style_tap = {\r\n    0: { color: \"gold\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"gold\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"red\", size: 6 },\r\n    5: { color: \"gold\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"red\", size: 6 },\r\n    9: { color: \"gold\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"gold\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"gold\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n\r\n  export const drawHand_tap = (predictions, ctx) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n        ctx.beginPath();\r\n        ctx.moveTo(landmarks[8][0], landmarks[8][1]);\r\n        ctx.lineTo(landmarks[4][0], landmarks[4][1]);\r\n        \r\n        ctx.strokeStyle = \"plum\";\r\n        ctx.lineWidth = 4;\r\n        ctx.stroke();\r\n\r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style_tap[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style_tap[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const style_rotate = {\r\n    0: { color: \"gold\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"gold\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"gold\", size: 6 },\r\n    5: { color: \"gold\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"gold\", size: 6 },\r\n    9: { color: \"gold\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"gold\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"gold\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n\r\n  export const drawHand_rotate = (predictions, ctx, passed) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n        ctx.beginPath();\r\n        ctx.moveTo(landmarks[17][0], landmarks[17][1]);\r\n        ctx.lineTo(landmarks[2][0], landmarks[2][1]);\r\n\r\n        if (passed === -1){\r\n          style_rotate[17][\"color\"] = \"red\";\r\n          style_rotate[2][\"color\"] = \"red\";\r\n        }\r\n        else if (passed === 1){\r\n          style_rotate[17][\"color\"] = \"blue\";\r\n          style_rotate[2][\"color\"] = \"blue\";\r\n        }\r\n        \r\n        ctx.strokeStyle = \"plum\";\r\n        ctx.lineWidth = 4;\r\n        ctx.stroke();\r\n\r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style_rotate[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style_rotate[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const style_fist = {\r\n    0: { color: \"gold\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"gold\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"gold\", size: 6 },\r\n    5: { color: \"gold\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"gold\", size: 6 },\r\n    9: { color: \"gold\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"gold\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"gold\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n\r\n  export const drawHand_fist = (predictions, ctx, passed) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n        if (passed === 0){\r\n          style_fist[8][\"color\"] = \"red\";\r\n          style_fist[12][\"color\"] = \"red\";\r\n          style_fist[16][\"color\"] = \"red\";\r\n          style_fist[20][\"color\"] = \"red\";\r\n        }\r\n        else if (passed === 1){\r\n          style_fist[8][\"color\"] = \"blue\";\r\n          style_fist[12][\"color\"] = \"blue\";\r\n          style_fist[16][\"color\"] = \"blue\";\r\n          style_fist[20][\"color\"] = \"blue\";\r\n        }        \r\n\r\n        ctx.strokeStyle = \"plum\";\r\n        ctx.lineWidth = 4;\r\n        ctx.stroke();\r\n\r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style_fist[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style_fist[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Drawing function\r\n  export const writeText = (ctx, info, style = {}) => {\r\n    const { text, x, y } = info;\r\n    const { fontSize = 50, fontFamily = 'Arial', color = 'red', textAlign = 'center', textBaseline = 'center' } = style;\r\n   \r\n    ctx.beginPath();\r\n    ctx.font = fontSize + 'px ' + fontFamily;\r\n    ctx.textAlign = textAlign;\r\n    ctx.textBaseline = textBaseline;\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(text, x, y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  function toTuple({ y, x }) {\r\n    return [y, x];\r\n  }\r\n  \r\n  export function drawPoint(ctx, y, x, r, color) {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n  }\r\n  \r\n  /**\r\n   * Draws a line on a canvas, i.e. a joint\r\n   */\r\n  export function drawSegment([ay, ax], [by, bx], color, scale, ctx) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(ax * scale, ay * scale);\r\n    ctx.lineTo(bx * scale, by * scale);\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n  }\r\n  \r\n  /**\r\n   * Draws a pose skeleton by looking up all adjacent keypoints/joints\r\n   */\r\n  export function drawSkeleton(keypoints, minConfidence, ctx, scale = 1) {\r\n    const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n      keypoints,\r\n      minConfidence\r\n    );\r\n  \r\n    adjacentKeyPoints.forEach((keypoints) => {\r\n      drawSegment(\r\n        toTuple(keypoints[0].position),\r\n        toTuple(keypoints[1].position),\r\n        color,\r\n        scale,\r\n        ctx\r\n      );\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Draw pose keypoints onto a canvas\r\n   */\r\n  export function drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\r\n    for (let i = 0; i < keypoints.length; i++) {\r\n      const keypoint = keypoints[i];\r\n  \r\n      if (keypoint.score < minConfidence) {\r\n        continue;\r\n      }\r\n  \r\n      const { y, x } = keypoint.position;\r\n      drawPoint(ctx, y * scale, x * scale, 3, color);\r\n    }\r\n  }\r\n\r\n  export const TRIANGULATION = [\r\n    127,\r\n    34,\r\n    139,\r\n    11,\r\n    0,\r\n    37,\r\n    232,\r\n    231,\r\n    120,\r\n    72,\r\n    37,\r\n    39,\r\n    128,\r\n    121,\r\n    47,\r\n    232,\r\n    121,\r\n    128,\r\n    104,\r\n    69,\r\n    67,\r\n    175,\r\n    171,\r\n    148,\r\n    157,\r\n    154,\r\n    155,\r\n    118,\r\n    50,\r\n    101,\r\n    73,\r\n    39,\r\n    40,\r\n    9,\r\n    151,\r\n    108,\r\n    48,\r\n    115,\r\n    131,\r\n    194,\r\n    204,\r\n    211,\r\n    74,\r\n    40,\r\n    185,\r\n    80,\r\n    42,\r\n    183,\r\n    40,\r\n    92,\r\n    186,\r\n    230,\r\n    229,\r\n    118,\r\n    202,\r\n    212,\r\n    214,\r\n    83,\r\n    18,\r\n    17,\r\n    76,\r\n    61,\r\n    146,\r\n    160,\r\n    29,\r\n    30,\r\n    56,\r\n    157,\r\n    173,\r\n    106,\r\n    204,\r\n    194,\r\n    135,\r\n    214,\r\n    192,\r\n    203,\r\n    165,\r\n    98,\r\n    21,\r\n    71,\r\n    68,\r\n    51,\r\n    45,\r\n    4,\r\n    144,\r\n    24,\r\n    23,\r\n    77,\r\n    146,\r\n    91,\r\n    205,\r\n    50,\r\n    187,\r\n    201,\r\n    200,\r\n    18,\r\n    91,\r\n    106,\r\n    182,\r\n    90,\r\n    91,\r\n    181,\r\n    85,\r\n    84,\r\n    17,\r\n    206,\r\n    203,\r\n    36,\r\n    148,\r\n    171,\r\n    140,\r\n    92,\r\n    40,\r\n    39,\r\n    193,\r\n    189,\r\n    244,\r\n    159,\r\n    158,\r\n    28,\r\n    247,\r\n    246,\r\n    161,\r\n    236,\r\n    3,\r\n    196,\r\n    54,\r\n    68,\r\n    104,\r\n    193,\r\n    168,\r\n    8,\r\n    117,\r\n    228,\r\n    31,\r\n    189,\r\n    193,\r\n    55,\r\n    98,\r\n    97,\r\n    99,\r\n    126,\r\n    47,\r\n    100,\r\n    166,\r\n    79,\r\n    218,\r\n    155,\r\n    154,\r\n    26,\r\n    209,\r\n    49,\r\n    131,\r\n    135,\r\n    136,\r\n    150,\r\n    47,\r\n    126,\r\n    217,\r\n    223,\r\n    52,\r\n    53,\r\n    45,\r\n    51,\r\n    134,\r\n    211,\r\n    170,\r\n    140,\r\n    67,\r\n    69,\r\n    108,\r\n    43,\r\n    106,\r\n    91,\r\n    230,\r\n    119,\r\n    120,\r\n    226,\r\n    130,\r\n    247,\r\n    63,\r\n    53,\r\n    52,\r\n    238,\r\n    20,\r\n    242,\r\n    46,\r\n    70,\r\n    156,\r\n    78,\r\n    62,\r\n    96,\r\n    46,\r\n    53,\r\n    63,\r\n    143,\r\n    34,\r\n    227,\r\n    173,\r\n    155,\r\n    133,\r\n    123,\r\n    117,\r\n    111,\r\n    44,\r\n    125,\r\n    19,\r\n    236,\r\n    134,\r\n    51,\r\n    216,\r\n    206,\r\n    205,\r\n    154,\r\n    153,\r\n    22,\r\n    39,\r\n    37,\r\n    167,\r\n    200,\r\n    201,\r\n    208,\r\n    36,\r\n    142,\r\n    100,\r\n    57,\r\n    212,\r\n    202,\r\n    20,\r\n    60,\r\n    99,\r\n    28,\r\n    158,\r\n    157,\r\n    35,\r\n    226,\r\n    113,\r\n    160,\r\n    159,\r\n    27,\r\n    204,\r\n    202,\r\n    210,\r\n    113,\r\n    225,\r\n    46,\r\n    43,\r\n    202,\r\n    204,\r\n    62,\r\n    76,\r\n    77,\r\n    137,\r\n    123,\r\n    116,\r\n    41,\r\n    38,\r\n    72,\r\n    203,\r\n    129,\r\n    142,\r\n    64,\r\n    98,\r\n    240,\r\n    49,\r\n    102,\r\n    64,\r\n    41,\r\n    73,\r\n    74,\r\n    212,\r\n    216,\r\n    207,\r\n    42,\r\n    74,\r\n    184,\r\n    169,\r\n    170,\r\n    211,\r\n    170,\r\n    149,\r\n    176,\r\n    105,\r\n    66,\r\n    69,\r\n    122,\r\n    6,\r\n    168,\r\n    123,\r\n    147,\r\n    187,\r\n    96,\r\n    77,\r\n    90,\r\n    65,\r\n    55,\r\n    107,\r\n    89,\r\n    90,\r\n    180,\r\n    101,\r\n    100,\r\n    120,\r\n    63,\r\n    105,\r\n    104,\r\n    93,\r\n    137,\r\n    227,\r\n    15,\r\n    86,\r\n    85,\r\n    129,\r\n    102,\r\n    49,\r\n    14,\r\n    87,\r\n    86,\r\n    55,\r\n    8,\r\n    9,\r\n    100,\r\n    47,\r\n    121,\r\n    145,\r\n    23,\r\n    22,\r\n    88,\r\n    89,\r\n    179,\r\n    6,\r\n    122,\r\n    196,\r\n    88,\r\n    95,\r\n    96,\r\n    138,\r\n    172,\r\n    136,\r\n    215,\r\n    58,\r\n    172,\r\n    115,\r\n    48,\r\n    219,\r\n    42,\r\n    80,\r\n    81,\r\n    195,\r\n    3,\r\n    51,\r\n    43,\r\n    146,\r\n    61,\r\n    171,\r\n    175,\r\n    199,\r\n    81,\r\n    82,\r\n    38,\r\n    53,\r\n    46,\r\n    225,\r\n    144,\r\n    163,\r\n    110,\r\n    246,\r\n    33,\r\n    7,\r\n    52,\r\n    65,\r\n    66,\r\n    229,\r\n    228,\r\n    117,\r\n    34,\r\n    127,\r\n    234,\r\n    107,\r\n    108,\r\n    69,\r\n    109,\r\n    108,\r\n    151,\r\n    48,\r\n    64,\r\n    235,\r\n    62,\r\n    78,\r\n    191,\r\n    129,\r\n    209,\r\n    126,\r\n    111,\r\n    35,\r\n    143,\r\n    163,\r\n    161,\r\n    246,\r\n    117,\r\n    123,\r\n    50,\r\n    222,\r\n    65,\r\n    52,\r\n    19,\r\n    125,\r\n    141,\r\n    221,\r\n    55,\r\n    65,\r\n    3,\r\n    195,\r\n    197,\r\n    25,\r\n    7,\r\n    33,\r\n    220,\r\n    237,\r\n    44,\r\n    70,\r\n    71,\r\n    139,\r\n    122,\r\n    193,\r\n    245,\r\n    247,\r\n    130,\r\n    33,\r\n    71,\r\n    21,\r\n    162,\r\n    153,\r\n    158,\r\n    159,\r\n    170,\r\n    169,\r\n    150,\r\n    188,\r\n    174,\r\n    196,\r\n    216,\r\n    186,\r\n    92,\r\n    144,\r\n    160,\r\n    161,\r\n    2,\r\n    97,\r\n    167,\r\n    141,\r\n    125,\r\n    241,\r\n    164,\r\n    167,\r\n    37,\r\n    72,\r\n    38,\r\n    12,\r\n    145,\r\n    159,\r\n    160,\r\n    38,\r\n    82,\r\n    13,\r\n    63,\r\n    68,\r\n    71,\r\n    226,\r\n    35,\r\n    111,\r\n    158,\r\n    153,\r\n    154,\r\n    101,\r\n    50,\r\n    205,\r\n    206,\r\n    92,\r\n    165,\r\n    209,\r\n    198,\r\n    217,\r\n    165,\r\n    167,\r\n    97,\r\n    220,\r\n    115,\r\n    218,\r\n    133,\r\n    112,\r\n    243,\r\n    239,\r\n    238,\r\n    241,\r\n    214,\r\n    135,\r\n    169,\r\n    190,\r\n    173,\r\n    133,\r\n    171,\r\n    208,\r\n    32,\r\n    125,\r\n    44,\r\n    237,\r\n    86,\r\n    87,\r\n    178,\r\n    85,\r\n    86,\r\n    179,\r\n    84,\r\n    85,\r\n    180,\r\n    83,\r\n    84,\r\n    181,\r\n    201,\r\n    83,\r\n    182,\r\n    137,\r\n    93,\r\n    132,\r\n    76,\r\n    62,\r\n    183,\r\n    61,\r\n    76,\r\n    184,\r\n    57,\r\n    61,\r\n    185,\r\n    212,\r\n    57,\r\n    186,\r\n    214,\r\n    207,\r\n    187,\r\n    34,\r\n    143,\r\n    156,\r\n    79,\r\n    239,\r\n    237,\r\n    123,\r\n    137,\r\n    177,\r\n    44,\r\n    1,\r\n    4,\r\n    201,\r\n    194,\r\n    32,\r\n    64,\r\n    102,\r\n    129,\r\n    213,\r\n    215,\r\n    138,\r\n    59,\r\n    166,\r\n    219,\r\n    242,\r\n    99,\r\n    97,\r\n    2,\r\n    94,\r\n    141,\r\n    75,\r\n    59,\r\n    235,\r\n    24,\r\n    110,\r\n    228,\r\n    25,\r\n    130,\r\n    226,\r\n    23,\r\n    24,\r\n    229,\r\n    22,\r\n    23,\r\n    230,\r\n    26,\r\n    22,\r\n    231,\r\n    112,\r\n    26,\r\n    232,\r\n    189,\r\n    190,\r\n    243,\r\n    221,\r\n    56,\r\n    190,\r\n    28,\r\n    56,\r\n    221,\r\n    27,\r\n    28,\r\n    222,\r\n    29,\r\n    27,\r\n    223,\r\n    30,\r\n    29,\r\n    224,\r\n    247,\r\n    30,\r\n    225,\r\n    238,\r\n    79,\r\n    20,\r\n    166,\r\n    59,\r\n    75,\r\n    60,\r\n    75,\r\n    240,\r\n    147,\r\n    177,\r\n    215,\r\n    20,\r\n    79,\r\n    166,\r\n    187,\r\n    147,\r\n    213,\r\n    112,\r\n    233,\r\n    244,\r\n    233,\r\n    128,\r\n    245,\r\n    128,\r\n    114,\r\n    188,\r\n    114,\r\n    217,\r\n    174,\r\n    131,\r\n    115,\r\n    220,\r\n    217,\r\n    198,\r\n    236,\r\n    198,\r\n    131,\r\n    134,\r\n    177,\r\n    132,\r\n    58,\r\n    143,\r\n    35,\r\n    124,\r\n    110,\r\n    163,\r\n    7,\r\n    228,\r\n    110,\r\n    25,\r\n    356,\r\n    389,\r\n    368,\r\n    11,\r\n    302,\r\n    267,\r\n    452,\r\n    350,\r\n    349,\r\n    302,\r\n    303,\r\n    269,\r\n    357,\r\n    343,\r\n    277,\r\n    452,\r\n    453,\r\n    357,\r\n    333,\r\n    332,\r\n    297,\r\n    175,\r\n    152,\r\n    377,\r\n    384,\r\n    398,\r\n    382,\r\n    347,\r\n    348,\r\n    330,\r\n    303,\r\n    304,\r\n    270,\r\n    9,\r\n    336,\r\n    337,\r\n    278,\r\n    279,\r\n    360,\r\n    418,\r\n    262,\r\n    431,\r\n    304,\r\n    408,\r\n    409,\r\n    310,\r\n    415,\r\n    407,\r\n    270,\r\n    409,\r\n    410,\r\n    450,\r\n    348,\r\n    347,\r\n    422,\r\n    430,\r\n    434,\r\n    313,\r\n    314,\r\n    17,\r\n    306,\r\n    307,\r\n    375,\r\n    387,\r\n    388,\r\n    260,\r\n    286,\r\n    414,\r\n    398,\r\n    335,\r\n    406,\r\n    418,\r\n    364,\r\n    367,\r\n    416,\r\n    423,\r\n    358,\r\n    327,\r\n    251,\r\n    284,\r\n    298,\r\n    281,\r\n    5,\r\n    4,\r\n    373,\r\n    374,\r\n    253,\r\n    307,\r\n    320,\r\n    321,\r\n    425,\r\n    427,\r\n    411,\r\n    421,\r\n    313,\r\n    18,\r\n    321,\r\n    405,\r\n    406,\r\n    320,\r\n    404,\r\n    405,\r\n    315,\r\n    16,\r\n    17,\r\n    426,\r\n    425,\r\n    266,\r\n    377,\r\n    400,\r\n    369,\r\n    322,\r\n    391,\r\n    269,\r\n    417,\r\n    465,\r\n    464,\r\n    386,\r\n    257,\r\n    258,\r\n    466,\r\n    260,\r\n    388,\r\n    456,\r\n    399,\r\n    419,\r\n    284,\r\n    332,\r\n    333,\r\n    417,\r\n    285,\r\n    8,\r\n    346,\r\n    340,\r\n    261,\r\n    413,\r\n    441,\r\n    285,\r\n    327,\r\n    460,\r\n    328,\r\n    355,\r\n    371,\r\n    329,\r\n    392,\r\n    439,\r\n    438,\r\n    382,\r\n    341,\r\n    256,\r\n    429,\r\n    420,\r\n    360,\r\n    364,\r\n    394,\r\n    379,\r\n    277,\r\n    343,\r\n    437,\r\n    443,\r\n    444,\r\n    283,\r\n    275,\r\n    440,\r\n    363,\r\n    431,\r\n    262,\r\n    369,\r\n    297,\r\n    338,\r\n    337,\r\n    273,\r\n    375,\r\n    321,\r\n    450,\r\n    451,\r\n    349,\r\n    446,\r\n    342,\r\n    467,\r\n    293,\r\n    334,\r\n    282,\r\n    458,\r\n    461,\r\n    462,\r\n    276,\r\n    353,\r\n    383,\r\n    308,\r\n    324,\r\n    325,\r\n    276,\r\n    300,\r\n    293,\r\n    372,\r\n    345,\r\n    447,\r\n    382,\r\n    398,\r\n    362,\r\n    352,\r\n    345,\r\n    340,\r\n    274,\r\n    1,\r\n    19,\r\n    456,\r\n    248,\r\n    281,\r\n    436,\r\n    427,\r\n    425,\r\n    381,\r\n    256,\r\n    252,\r\n    269,\r\n    391,\r\n    393,\r\n    200,\r\n    199,\r\n    428,\r\n    266,\r\n    330,\r\n    329,\r\n    287,\r\n    273,\r\n    422,\r\n    250,\r\n    462,\r\n    328,\r\n    258,\r\n    286,\r\n    384,\r\n    265,\r\n    353,\r\n    342,\r\n    387,\r\n    259,\r\n    257,\r\n    424,\r\n    431,\r\n    430,\r\n    342,\r\n    353,\r\n    276,\r\n    273,\r\n    335,\r\n    424,\r\n    292,\r\n    325,\r\n    307,\r\n    366,\r\n    447,\r\n    345,\r\n    271,\r\n    303,\r\n    302,\r\n    423,\r\n    266,\r\n    371,\r\n    294,\r\n    455,\r\n    460,\r\n    279,\r\n    278,\r\n    294,\r\n    271,\r\n    272,\r\n    304,\r\n    432,\r\n    434,\r\n    427,\r\n    272,\r\n    407,\r\n    408,\r\n    394,\r\n    430,\r\n    431,\r\n    395,\r\n    369,\r\n    400,\r\n    334,\r\n    333,\r\n    299,\r\n    351,\r\n    417,\r\n    168,\r\n    352,\r\n    280,\r\n    411,\r\n    325,\r\n    319,\r\n    320,\r\n    295,\r\n    296,\r\n    336,\r\n    319,\r\n    403,\r\n    404,\r\n    330,\r\n    348,\r\n    349,\r\n    293,\r\n    298,\r\n    333,\r\n    323,\r\n    454,\r\n    447,\r\n    15,\r\n    16,\r\n    315,\r\n    358,\r\n    429,\r\n    279,\r\n    14,\r\n    15,\r\n    316,\r\n    285,\r\n    336,\r\n    9,\r\n    329,\r\n    349,\r\n    350,\r\n    374,\r\n    380,\r\n    252,\r\n    318,\r\n    402,\r\n    403,\r\n    6,\r\n    197,\r\n    419,\r\n    318,\r\n    319,\r\n    325,\r\n    367,\r\n    364,\r\n    365,\r\n    435,\r\n    367,\r\n    397,\r\n    344,\r\n    438,\r\n    439,\r\n    272,\r\n    271,\r\n    311,\r\n    195,\r\n    5,\r\n    281,\r\n    273,\r\n    287,\r\n    291,\r\n    396,\r\n    428,\r\n    199,\r\n    311,\r\n    271,\r\n    268,\r\n    283,\r\n    444,\r\n    445,\r\n    373,\r\n    254,\r\n    339,\r\n    263,\r\n    466,\r\n    249,\r\n    282,\r\n    334,\r\n    296,\r\n    449,\r\n    347,\r\n    346,\r\n    264,\r\n    447,\r\n    454,\r\n    336,\r\n    296,\r\n    299,\r\n    338,\r\n    10,\r\n    151,\r\n    278,\r\n    439,\r\n    455,\r\n    292,\r\n    407,\r\n    415,\r\n    358,\r\n    371,\r\n    355,\r\n    340,\r\n    345,\r\n    372,\r\n    390,\r\n    249,\r\n    466,\r\n    346,\r\n    347,\r\n    280,\r\n    442,\r\n    443,\r\n    282,\r\n    19,\r\n    94,\r\n    370,\r\n    441,\r\n    442,\r\n    295,\r\n    248,\r\n    419,\r\n    197,\r\n    263,\r\n    255,\r\n    359,\r\n    440,\r\n    275,\r\n    274,\r\n    300,\r\n    383,\r\n    368,\r\n    351,\r\n    412,\r\n    465,\r\n    263,\r\n    467,\r\n    466,\r\n    301,\r\n    368,\r\n    389,\r\n    380,\r\n    374,\r\n    386,\r\n    395,\r\n    378,\r\n    379,\r\n    412,\r\n    351,\r\n    419,\r\n    436,\r\n    426,\r\n    322,\r\n    373,\r\n    390,\r\n    388,\r\n    2,\r\n    164,\r\n    393,\r\n    370,\r\n    462,\r\n    461,\r\n    164,\r\n    0,\r\n    267,\r\n    302,\r\n    11,\r\n    12,\r\n    374,\r\n    373,\r\n    387,\r\n    268,\r\n    12,\r\n    13,\r\n    293,\r\n    300,\r\n    301,\r\n    446,\r\n    261,\r\n    340,\r\n    385,\r\n    384,\r\n    381,\r\n    330,\r\n    266,\r\n    425,\r\n    426,\r\n    423,\r\n    391,\r\n    429,\r\n    355,\r\n    437,\r\n    391,\r\n    327,\r\n    326,\r\n    440,\r\n    457,\r\n    438,\r\n    341,\r\n    382,\r\n    362,\r\n    459,\r\n    457,\r\n    461,\r\n    434,\r\n    430,\r\n    394,\r\n    414,\r\n    463,\r\n    362,\r\n    396,\r\n    369,\r\n    262,\r\n    354,\r\n    461,\r\n    457,\r\n    316,\r\n    403,\r\n    402,\r\n    315,\r\n    404,\r\n    403,\r\n    314,\r\n    405,\r\n    404,\r\n    313,\r\n    406,\r\n    405,\r\n    421,\r\n    418,\r\n    406,\r\n    366,\r\n    401,\r\n    361,\r\n    306,\r\n    408,\r\n    407,\r\n    291,\r\n    409,\r\n    408,\r\n    287,\r\n    410,\r\n    409,\r\n    432,\r\n    436,\r\n    410,\r\n    434,\r\n    416,\r\n    411,\r\n    264,\r\n    368,\r\n    383,\r\n    309,\r\n    438,\r\n    457,\r\n    352,\r\n    376,\r\n    401,\r\n    274,\r\n    275,\r\n    4,\r\n    421,\r\n    428,\r\n    262,\r\n    294,\r\n    327,\r\n    358,\r\n    433,\r\n    416,\r\n    367,\r\n    289,\r\n    455,\r\n    439,\r\n    462,\r\n    370,\r\n    326,\r\n    2,\r\n    326,\r\n    370,\r\n    305,\r\n    460,\r\n    455,\r\n    254,\r\n    449,\r\n    448,\r\n    255,\r\n    261,\r\n    446,\r\n    253,\r\n    450,\r\n    449,\r\n    252,\r\n    451,\r\n    450,\r\n    256,\r\n    452,\r\n    451,\r\n    341,\r\n    453,\r\n    452,\r\n    413,\r\n    464,\r\n    463,\r\n    441,\r\n    413,\r\n    414,\r\n    258,\r\n    442,\r\n    441,\r\n    257,\r\n    443,\r\n    442,\r\n    259,\r\n    444,\r\n    443,\r\n    260,\r\n    445,\r\n    444,\r\n    467,\r\n    342,\r\n    445,\r\n    459,\r\n    458,\r\n    250,\r\n    289,\r\n    392,\r\n    290,\r\n    290,\r\n    328,\r\n    460,\r\n    376,\r\n    433,\r\n    435,\r\n    250,\r\n    290,\r\n    392,\r\n    411,\r\n    416,\r\n    433,\r\n    341,\r\n    463,\r\n    464,\r\n    453,\r\n    464,\r\n    465,\r\n    357,\r\n    465,\r\n    412,\r\n    343,\r\n    412,\r\n    399,\r\n    360,\r\n    363,\r\n    440,\r\n    437,\r\n    399,\r\n    456,\r\n    420,\r\n    456,\r\n    363,\r\n    401,\r\n    435,\r\n    288,\r\n    372,\r\n    383,\r\n    353,\r\n    339,\r\n    255,\r\n    249,\r\n    448,\r\n    261,\r\n    255,\r\n    133,\r\n    243,\r\n    190,\r\n    133,\r\n    155,\r\n    112,\r\n    33,\r\n    246,\r\n    247,\r\n    33,\r\n    130,\r\n    25,\r\n    398,\r\n    384,\r\n    286,\r\n    362,\r\n    398,\r\n    414,\r\n    362,\r\n    463,\r\n    341,\r\n    263,\r\n    359,\r\n    467,\r\n    263,\r\n    249,\r\n    255,\r\n    466,\r\n    467,\r\n    260,\r\n    75,\r\n    60,\r\n    166,\r\n    238,\r\n    239,\r\n    79,\r\n    162,\r\n    127,\r\n    139,\r\n    72,\r\n    11,\r\n    37,\r\n    121,\r\n    232,\r\n    120,\r\n    73,\r\n    72,\r\n    39,\r\n    114,\r\n    128,\r\n    47,\r\n    233,\r\n    232,\r\n    128,\r\n    103,\r\n    104,\r\n    67,\r\n    152,\r\n    175,\r\n    148,\r\n    173,\r\n    157,\r\n    155,\r\n    119,\r\n    118,\r\n    101,\r\n    74,\r\n    73,\r\n    40,\r\n    107,\r\n    9,\r\n    108,\r\n    49,\r\n    48,\r\n    131,\r\n    32,\r\n    194,\r\n    211,\r\n    184,\r\n    74,\r\n    185,\r\n    191,\r\n    80,\r\n    183,\r\n    185,\r\n    40,\r\n    186,\r\n    119,\r\n    230,\r\n    118,\r\n    210,\r\n    202,\r\n    214,\r\n    84,\r\n    83,\r\n    17,\r\n    77,\r\n    76,\r\n    146,\r\n    161,\r\n    160,\r\n    30,\r\n    190,\r\n    56,\r\n    173,\r\n    182,\r\n    106,\r\n    194,\r\n    138,\r\n    135,\r\n    192,\r\n    129,\r\n    203,\r\n    98,\r\n    54,\r\n    21,\r\n    68,\r\n    5,\r\n    51,\r\n    4,\r\n    145,\r\n    144,\r\n    23,\r\n    90,\r\n    77,\r\n    91,\r\n    207,\r\n    205,\r\n    187,\r\n    83,\r\n    201,\r\n    18,\r\n    181,\r\n    91,\r\n    182,\r\n    180,\r\n    90,\r\n    181,\r\n    16,\r\n    85,\r\n    17,\r\n    205,\r\n    206,\r\n    36,\r\n    176,\r\n    148,\r\n    140,\r\n    165,\r\n    92,\r\n    39,\r\n    245,\r\n    193,\r\n    244,\r\n    27,\r\n    159,\r\n    28,\r\n    30,\r\n    247,\r\n    161,\r\n    174,\r\n    236,\r\n    196,\r\n    103,\r\n    54,\r\n    104,\r\n    55,\r\n    193,\r\n    8,\r\n    111,\r\n    117,\r\n    31,\r\n    221,\r\n    189,\r\n    55,\r\n    240,\r\n    98,\r\n    99,\r\n    142,\r\n    126,\r\n    100,\r\n    219,\r\n    166,\r\n    218,\r\n    112,\r\n    155,\r\n    26,\r\n    198,\r\n    209,\r\n    131,\r\n    169,\r\n    135,\r\n    150,\r\n    114,\r\n    47,\r\n    217,\r\n    224,\r\n    223,\r\n    53,\r\n    220,\r\n    45,\r\n    134,\r\n    32,\r\n    211,\r\n    140,\r\n    109,\r\n    67,\r\n    108,\r\n    146,\r\n    43,\r\n    91,\r\n    231,\r\n    230,\r\n    120,\r\n    113,\r\n    226,\r\n    247,\r\n    105,\r\n    63,\r\n    52,\r\n    241,\r\n    238,\r\n    242,\r\n    124,\r\n    46,\r\n    156,\r\n    95,\r\n    78,\r\n    96,\r\n    70,\r\n    46,\r\n    63,\r\n    116,\r\n    143,\r\n    227,\r\n    116,\r\n    123,\r\n    111,\r\n    1,\r\n    44,\r\n    19,\r\n    3,\r\n    236,\r\n    51,\r\n    207,\r\n    216,\r\n    205,\r\n    26,\r\n    154,\r\n    22,\r\n    165,\r\n    39,\r\n    167,\r\n    199,\r\n    200,\r\n    208,\r\n    101,\r\n    36,\r\n    100,\r\n    43,\r\n    57,\r\n    202,\r\n    242,\r\n    20,\r\n    99,\r\n    56,\r\n    28,\r\n    157,\r\n    124,\r\n    35,\r\n    113,\r\n    29,\r\n    160,\r\n    27,\r\n    211,\r\n    204,\r\n    210,\r\n    124,\r\n    113,\r\n    46,\r\n    106,\r\n    43,\r\n    204,\r\n    96,\r\n    62,\r\n    77,\r\n    227,\r\n    137,\r\n    116,\r\n    73,\r\n    41,\r\n    72,\r\n    36,\r\n    203,\r\n    142,\r\n    235,\r\n    64,\r\n    240,\r\n    48,\r\n    49,\r\n    64,\r\n    42,\r\n    41,\r\n    74,\r\n    214,\r\n    212,\r\n    207,\r\n    183,\r\n    42,\r\n    184,\r\n    210,\r\n    169,\r\n    211,\r\n    140,\r\n    170,\r\n    176,\r\n    104,\r\n    105,\r\n    69,\r\n    193,\r\n    122,\r\n    168,\r\n    50,\r\n    123,\r\n    187,\r\n    89,\r\n    96,\r\n    90,\r\n    66,\r\n    65,\r\n    107,\r\n    179,\r\n    89,\r\n    180,\r\n    119,\r\n    101,\r\n    120,\r\n    68,\r\n    63,\r\n    104,\r\n    234,\r\n    93,\r\n    227,\r\n    16,\r\n    15,\r\n    85,\r\n    209,\r\n    129,\r\n    49,\r\n    15,\r\n    14,\r\n    86,\r\n    107,\r\n    55,\r\n    9,\r\n    120,\r\n    100,\r\n    121,\r\n    153,\r\n    145,\r\n    22,\r\n    178,\r\n    88,\r\n    179,\r\n    197,\r\n    6,\r\n    196,\r\n    89,\r\n    88,\r\n    96,\r\n    135,\r\n    138,\r\n    136,\r\n    138,\r\n    215,\r\n    172,\r\n    218,\r\n    115,\r\n    219,\r\n    41,\r\n    42,\r\n    81,\r\n    5,\r\n    195,\r\n    51,\r\n    57,\r\n    43,\r\n    61,\r\n    208,\r\n    171,\r\n    199,\r\n    41,\r\n    81,\r\n    38,\r\n    224,\r\n    53,\r\n    225,\r\n    24,\r\n    144,\r\n    110,\r\n    105,\r\n    52,\r\n    66,\r\n    118,\r\n    229,\r\n    117,\r\n    227,\r\n    34,\r\n    234,\r\n    66,\r\n    107,\r\n    69,\r\n    10,\r\n    109,\r\n    151,\r\n    219,\r\n    48,\r\n    235,\r\n    183,\r\n    62,\r\n    191,\r\n    142,\r\n    129,\r\n    126,\r\n    116,\r\n    111,\r\n    143,\r\n    7,\r\n    163,\r\n    246,\r\n    118,\r\n    117,\r\n    50,\r\n    223,\r\n    222,\r\n    52,\r\n    94,\r\n    19,\r\n    141,\r\n    222,\r\n    221,\r\n    65,\r\n    196,\r\n    3,\r\n    197,\r\n    45,\r\n    220,\r\n    44,\r\n    156,\r\n    70,\r\n    139,\r\n    188,\r\n    122,\r\n    245,\r\n    139,\r\n    71,\r\n    162,\r\n    145,\r\n    153,\r\n    159,\r\n    149,\r\n    170,\r\n    150,\r\n    122,\r\n    188,\r\n    196,\r\n    206,\r\n    216,\r\n    92,\r\n    163,\r\n    144,\r\n    161,\r\n    164,\r\n    2,\r\n    167,\r\n    242,\r\n    141,\r\n    241,\r\n    0,\r\n    164,\r\n    37,\r\n    11,\r\n    72,\r\n    12,\r\n    144,\r\n    145,\r\n    160,\r\n    12,\r\n    38,\r\n    13,\r\n    70,\r\n    63,\r\n    71,\r\n    31,\r\n    226,\r\n    111,\r\n    157,\r\n    158,\r\n    154,\r\n    36,\r\n    101,\r\n    205,\r\n    203,\r\n    206,\r\n    165,\r\n    126,\r\n    209,\r\n    217,\r\n    98,\r\n    165,\r\n    97,\r\n    237,\r\n    220,\r\n    218,\r\n    237,\r\n    239,\r\n    241,\r\n    210,\r\n    214,\r\n    169,\r\n    140,\r\n    171,\r\n    32,\r\n    241,\r\n    125,\r\n    237,\r\n    179,\r\n    86,\r\n    178,\r\n    180,\r\n    85,\r\n    179,\r\n    181,\r\n    84,\r\n    180,\r\n    182,\r\n    83,\r\n    181,\r\n    194,\r\n    201,\r\n    182,\r\n    177,\r\n    137,\r\n    132,\r\n    184,\r\n    76,\r\n    183,\r\n    185,\r\n    61,\r\n    184,\r\n    186,\r\n    57,\r\n    185,\r\n    216,\r\n    212,\r\n    186,\r\n    192,\r\n    214,\r\n    187,\r\n    139,\r\n    34,\r\n    156,\r\n    218,\r\n    79,\r\n    237,\r\n    147,\r\n    123,\r\n    177,\r\n    45,\r\n    44,\r\n    4,\r\n    208,\r\n    201,\r\n    32,\r\n    98,\r\n    64,\r\n    129,\r\n    192,\r\n    213,\r\n    138,\r\n    235,\r\n    59,\r\n    219,\r\n    141,\r\n    242,\r\n    97,\r\n    97,\r\n    2,\r\n    141,\r\n    240,\r\n    75,\r\n    235,\r\n    229,\r\n    24,\r\n    228,\r\n    31,\r\n    25,\r\n    226,\r\n    230,\r\n    23,\r\n    229,\r\n    231,\r\n    22,\r\n    230,\r\n    232,\r\n    26,\r\n    231,\r\n    233,\r\n    112,\r\n    232,\r\n    244,\r\n    189,\r\n    243,\r\n    189,\r\n    221,\r\n    190,\r\n    222,\r\n    28,\r\n    221,\r\n    223,\r\n    27,\r\n    222,\r\n    224,\r\n    29,\r\n    223,\r\n    225,\r\n    30,\r\n    224,\r\n    113,\r\n    247,\r\n    225,\r\n    99,\r\n    60,\r\n    240,\r\n    213,\r\n    147,\r\n    215,\r\n    60,\r\n    20,\r\n    166,\r\n    192,\r\n    187,\r\n    213,\r\n    243,\r\n    112,\r\n    244,\r\n    244,\r\n    233,\r\n    245,\r\n    245,\r\n    128,\r\n    188,\r\n    188,\r\n    114,\r\n    174,\r\n    134,\r\n    131,\r\n    220,\r\n    174,\r\n    217,\r\n    236,\r\n    236,\r\n    198,\r\n    134,\r\n    215,\r\n    177,\r\n    58,\r\n    156,\r\n    143,\r\n    124,\r\n    25,\r\n    110,\r\n    7,\r\n    31,\r\n    228,\r\n    25,\r\n    264,\r\n    356,\r\n    368,\r\n    0,\r\n    11,\r\n    267,\r\n    451,\r\n    452,\r\n    349,\r\n    267,\r\n    302,\r\n    269,\r\n    350,\r\n    357,\r\n    277,\r\n    350,\r\n    452,\r\n    357,\r\n    299,\r\n    333,\r\n    297,\r\n    396,\r\n    175,\r\n    377,\r\n    381,\r\n    384,\r\n    382,\r\n    280,\r\n    347,\r\n    330,\r\n    269,\r\n    303,\r\n    270,\r\n    151,\r\n    9,\r\n    337,\r\n    344,\r\n    278,\r\n    360,\r\n    424,\r\n    418,\r\n    431,\r\n    270,\r\n    304,\r\n    409,\r\n    272,\r\n    310,\r\n    407,\r\n    322,\r\n    270,\r\n    410,\r\n    449,\r\n    450,\r\n    347,\r\n    432,\r\n    422,\r\n    434,\r\n    18,\r\n    313,\r\n    17,\r\n    291,\r\n    306,\r\n    375,\r\n    259,\r\n    387,\r\n    260,\r\n    424,\r\n    335,\r\n    418,\r\n    434,\r\n    364,\r\n    416,\r\n    391,\r\n    423,\r\n    327,\r\n    301,\r\n    251,\r\n    298,\r\n    275,\r\n    281,\r\n    4,\r\n    254,\r\n    373,\r\n    253,\r\n    375,\r\n    307,\r\n    321,\r\n    280,\r\n    425,\r\n    411,\r\n    200,\r\n    421,\r\n    18,\r\n    335,\r\n    321,\r\n    406,\r\n    321,\r\n    320,\r\n    405,\r\n    314,\r\n    315,\r\n    17,\r\n    423,\r\n    426,\r\n    266,\r\n    396,\r\n    377,\r\n    369,\r\n    270,\r\n    322,\r\n    269,\r\n    413,\r\n    417,\r\n    464,\r\n    385,\r\n    386,\r\n    258,\r\n    248,\r\n    456,\r\n    419,\r\n    298,\r\n    284,\r\n    333,\r\n    168,\r\n    417,\r\n    8,\r\n    448,\r\n    346,\r\n    261,\r\n    417,\r\n    413,\r\n    285,\r\n    326,\r\n    327,\r\n    328,\r\n    277,\r\n    355,\r\n    329,\r\n    309,\r\n    392,\r\n    438,\r\n    381,\r\n    382,\r\n    256,\r\n    279,\r\n    429,\r\n    360,\r\n    365,\r\n    364,\r\n    379,\r\n    355,\r\n    277,\r\n    437,\r\n    282,\r\n    443,\r\n    283,\r\n    281,\r\n    275,\r\n    363,\r\n    395,\r\n    431,\r\n    369,\r\n    299,\r\n    297,\r\n    337,\r\n    335,\r\n    273,\r\n    321,\r\n    348,\r\n    450,\r\n    349,\r\n    359,\r\n    446,\r\n    467,\r\n    283,\r\n    293,\r\n    282,\r\n    250,\r\n    458,\r\n    462,\r\n    300,\r\n    276,\r\n    383,\r\n    292,\r\n    308,\r\n    325,\r\n    283,\r\n    276,\r\n    293,\r\n    264,\r\n    372,\r\n    447,\r\n    346,\r\n    352,\r\n    340,\r\n    354,\r\n    274,\r\n    19,\r\n    363,\r\n    456,\r\n    281,\r\n    426,\r\n    436,\r\n    425,\r\n    380,\r\n    381,\r\n    252,\r\n    267,\r\n    269,\r\n    393,\r\n    421,\r\n    200,\r\n    428,\r\n    371,\r\n    266,\r\n    329,\r\n    432,\r\n    287,\r\n    422,\r\n    290,\r\n    250,\r\n    328,\r\n    385,\r\n    258,\r\n    384,\r\n    446,\r\n    265,\r\n    342,\r\n    386,\r\n    387,\r\n    257,\r\n    422,\r\n    424,\r\n    430,\r\n    445,\r\n    342,\r\n    276,\r\n    422,\r\n    273,\r\n    424,\r\n    306,\r\n    292,\r\n    307,\r\n    352,\r\n    366,\r\n    345,\r\n    268,\r\n    271,\r\n    302,\r\n    358,\r\n    423,\r\n    371,\r\n    327,\r\n    294,\r\n    460,\r\n    331,\r\n    279,\r\n    294,\r\n    303,\r\n    271,\r\n    304,\r\n    436,\r\n    432,\r\n    427,\r\n    304,\r\n    272,\r\n    408,\r\n    395,\r\n    394,\r\n    431,\r\n    378,\r\n    395,\r\n    400,\r\n    296,\r\n    334,\r\n    299,\r\n    6,\r\n    351,\r\n    168,\r\n    376,\r\n    352,\r\n    411,\r\n    307,\r\n    325,\r\n    320,\r\n    285,\r\n    295,\r\n    336,\r\n    320,\r\n    319,\r\n    404,\r\n    329,\r\n    330,\r\n    349,\r\n    334,\r\n    293,\r\n    333,\r\n    366,\r\n    323,\r\n    447,\r\n    316,\r\n    15,\r\n    315,\r\n    331,\r\n    358,\r\n    279,\r\n    317,\r\n    14,\r\n    316,\r\n    8,\r\n    285,\r\n    9,\r\n    277,\r\n    329,\r\n    350,\r\n    253,\r\n    374,\r\n    252,\r\n    319,\r\n    318,\r\n    403,\r\n    351,\r\n    6,\r\n    419,\r\n    324,\r\n    318,\r\n    325,\r\n    397,\r\n    367,\r\n    365,\r\n    288,\r\n    435,\r\n    397,\r\n    278,\r\n    344,\r\n    439,\r\n    310,\r\n    272,\r\n    311,\r\n    248,\r\n    195,\r\n    281,\r\n    375,\r\n    273,\r\n    291,\r\n    175,\r\n    396,\r\n    199,\r\n    312,\r\n    311,\r\n    268,\r\n    276,\r\n    283,\r\n    445,\r\n    390,\r\n    373,\r\n    339,\r\n    295,\r\n    282,\r\n    296,\r\n    448,\r\n    449,\r\n    346,\r\n    356,\r\n    264,\r\n    454,\r\n    337,\r\n    336,\r\n    299,\r\n    337,\r\n    338,\r\n    151,\r\n    294,\r\n    278,\r\n    455,\r\n    308,\r\n    292,\r\n    415,\r\n    429,\r\n    358,\r\n    355,\r\n    265,\r\n    340,\r\n    372,\r\n    388,\r\n    390,\r\n    466,\r\n    352,\r\n    346,\r\n    280,\r\n    295,\r\n    442,\r\n    282,\r\n    354,\r\n    19,\r\n    370,\r\n    285,\r\n    441,\r\n    295,\r\n    195,\r\n    248,\r\n    197,\r\n    457,\r\n    440,\r\n    274,\r\n    301,\r\n    300,\r\n    368,\r\n    417,\r\n    351,\r\n    465,\r\n    251,\r\n    301,\r\n    389,\r\n    385,\r\n    380,\r\n    386,\r\n    394,\r\n    395,\r\n    379,\r\n    399,\r\n    412,\r\n    419,\r\n    410,\r\n    436,\r\n    322,\r\n    387,\r\n    373,\r\n    388,\r\n    326,\r\n    2,\r\n    393,\r\n    354,\r\n    370,\r\n    461,\r\n    393,\r\n    164,\r\n    267,\r\n    268,\r\n    302,\r\n    12,\r\n    386,\r\n    374,\r\n    387,\r\n    312,\r\n    268,\r\n    13,\r\n    298,\r\n    293,\r\n    301,\r\n    265,\r\n    446,\r\n    340,\r\n    380,\r\n    385,\r\n    381,\r\n    280,\r\n    330,\r\n    425,\r\n    322,\r\n    426,\r\n    391,\r\n    420,\r\n    429,\r\n    437,\r\n    393,\r\n    391,\r\n    326,\r\n    344,\r\n    440,\r\n    438,\r\n    458,\r\n    459,\r\n    461,\r\n    364,\r\n    434,\r\n    394,\r\n    428,\r\n    396,\r\n    262,\r\n    274,\r\n    354,\r\n    457,\r\n    317,\r\n    316,\r\n    402,\r\n    316,\r\n    315,\r\n    403,\r\n    315,\r\n    314,\r\n    404,\r\n    314,\r\n    313,\r\n    405,\r\n    313,\r\n    421,\r\n    406,\r\n    323,\r\n    366,\r\n    361,\r\n    292,\r\n    306,\r\n    407,\r\n    306,\r\n    291,\r\n    408,\r\n    291,\r\n    287,\r\n    409,\r\n    287,\r\n    432,\r\n    410,\r\n    427,\r\n    434,\r\n    411,\r\n    372,\r\n    264,\r\n    383,\r\n    459,\r\n    309,\r\n    457,\r\n    366,\r\n    352,\r\n    401,\r\n    1,\r\n    274,\r\n    4,\r\n    418,\r\n    421,\r\n    262,\r\n    331,\r\n    294,\r\n    358,\r\n    435,\r\n    433,\r\n    367,\r\n    392,\r\n    289,\r\n    439,\r\n    328,\r\n    462,\r\n    326,\r\n    94,\r\n    2,\r\n    370,\r\n    289,\r\n    305,\r\n    455,\r\n    339,\r\n    254,\r\n    448,\r\n    359,\r\n    255,\r\n    446,\r\n    254,\r\n    253,\r\n    449,\r\n    253,\r\n    252,\r\n    450,\r\n    252,\r\n    256,\r\n    451,\r\n    256,\r\n    341,\r\n    452,\r\n    414,\r\n    413,\r\n    463,\r\n    286,\r\n    441,\r\n    414,\r\n    286,\r\n    258,\r\n    441,\r\n    258,\r\n    257,\r\n    442,\r\n    257,\r\n    259,\r\n    443,\r\n    259,\r\n    260,\r\n    444,\r\n    260,\r\n    467,\r\n    445,\r\n    309,\r\n    459,\r\n    250,\r\n    305,\r\n    289,\r\n    290,\r\n    305,\r\n    290,\r\n    460,\r\n    401,\r\n    376,\r\n    435,\r\n    309,\r\n    250,\r\n    392,\r\n    376,\r\n    411,\r\n    433,\r\n    453,\r\n    341,\r\n    464,\r\n    357,\r\n    453,\r\n    465,\r\n    343,\r\n    357,\r\n    412,\r\n    437,\r\n    343,\r\n    399,\r\n    344,\r\n    360,\r\n    440,\r\n    420,\r\n    437,\r\n    456,\r\n    360,\r\n    420,\r\n    363,\r\n    361,\r\n    401,\r\n    288,\r\n    265,\r\n    372,\r\n    353,\r\n    390,\r\n    339,\r\n    249,\r\n    339,\r\n    448,\r\n    255,\r\n  ];\r\n\r\n  const drawPath = (ctx, points, closePath) => {\r\n    const region = new Path2D();\r\n    region.moveTo(points[0][0], points[0][1]);\r\n    for (let i = 1; i < points.length; i++) {\r\n      const point = points[i];\r\n      region.lineTo(point[0], point[1]);\r\n    }\r\n  \r\n    if (closePath) {\r\n      region.closePath();\r\n    }\r\n    ctx.strokeStyle = \"grey\";\r\n    ctx.stroke(region);\r\n  };\r\n  \r\n  // Drawing Mesh\r\n  export const drawMesh = (predictions, ctx) => {\r\n    if (predictions.length > 0) {\r\n      predictions.forEach((prediction) => {\r\n        const keypoints = prediction.scaledMesh;\r\n  \r\n        //  Draw Triangles\r\n        for (let i = 0; i < TRIANGULATION.length / 3; i++) {\r\n          // Get sets of three keypoints for the triangle\r\n          const points = [\r\n            TRIANGULATION[i * 3],\r\n            TRIANGULATION[i * 3 + 1],\r\n            TRIANGULATION[i * 3 + 2],\r\n          ].map((index) => keypoints[index]);\r\n          //  Draw triangle\r\n          drawPath(ctx, points, true);\r\n        }\r\n  \r\n        // Draw Dots\r\n        for (let i = 0; i < keypoints.length; i++) {\r\n          const x = keypoints[i][0];\r\n          const y = keypoints[i][1];\r\n  \r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 1 /* radius */, 0, 3 * Math.PI);\r\n          ctx.fillStyle = \"aqua\";\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport * as posenet from \"@tensorflow-models/posenet\";\r\nimport * as facemesh from \"@tensorflow-models/facemesh\";\r\n//import * as tf from '@tensorflow/tfjs-core';\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawHand_tap, drawHand_rotate, drawHand_fist, writeText, drawKeypoints, drawSkeleton, drawMesh } from \"./utilities\";\r\nimport { sqrt, pow } from \"mathjs\"\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ID : 0,\r\n      tap_count : [],\r\n      rotate_count : [],\r\n      fist_count : [],\r\n      index_passed : 0,\r\n      min_dist: 0,\r\n      max_dist: 5.0,\r\n      rotate_passed : 0,\r\n      last_pressed:0,\r\n      real_time_inferencing:false,\r\n      recording:false,\r\n      button_mode:false,\r\n      chart_ready:false,\r\n      finger_done : false,\r\n      rotate_done : false,\r\n      fist_done : false,\r\n      dist_array : [],\r\n      dist_time_array : [],\r\n      dist_record : [],\r\n      dist_time_record : [],\r\n      rotate_array : [],\r\n      rotate_time_array : [],\r\n      rotate_record : [],\r\n      rotate_time_record : [],\r\n      fist_array : [],\r\n      fist_time_array : [],\r\n      fist_record : [],\r\n      fist_time_record : [],\r\n      gait_record : [],\r\n      gait_time_record : [],\r\n      chart_data1 : null,\r\n      chart_data2 : null,\r\n      chart_data3 : null,\r\n      wait : false,\r\n      wait_till : 0,\r\n      startAt: Date.now(),\r\n      dead_frame: 0,\r\n      raw: true,\r\n      facingMode: \"user\",\r\n      avg_fps: 0,\r\n    };\r\n    this.webcamRef = React.createRef(null);\r\n    this.canvasRef = React.createRef(null);\r\n    this.videoConstraints = {facingMode: \"user\"};\r\n    this.capture_interval = 100;\r\n    this.runHandpose = this.runHandpose.bind(this);\r\n    this.stop_real_time_inference = this.stop_real_time_inference.bind(this);\r\n    this.stop_tapping = this.stop_tapping.bind(this);\r\n    this.stop_rotating = this.stop_rotating.bind(this);\r\n    this.stop_record = this.stop_record.bind(this);\r\n    this.record_video = this.record_video.bind(this);\r\n    this.concat_frame = this.concat_frame.bind(this);\r\n    this.inference = this.inference.bind(this);\r\n    this.reset_counter = this.reset_counter.bind(this);\r\n    this.increment_tap1 = this.increment_tap1.bind(this);\r\n    this.increment_tap2 = this.increment_tap2.bind(this);\r\n    this.switch_button = this.switch_button.bind(this);\r\n    this.compose_chart = this.compose_chart.bind(this);\r\n    this.runPosenet = this.runPosenet.bind(this);\r\n    this.real_time_posenet = this.real_time_posenet.bind(this);\r\n    this.runFacemesh = this.runFacemesh.bind(this);\r\n    this.real_time_facemesh = this.real_time_facemesh.bind(this);\r\n    this.switch_style = this.switch_style.bind(this);\r\n    this.switch_cam = this.switch_cam.bind(this);\r\n    this.getArray = this.getArray.bind(this);\r\n    this.exportToJson = this.exportToJson.bind(this);\r\n  }\r\n\r\n  switch_cam(){\r\n    if (this.state.facingMode === \"user\") this.setState({facingMode: \"environment\"});\r\n    else if (this.state.facingMode === \"environment\") this.setState({facingMode: \"user\"});\r\n  }\r\n\r\n  async runFacemesh(){\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await facemesh.load();\r\n    console.log(\"Facemesh model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_facemesh(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true});\r\n  }\r\n\r\n  async real_time_facemesh(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000});\r\n      this.setState({wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const face = await net.estimateFaces(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      drawMesh(face, ctx);\r\n    }\r\n  }\r\n\r\n  async runPosenet(){\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await posenet.load();\r\n    console.log(\"PoseNet model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_posenet(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true});\r\n  }\r\n\r\n  async real_time_posenet(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000,\r\n        wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const pose = await net.estimateSinglePose(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\r\n      drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\r\n    }\r\n  }\r\n\r\n  async switch_style(){\r\n    await this.setState({raw: !this.state.raw});\r\n    this.compose_chart();\r\n  }\r\n\r\n  compose_chart(){\r\n    let time_array_1 = [];\r\n    let count_array_1 = [];\r\n    let label_1 = \"\";\r\n    let time_array_2 = [];\r\n    let count_array_2 = [];\r\n    let label_2 = \"\";\r\n    let time_array_3 = [];\r\n    let count_array_3 = [];\r\n    let label_3 = \"\";\r\n    let real_dist = document.getElementById(\"real_measurement\").value;\r\n    let avg_fps = this.state.dist_time_array.length / \r\n                 (this.state.dist_time_array[this.state.dist_time_array.length - 1] - \r\n                  this.state.dist_time_array[0]);\r\n    this.setState({avg_fps:avg_fps});\r\n    \r\n    if (this.state.raw){\r\n      // Print Data Raw\r\n      time_array_1 = [...this.state.dist_time_array];\r\n      count_array_1 = [...this.state.dist_array];\r\n      time_array_2 = [...this.state.rotate_time_array];\r\n      count_array_2 = [...this.state.rotate_array];\r\n      time_array_3 = [...this.state.fist_time_array];\r\n      count_array_3 = [...this.state.fist_array];\r\n      \r\n      // Change to Real Life Measurement\r\n      if (real_dist > 0.0001){\r\n        label_1 = \"Distance between Index and Thumb (cm)\";\r\n        label_2 = \"Relative Location between Left and Right of Hand (cm)\";\r\n        label_3 = \"Relative Location between Tip of Fingers and Finger Joints (cm)\";\r\n        let i = 0;\r\n        let tmp = 0;\r\n        for (i = 0; i < count_array_1.length; i++){\r\n          tmp = count_array_1[i];\r\n          count_array_1[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_2.length; i++){\r\n          tmp = count_array_2[i];\r\n          count_array_2[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_3.length; i++){\r\n          tmp = count_array_3[i];\r\n          count_array_3[i] = tmp*real_dist;\r\n        }\r\n      }\r\n      else{\r\n        label_1 = \"Distance between Index and Thumb (Relative Scale)\";\r\n        label_2 = \"Relative Location between Left and Right of Hand (Relative Scale)\";\r\n        label_3 = \"Relative Location between Tip of Fingers and Finger Joints (Relative Scale)\";\r\n      }\r\n    }\r\n    else{\r\n      // Recalculate Tapping Data\r\n      let d_array = [];\r\n      let avg_value = 0;\r\n      for (let i = 1; i < this.state.dist_array.length; i++) d_array = [...d_array, Math.abs(this.state.dist_array[i-1] - this.state.dist_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_1 = [...count_array_1, avg_value];\r\n        time_array_1 = [...time_array_1, this.state.dist_time_array[i]];\r\n      }\r\n\r\n      d_array = [];\r\n      avg_value = 0;\r\n      for (let i = 1; i < this.state.rotate_array.length; i++) d_array = [...d_array, Math.abs(this.state.rotate_array[i-1] - this.state.rotate_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_2 = [...count_array_2, avg_value];\r\n        time_array_2 = [...time_array_2, this.state.rotate_time_array[i]];\r\n      }\r\n\r\n      d_array = [];\r\n      avg_value = 0;\r\n      for (let i = 1; i < this.state.fist_array.length; i++) d_array = [...d_array, Math.abs(this.state.fist_array[i-1] - this.state.fist_array[i])];\r\n      for (let i = 0; i < d_array.length - 49; i++){\r\n        avg_value = (d_array[i] + d_array[i+1] + d_array[i+2] + d_array[i+3] + d_array[i+4])/5;\r\n        count_array_3 = [...count_array_3, avg_value];\r\n        time_array_3 = [...time_array_3, this.state.fist_time_array[i]];\r\n      }\r\n\r\n      // Change to Real Life Measurement\r\n      if (real_dist > 0.0001){\r\n        label_1 = \"Average Distance between Index and Thumb per Second (cm)\";\r\n        label_2 = \"Average Distance between Left and Right of Hand per Second (cm)\";\r\n        label_3 = \"Average Distance Location between Tip of Fingers and Finger Joints per Second (cm)\";\r\n        let i = 0;\r\n        let tmp = 0;\r\n        for (i = 0; i < count_array_1.length; i++){\r\n          tmp = count_array_1[i];\r\n          count_array_1[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_2.length; i++){\r\n          tmp = count_array_2[i];\r\n          count_array_2[i] = tmp*real_dist;\r\n        }\r\n        for (i = 0; i < count_array_3.length; i++){\r\n          tmp = count_array_3[i];\r\n          count_array_3[i] = tmp*real_dist;\r\n        }\r\n      }\r\n      else{\r\n        label_1 = \"Average Distance between Index and Thumb per Second (Relative Scale)\";\r\n        label_2 = \"Average Distance between Left and Right of Hand per Second (Relative Scale)\";\r\n        label_3 = \"Average Distance Location between Tip of Fingers and Finger Joints per Second (Relative Scale)\";\r\n      }\r\n    }\r\n\r\n    // Setup Graphs\r\n    const data1 = {\r\n      labels: time_array_1,\r\n      datasets: [        \r\n        {\r\n          label: label_1,\r\n          fill: false,\r\n          lineTension: 0.3,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_1\r\n        }\r\n      ]\r\n    };\r\n    const data2 = {\r\n      labels: time_array_2,\r\n      datasets: [        \r\n        {\r\n          label: label_2,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(192,75,192,0.4)',\r\n          borderColor: 'rgba(192,75,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(192,75,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(192,75,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_2 \r\n        },\r\n      ]\r\n    };\r\n    const data3 = {\r\n      labels: time_array_3,\r\n      datasets: [        \r\n        {\r\n          label: label_3,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(192,192,75,0.4)',\r\n          borderColor: 'rgba(192,192,75,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(192,192,75,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(192,192,75,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: count_array_3\r\n        }\r\n      ]\r\n    };\r\n    this.setState({chart_data1:data1});\r\n    this.setState({chart_data2:data2});\r\n    this.setState({chart_data3:data3});\r\n    this.setState({chart_ready:true});\r\n  }\r\n\r\n  switch_button(){\r\n    if (this.state.button_mode === true){\r\n      this.setState({button_mode:false});\r\n      this.compose_chart();\r\n    }\r\n    else{\r\n      this.setState({button_mode:true})\r\n    }\r\n  }\r\n\r\n  increment_tap1(){\r\n    if (this.state.last_pressed !== 1){\r\n      let current_moment = (Date.now() - this.state.startAt)/1000\r\n      this.setState({last_pressed:1})\r\n      this.setState({dist_array:[...this.state.dist_array, 1.0]});\r\n      this.setState({dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n      this.setState({tap_count:[...this.state.tap_count, current_moment]});\r\n    }\r\n  }\r\n\r\n  increment_tap2(){\r\n    if (this.state.last_pressed !== 2){\r\n      let current_moment = (Date.now() - this.state.startAt)/1000\r\n      this.setState({last_pressed:2})\r\n      this.setState({dist_array:[...this.state.dist_array, 1.0]});\r\n      this.setState({dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n      this.setState({tap_count:[...this.state.tap_count, current_moment]});\r\n    }\r\n  }\r\n\r\n  norm(lm1, lm2){\r\n    return sqrt(pow(lm1[0]-lm2[0], 2)+pow(lm1[1]-lm2[1], 2))\r\n  }\r\n\r\n  reset_counter(){\r\n    clearInterval(this.state.ID);\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n    this.setState({\r\n      ID : 0,\r\n      tap_count : [],\r\n      rotate_count : [],\r\n      fist_count : [],\r\n      index_passed : 0,\r\n      min_dist: 0,\r\n      max_dist: 5.0,\r\n      rotate_passed : 0,\r\n      last_pressed:0,\r\n      real_time_inferencing:false,\r\n      recording:false,\r\n      button_mode:false,\r\n      chart_ready:false,\r\n      finger_done : false,\r\n      rotate_done : false,\r\n      fist_done : false,\r\n      dist_array : [],\r\n      dist_time_array : [],\r\n      dist_record : [],\r\n      dist_time_record : [],\r\n      rotate_array : [],\r\n      rotate_time_array : [],\r\n      rotate_record : [],\r\n      rotate_time_record : [],\r\n      fist_array : [],\r\n      fist_time_array : [],\r\n      fist_record : [],\r\n      fist_time_record : [],\r\n      gait_record : [],\r\n      gait_time_record : [],\r\n      chart_data1 : null,\r\n      chart_data2 : null,\r\n      chart_data3 : null,\r\n      wait : false,\r\n      wait_till : 0,\r\n      startAt: Date.now(),\r\n      dead_frame: 0,\r\n      raw: true,\r\n      facingMode: \"user\",\r\n      avg_fps: 0,\r\n    });\r\n  }\r\n\r\n  sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n  }\r\n\r\n  async runHandpose() {\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    writeText(ctx, { text: 'Loading', x: 180, y: 70 });\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await handpose.load();\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n    //const uploadJSONInput = document.getElementById('upload-json');\r\n    //const uploadWeightsInput = document.getElementById('upload-weights');\r\n    //const model = await tf.loadLayersModel(tf.io.browserFiles([uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\r\n    console.log(\"Handpose model loaded.\");\r\n    this.setState({startAt:Date.now()});\r\n    const Interval_ID = setInterval(() => {\r\n      this.real_time_inference(net);\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      real_time_inferencing:true,\r\n      wait:true});\r\n  };\r\n\r\n  async real_time_inference(net) {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000});\r\n      this.setState({wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = this.webcamRef.current.video;\r\n      const videoWidth = this.webcamRef.current.video.videoWidth;\r\n      const videoHeight = this.webcamRef.current.video.videoHeight;\r\n      this.webcamRef.current.video.width = videoWidth;\r\n      this.webcamRef.current.video.height = videoHeight;\r\n      this.canvasRef.current.width = videoWidth;\r\n      this.canvasRef.current.height = videoHeight;\r\n      const hand = await net.estimateHands(video);\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      \r\n      //check if waiting\r\n      if (Date.now() < this.state.wait_till){\r\n        if (hand.length > 0) drawHand_tap (hand, ctx);\r\n        //count down 3, 2, 1\r\n        if (this.state.wait_till - Date.now() < 1000) writeText(ctx, { text: '1', x: 180, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 2000) writeText(ctx, { text: '2', x: 140, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 3000) writeText(ctx, { text: '3', x: 100, y: 70 });\r\n      }\r\n      else {\r\n        if (hand.length > 0){\r\n          hand.forEach((prediction) => {\r\n            this.setState({dead_frame: 0});\r\n            const landmarks = prediction.landmarks\r\n\r\n            let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n            let current_moment = (Date.now() - this.state.startAt)/1000\r\n\r\n            if (this.state.finger_done === false){\r\n              drawHand_tap (hand, ctx);\r\n              // Calculate relative distance\r\n              let index_dist = this.norm(landmarks[4], landmarks[8]);\r\n              let current_dist = index_dist/pawn_dist;\r\n\r\n              // Record distance\r\n              this.setState({dist_array:[...this.state.dist_array, current_dist],\r\n                dist_time_array:[...this.state.dist_time_array, current_moment]});\r\n              \r\n              // Perform counting\r\n              if (this.state.index_passed === 0 && (current_dist - this.state.min_dist) > 0.05){\r\n                this.setState({index_passed:1,\r\n                  max_dist: current_dist});\r\n                console.log(1);\r\n              }\r\n              if (this.state.index_passed === 1 && current_dist > this.state.max_dist){\r\n                this.setState({max_dist: current_dist});\r\n                console.log(2);\r\n              }\r\n              if (this.state.index_passed === 1 && (this.state.max_dist - current_dist) > 0.05){\r\n                this.setState({index_passed:0,\r\n                  min_dist: current_dist,\r\n                  tap_count:[...this.state.tap_count, current_moment]});\r\n                console.log(3);\r\n              }\r\n              if (this.state.index_passed === 0 && current_dist < this.state.min_dist){\r\n                this.setState({min_dist: current_dist});\r\n                console.log(4);\r\n              }\r\n            }\r\n            \r\n            if (this.state.finger_done === true && this.state.rotate_done === false){\r\n              drawHand_rotate (hand, ctx, this.state.rotate_passed);\r\n              // Calculate relative distance\r\n              let rotate_dist = (landmarks[2][0] - landmarks[17][0]) / pawn_dist;\r\n\r\n              // Record distance\r\n              this.setState({rotate_array:[...this.state.rotate_array, rotate_dist],\r\n                rotate_time_array:[...this.state.rotate_time_array, current_moment]});\r\n\r\n              // Perform counting\r\n              if (this.state.rotate_passed === 0){\r\n                if (rotate_dist >= 0.25) this.setState({rotate_passed:1});\r\n                if (rotate_dist <= -0.25) this.setState({rotate_passed:-1});\r\n              }\r\n              if (this.state.rotate_passed === 1 && rotate_dist <= -0.5){\r\n                this.setState({rotate_passed:-1});\r\n              }\r\n              if (this.state.rotate_passed === -1 && rotate_dist >= 0.5){\r\n                this.setState({rotate_passed:1,\r\n                  rotate_count:[...this.state.rotate_count, current_moment]});\r\n              }\r\n            }\r\n\r\n            if (this.state.rotate_done === true && this.state.fist_done === false){\r\n              console.log(this.state.fist_passed);\r\n              drawHand_fist (hand, ctx, this.state.fist_passed);\r\n              // Calculate relative distance\r\n              let fist_dist =  ((landmarks[8][1] - landmarks[5][1])+\r\n                                (landmarks[12][1] - landmarks[9][1])+\r\n                                (landmarks[16][1] - landmarks[13][1])+\r\n                                (landmarks[20][1] - landmarks[17][1]))/\r\n                                (4*pawn_dist)\r\n\r\n              // Record distance\r\n              this.setState({fist_array:[...this.state.fist_array, fist_dist],\r\n                fist_time_array:[...this.state.fist_time_array, current_moment]});\r\n\r\n              // Perform counting\r\n              if (fist_dist >= 0.0){this.setState({fist_passed:1})}\r\n              if (fist_dist < -0.4 && this.state.fist_passed === 1){\r\n                this.setState({fist_passed:0,\r\n                  fist_count:[...this.state.fist_count, current_moment]});\r\n              }\r\n            }                  \r\n          });\r\n        }\r\n        else {\r\n          // Warning message for hand off screen\r\n          if (this.state.dead_frame > 9) writeText(ctx, { text: 'Hand Off Screen', x: 180, y: 70 });\r\n          this.setState({dead_frame: this.state.dead_frame + 1});\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  async stop_tapping() {\r\n    this.setState({finger_done:true});\r\n    this.setState({wait:true});\r\n  }\r\n\r\n  async stop_rotating() {\r\n    this.setState({rotate_done:true});\r\n    this.setState({wait:true});\r\n  }\r\n\r\n  stop_real_time_inference() {\r\n    clearInterval(this.state.ID);\r\n    this.setState({real_time_inferencing:false,\r\n                   finger_done:false,\r\n                   rotate_done:false,\r\n                   fist_done:false});\r\n    this.compose_chart();\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n  }\r\n\r\n  async record_video(){\r\n    this.setState({startAt:Date.now()});\r\n    console.log(\"Handpose model loaded.\");\r\n    const Interval_ID = setInterval(() => {\r\n      this.concat_frame();\r\n    }, this.capture_interval);\r\n    this.setState({ID:Interval_ID,\r\n      recording:true,\r\n      wait:true});\r\n  }\r\n\r\n  async concat_frame() {\r\n    if (this.state.wait){\r\n      this.setState({wait_till:Date.now()+3000,\r\n        wait:false});\r\n    }\r\n    if (\r\n      typeof this.webcamRef.current !== \"undefined\" &&\r\n      this.webcamRef.current !== null &&\r\n      this.webcamRef.current.video.readyState === 4\r\n    ) {\r\n      if (Date.now() < this.state.wait_till){\r\n        console.log(\"Waiting till \", this.state.wait_till);\r\n        //count down 3, 2, 1\r\n        const ctx = this.canvasRef.current.getContext(\"2d\");\r\n        if (this.state.wait_till - Date.now() < 250) ctx.clearRect(0,0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n        else if (this.state.wait_till - Date.now() < 1000) writeText(ctx, { text: '1', x: 180, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 2000) writeText(ctx, { text: '2', x: 140, y: 70 });\r\n        else if (this.state.wait_till - Date.now() < 3000) writeText(ctx, { text: '3', x: 100, y: 70 });\r\n      }\r\n      else {\r\n        let current_moment = (Date.now() - this.state.startAt)/1000;\r\n        const image = this.webcamRef.current.getScreenshot();      \r\n        var img = document.createElement(\"img\");\r\n        img.src = image;\r\n        img.onload = function(){\r\n          if (this.state.finger_done === false){\r\n            this.setState({dist_record:[...this.state.dist_record, img],\r\n              dist_time_record:[...this.state.dist_time_record, current_moment]});\r\n          }\r\n\r\n          else if (this.state.finger_done === true && this.state.rotate_done === false){\r\n            this.setState({rotate_record:[...this.state.rotate_record, img],\r\n              rotate_time_record:[...this.state.rotate_time_record, current_moment]});\r\n          }\r\n\r\n          else if (this.state.rotate_done === true && this.state.fist_done === false){\r\n            this.setState({fist_record:[...this.state.fist_record, img],\r\n              fist_time_record:[...this.state.fist_time_record, current_moment]});\r\n          }\r\n        }.bind(this)\r\n      }\r\n    }\r\n  }\r\n\r\n  async inference() {\r\n    require('@tensorflow/tfjs-backend-webgl');\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n\r\n    // Run prediction on recorded tapping data\r\n    for (let i = 0; i<this.state.dist_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.dist_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => { \r\n          // Calculate relative distance\r\n          const landmarks = prediction.landmarks\r\n          let index_dist = this.norm(landmarks[4], landmarks[8]);\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let current_dist = index_dist/pawn_dist;\r\n\r\n          // Record distance\r\n          this.setState({dist_array:[...this.state.dist_array, current_dist],\r\n            dist_time_array:[...this.state.dist_time_array, this.state.dist_time_record[i]]});\r\n          \r\n          // Perform counting\r\n          if (this.state.index_passed === 0 && (current_dist - this.state.min_dist) > 0.05){\r\n            this.setState({index_passed:1,\r\n              max_dist: current_dist});\r\n            console.log(1);\r\n          }\r\n          if (this.state.index_passed === 1 && current_dist > this.state.max_dist){\r\n            this.setState({max_dist: current_dist});\r\n            console.log(2);\r\n          }\r\n          if (this.state.index_passed === 1 && (this.state.max_dist - current_dist) > 0.05){\r\n            this.setState({index_passed:0,\r\n              min_dist: current_dist,\r\n              tap_count:[...this.state.tap_count, this.state.dist_time_record[i]]});\r\n            console.log(3);\r\n          }\r\n          if (this.state.index_passed === 0 && current_dist < this.state.min_dist){\r\n            this.setState({min_dist: current_dist});\r\n            console.log(4);\r\n          }\r\n          console.log(\"INDEX COUNT:\", this.state.tap_count);\r\n        });\r\n      }\r\n    }\r\n\r\n    // Run prediction on recorded rotation data\r\n    for (let i = 0; i<this.state.rotate_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.rotate_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => {\r\n          const landmarks = prediction.landmarks\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let rotate_dist = (landmarks[2][0] - landmarks[17][0]) / pawn_dist;\r\n          //this.setState({pawn_rotate_array:[...this.state.pawn_rotate_array, pawn_dist]});\r\n          this.setState({rotate_array:[...this.state.rotate_array, rotate_dist],\r\n            rotate_time_array:[...this.state.rotate_time_array, this.state.rotate_time_record[i]]});\r\n          if (this.state.rotate_passed === 0){\r\n            if (rotate_dist >= 0.5) this.setState({rotate_passed:1});\r\n            if (rotate_dist <= -0.5) this.setState({rotate_passed:-1});\r\n          }\r\n          if (this.state.rotate_passed === 1 && rotate_dist <= -0.5){\r\n            this.setState({rotate_passed:-1});\r\n          }\r\n          if (this.state.rotate_passed === -1 && rotate_dist >= 0.5){\r\n            this.setState({rotate_passed:1, \r\n              rotate_count:[...this.state.rotate_count, this.state.rotate_time_record[i]]});\r\n          }\r\n          console.log(\"ROTATE COUNT:\", this.state.rotate_count);\r\n        });\r\n      }\r\n    }\r\n\r\n    // Run prediction on recorded gripping data\r\n    for (let i = 0; i<this.state.fist_record.length; i++){\r\n      const hand = await net.estimateHands(this.state.fist_record[i]);\r\n      if (hand.length > 0){\r\n        hand.forEach((prediction) => {\r\n          const landmarks = prediction.landmarks\r\n          let pawn_dist = this.norm(landmarks[0], landmarks[2]);\r\n          let fist_dist =  ((landmarks[8][1] - landmarks[5][1])+\r\n            (landmarks[12][1] - landmarks[9][1])+\r\n            (landmarks[16][1] - landmarks[13][1])+\r\n            (landmarks[20][1] - landmarks[17][1]))/\r\n            (4*pawn_dist)\r\n          //this.setState({pawn_fist_array:[...this.state.pawn_fist_array, pawn_dist]});\r\n          this.setState({fist_array:[...this.state.fist_array, fist_dist]});\r\n          this.setState({fist_time_array:[...this.state.fist_time_array, this.state.fist_time_record[i]]});\r\n          if (fist_dist >= 0.0){this.setState({fist_passed:1})}\r\n          if (fist_dist < -0.4 && this.state.fist_passed === 1){\r\n            this.setState({fist_passed:0});\r\n            this.setState({fist_count:[...this.state.fist_count, this.state.fist_time_record[i]]});\r\n          }\r\n          console.log(\"FIST COUNT:\", this.state.fist_count);\r\n        });\r\n      }\r\n    }\r\n    this.setState({record:[]});\r\n  }\r\n\r\n  async stop_record() {\r\n    clearInterval(this.state.ID);\r\n    await this.inference();\r\n    this.setState({recording:false,\r\n      finger_done:false,\r\n      rotate_done:false,\r\n      fist_done:false});\r\n    this.compose_chart();\r\n  }\r\n\r\n  exportToJson = (objectData, filename) => {\r\n    let contentType = \"application/json;charset=utf-8;\";\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n      navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n      var a = document.createElement('a');\r\n      a.download = filename;\r\n      a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData));\r\n      a.target = '_blank';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    }\r\n  }\r\n \r\n  getArray = () => {\r\n    let dict = {\r\n      tap_count : this.state.tap_count,\r\n      rotate_count : this.state.rotate_count,\r\n      fist_count : this.state.fist_count,\r\n      dist_array : this.state.dist_array,\r\n      dist_time_array : this.state.dist_time_array,\r\n      dist_record : this.state.dist_record,\r\n      dist_time_record : this.state.dist_time_record,\r\n      rotate_array : this.state.rotate_array,\r\n      rotate_time_array : this.state.rotate_time_array,\r\n      rotate_record : this.state.rotate_record,\r\n      rotate_time_record : this.state.rotate_time_record,\r\n      fist_array : this.state.fist_array,\r\n      fist_time_array : this.state.fist_time_array,\r\n      fist_record : this.state.fist_record,\r\n      fist_time_record : this.state.fist_time_record,\r\n      gait_record : this.state.gait_record,\r\n      gait_time_record : this.state.gait_time_record,\r\n      startAt: this.state.startAt,\r\n      avg_fps: this.state.avg_fps,\r\n    }\r\n    this.exportToJson(dict, \"state\");\r\n  }\r\n\r\n  render(){\r\n    const videoConstraints = {\r\n      facingMode: this.state.facingMode\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <Webcam\r\n          ref={this.webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={this.canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n        </header>\r\n          {this.state.button_mode ? (\r\n            <div>\r\n              <button onClick={this.increment_tap1} id=\"button1\">Index Finger</button>\r\n              <button onClick={this.increment_tap2} id=\"button2\">Middle Finger</button>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n\r\n          <div>\r\n            {this.state.real_time_inferencing ? (\r\n              this.state.finger_done ? (\r\n                this.state.rotate_done ? (\r\n                  <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_real_time_inference}>Calculate Result</Button>\r\n                ):(\r\n                  <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_rotating}>Finish Rotating</Button>\r\n                )\r\n              ):(\r\n                <Button variant=\"contained\" color=\"primary\"  onClick={this.stop_tapping}>Finish Tapping</Button>\r\n              )            \r\n            ) : (\r\n            <Button disabled={this.state.recording} variant=\"contained\" color=\"primary\"  onClick={this.runHandpose}>Starting Real Time Inference</Button>\r\n            )}\r\n\r\n            {this.state.recording ? (\r\n              this.state.finger_done ? (\r\n                this.state.rotate_done ? (\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_record}>Calculate Result</Button>\r\n                ):(\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_rotating}>Finish Rotating</Button>\r\n                )\r\n              ):(\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.stop_tapping}>Finish Tapping</Button>\r\n              )            \r\n            ) : (\r\n            <Button disabled={this.state.real_time_inferencing} variant=\"contained\" color=\"secondary\" onClick={this.record_video}>Starting Recording</Button>\r\n            )}\r\n\r\n            <Button disabled={this.state.recording||this.state.real_time_inferencing} variant=\"outlined\" color=\"secondary\" onClick={this.reset_counter}>\r\n              Reset All\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <h5>\r\n              Finger Tapping Count:{this.state.tap_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              Rotate Count:{this.state.rotate_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              Gripping Count: {this.state.fist_count.length}&nbsp;&nbsp;&nbsp;&nbsp;\r\n              FPS: {this.state.avg_fps}\r\n            </h5>\r\n          </div>\r\n          <div>\r\n            <small>Enter Real Measurement (cm)</small>\r\n            <input type=\"number\" id=\"real_measurement\" onChange={this.compose_chart} step=\"0.001\" min='0' max='20'></input>\r\n            <button disabled={!this.state.chart_ready} onClick={this.switch_style}>Switch Chart Style</button>\r\n            <button onClick={this.switch_cam}>Switch Camera</button>\r\n          </div>\r\n          <div>\r\n            <small>Experimental Features</small>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.runPosenet}>PoseNet</button>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.runFacemesh}>Facemesh</button>\r\n            <button disabled={this.state.recording||this.state.real_time_inferencing} onClick={this.switch_button}>Switch On/Off Button</button>\r\n          </div>\r\n          <div>\r\n            {this.state.chart_ready ? (\r\n              <div>\r\n                <Line data={this.state.chart_data1} />\r\n                <Line data={this.state.chart_data2} />\r\n                <Line data={this.state.chart_data3} />\r\n              </div>\r\n            ) : (\r\n              <div/>\r\n            )}\r\n            <div>\r\n              <input type=\"file\" id=\"upload-json\"></input>\r\n            </div>\r\n            <div>\r\n              <input type=\"file\" id=\"upload-weights\"></input>\r\n            </div>\r\n            <button onClick={this.getArray}>Get Array</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}